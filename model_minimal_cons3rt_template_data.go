/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// MinimalCons3rtTemplateData struct for MinimalCons3rtTemplateData
type MinimalCons3rtTemplateData struct {
	Id                    *int32                       `json:"id,omitempty"`
	DisplayName           *string                      `json:"displayName,omitempty"`
	OperatingSystem       *string                      `json:"operatingSystem,omitempty"`
	VirtRealmId           *int32                       `json:"virtRealmId,omitempty"`
	VirtRealmTemplateName string                       `json:"virtRealmTemplateName"`
	TemplateRegistration  *MinimalTemplateRegistration `json:"templateRegistration,omitempty"`
}

// NewMinimalCons3rtTemplateData instantiates a new MinimalCons3rtTemplateData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMinimalCons3rtTemplateData(virtRealmTemplateName string) *MinimalCons3rtTemplateData {
	this := MinimalCons3rtTemplateData{}
	this.VirtRealmTemplateName = virtRealmTemplateName
	return &this
}

// NewMinimalCons3rtTemplateDataWithDefaults instantiates a new MinimalCons3rtTemplateData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMinimalCons3rtTemplateDataWithDefaults() *MinimalCons3rtTemplateData {
	this := MinimalCons3rtTemplateData{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MinimalCons3rtTemplateData) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalCons3rtTemplateData) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MinimalCons3rtTemplateData) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MinimalCons3rtTemplateData) SetId(v int32) {
	o.Id = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *MinimalCons3rtTemplateData) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalCons3rtTemplateData) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *MinimalCons3rtTemplateData) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *MinimalCons3rtTemplateData) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetOperatingSystem returns the OperatingSystem field value if set, zero value otherwise.
func (o *MinimalCons3rtTemplateData) GetOperatingSystem() string {
	if o == nil || o.OperatingSystem == nil {
		var ret string
		return ret
	}
	return *o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalCons3rtTemplateData) GetOperatingSystemOk() (*string, bool) {
	if o == nil || o.OperatingSystem == nil {
		return nil, false
	}
	return o.OperatingSystem, true
}

// HasOperatingSystem returns a boolean if a field has been set.
func (o *MinimalCons3rtTemplateData) HasOperatingSystem() bool {
	if o != nil && o.OperatingSystem != nil {
		return true
	}

	return false
}

// SetOperatingSystem gets a reference to the given string and assigns it to the OperatingSystem field.
func (o *MinimalCons3rtTemplateData) SetOperatingSystem(v string) {
	o.OperatingSystem = &v
}

// GetVirtRealmId returns the VirtRealmId field value if set, zero value otherwise.
func (o *MinimalCons3rtTemplateData) GetVirtRealmId() int32 {
	if o == nil || o.VirtRealmId == nil {
		var ret int32
		return ret
	}
	return *o.VirtRealmId
}

// GetVirtRealmIdOk returns a tuple with the VirtRealmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalCons3rtTemplateData) GetVirtRealmIdOk() (*int32, bool) {
	if o == nil || o.VirtRealmId == nil {
		return nil, false
	}
	return o.VirtRealmId, true
}

// HasVirtRealmId returns a boolean if a field has been set.
func (o *MinimalCons3rtTemplateData) HasVirtRealmId() bool {
	if o != nil && o.VirtRealmId != nil {
		return true
	}

	return false
}

// SetVirtRealmId gets a reference to the given int32 and assigns it to the VirtRealmId field.
func (o *MinimalCons3rtTemplateData) SetVirtRealmId(v int32) {
	o.VirtRealmId = &v
}

// GetVirtRealmTemplateName returns the VirtRealmTemplateName field value
func (o *MinimalCons3rtTemplateData) GetVirtRealmTemplateName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VirtRealmTemplateName
}

// GetVirtRealmTemplateNameOk returns a tuple with the VirtRealmTemplateName field value
// and a boolean to check if the value has been set.
func (o *MinimalCons3rtTemplateData) GetVirtRealmTemplateNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VirtRealmTemplateName, true
}

// SetVirtRealmTemplateName sets field value
func (o *MinimalCons3rtTemplateData) SetVirtRealmTemplateName(v string) {
	o.VirtRealmTemplateName = v
}

// GetTemplateRegistration returns the TemplateRegistration field value if set, zero value otherwise.
func (o *MinimalCons3rtTemplateData) GetTemplateRegistration() MinimalTemplateRegistration {
	if o == nil || o.TemplateRegistration == nil {
		var ret MinimalTemplateRegistration
		return ret
	}
	return *o.TemplateRegistration
}

// GetTemplateRegistrationOk returns a tuple with the TemplateRegistration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalCons3rtTemplateData) GetTemplateRegistrationOk() (*MinimalTemplateRegistration, bool) {
	if o == nil || o.TemplateRegistration == nil {
		return nil, false
	}
	return o.TemplateRegistration, true
}

// HasTemplateRegistration returns a boolean if a field has been set.
func (o *MinimalCons3rtTemplateData) HasTemplateRegistration() bool {
	if o != nil && o.TemplateRegistration != nil {
		return true
	}

	return false
}

// SetTemplateRegistration gets a reference to the given MinimalTemplateRegistration and assigns it to the TemplateRegistration field.
func (o *MinimalCons3rtTemplateData) SetTemplateRegistration(v MinimalTemplateRegistration) {
	o.TemplateRegistration = &v
}

func (o MinimalCons3rtTemplateData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.DisplayName != nil {
		toSerialize["displayName"] = o.DisplayName
	}
	if o.OperatingSystem != nil {
		toSerialize["operatingSystem"] = o.OperatingSystem
	}
	if o.VirtRealmId != nil {
		toSerialize["virtRealmId"] = o.VirtRealmId
	}
	if true {
		toSerialize["virtRealmTemplateName"] = o.VirtRealmTemplateName
	}
	if o.TemplateRegistration != nil {
		toSerialize["templateRegistration"] = o.TemplateRegistration
	}
	return json.Marshal(toSerialize)
}

type NullableMinimalCons3rtTemplateData struct {
	value *MinimalCons3rtTemplateData
	isSet bool
}

func (v NullableMinimalCons3rtTemplateData) Get() *MinimalCons3rtTemplateData {
	return v.value
}

func (v *NullableMinimalCons3rtTemplateData) Set(val *MinimalCons3rtTemplateData) {
	v.value = val
	v.isSet = true
}

func (v NullableMinimalCons3rtTemplateData) IsSet() bool {
	return v.isSet
}

func (v *NullableMinimalCons3rtTemplateData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMinimalCons3rtTemplateData(val *MinimalCons3rtTemplateData) *NullableMinimalCons3rtTemplateData {
	return &NullableMinimalCons3rtTemplateData{value: val, isSet: true}
}

func (v NullableMinimalCons3rtTemplateData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMinimalCons3rtTemplateData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
