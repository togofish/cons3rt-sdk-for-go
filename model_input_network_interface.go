/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// InputNetworkInterface struct for InputNetworkInterface
type InputNetworkInterface struct {
	InternalIpAddress *string `json:"internalIpAddress,omitempty"`
	MacAddress *string `json:"macAddress,omitempty"`
	NetworkFunction string `json:"networkFunction"`
	NetworkName string `json:"networkName"`
	NetworkIdentifier string `json:"networkIdentifier"`
}

// NewInputNetworkInterface instantiates a new InputNetworkInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputNetworkInterface(networkFunction string, networkName string, networkIdentifier string) *InputNetworkInterface {
	this := InputNetworkInterface{}
	this.NetworkFunction = networkFunction
	this.NetworkName = networkName
	this.NetworkIdentifier = networkIdentifier
	return &this
}

// NewInputNetworkInterfaceWithDefaults instantiates a new InputNetworkInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputNetworkInterfaceWithDefaults() *InputNetworkInterface {
	this := InputNetworkInterface{}
	return &this
}

// GetInternalIpAddress returns the InternalIpAddress field value if set, zero value otherwise.
func (o *InputNetworkInterface) GetInternalIpAddress() string {
	if o == nil || o.InternalIpAddress == nil {
		var ret string
		return ret
	}
	return *o.InternalIpAddress
}

// GetInternalIpAddressOk returns a tuple with the InternalIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputNetworkInterface) GetInternalIpAddressOk() (*string, bool) {
	if o == nil || o.InternalIpAddress == nil {
		return nil, false
	}
	return o.InternalIpAddress, true
}

// HasInternalIpAddress returns a boolean if a field has been set.
func (o *InputNetworkInterface) HasInternalIpAddress() bool {
	if o != nil && o.InternalIpAddress != nil {
		return true
	}

	return false
}

// SetInternalIpAddress gets a reference to the given string and assigns it to the InternalIpAddress field.
func (o *InputNetworkInterface) SetInternalIpAddress(v string) {
	o.InternalIpAddress = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *InputNetworkInterface) GetMacAddress() string {
	if o == nil || o.MacAddress == nil {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputNetworkInterface) GetMacAddressOk() (*string, bool) {
	if o == nil || o.MacAddress == nil {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *InputNetworkInterface) HasMacAddress() bool {
	if o != nil && o.MacAddress != nil {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *InputNetworkInterface) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetNetworkFunction returns the NetworkFunction field value
func (o *InputNetworkInterface) GetNetworkFunction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkFunction
}

// GetNetworkFunctionOk returns a tuple with the NetworkFunction field value
// and a boolean to check if the value has been set.
func (o *InputNetworkInterface) GetNetworkFunctionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetworkFunction, true
}

// SetNetworkFunction sets field value
func (o *InputNetworkInterface) SetNetworkFunction(v string) {
	o.NetworkFunction = v
}

// GetNetworkName returns the NetworkName field value
func (o *InputNetworkInterface) GetNetworkName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkName
}

// GetNetworkNameOk returns a tuple with the NetworkName field value
// and a boolean to check if the value has been set.
func (o *InputNetworkInterface) GetNetworkNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetworkName, true
}

// SetNetworkName sets field value
func (o *InputNetworkInterface) SetNetworkName(v string) {
	o.NetworkName = v
}

// GetNetworkIdentifier returns the NetworkIdentifier field value
func (o *InputNetworkInterface) GetNetworkIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkIdentifier
}

// GetNetworkIdentifierOk returns a tuple with the NetworkIdentifier field value
// and a boolean to check if the value has been set.
func (o *InputNetworkInterface) GetNetworkIdentifierOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NetworkIdentifier, true
}

// SetNetworkIdentifier sets field value
func (o *InputNetworkInterface) SetNetworkIdentifier(v string) {
	o.NetworkIdentifier = v
}

func (o InputNetworkInterface) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InternalIpAddress != nil {
		toSerialize["internalIpAddress"] = o.InternalIpAddress
	}
	if o.MacAddress != nil {
		toSerialize["macAddress"] = o.MacAddress
	}
	if true {
		toSerialize["networkFunction"] = o.NetworkFunction
	}
	if true {
		toSerialize["networkName"] = o.NetworkName
	}
	if true {
		toSerialize["networkIdentifier"] = o.NetworkIdentifier
	}
	return json.Marshal(toSerialize)
}

type NullableInputNetworkInterface struct {
	value *InputNetworkInterface
	isSet bool
}

func (v NullableInputNetworkInterface) Get() *InputNetworkInterface {
	return v.value
}

func (v *NullableInputNetworkInterface) Set(val *InputNetworkInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableInputNetworkInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableInputNetworkInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputNetworkInterface(val *InputNetworkInterface) *NullableInputNetworkInterface {
	return &NullableInputNetworkInterface{value: val, isSet: true}
}

func (v NullableInputNetworkInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputNetworkInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


