/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// AbstractProviderClientConfiguration struct for AbstractProviderClientConfiguration
type AbstractProviderClientConfiguration struct {
	Debug     *bool  `json:"debug,omitempty"`
	AccountId string `json:"accountId"`
	Password  string `json:"password"`
	Username  string `json:"username"`
	Subtype   string `json:"subtype"`
}

// NewAbstractProviderClientConfiguration instantiates a new AbstractProviderClientConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAbstractProviderClientConfiguration(accountId string, password string, username string, subtype string) *AbstractProviderClientConfiguration {
	this := AbstractProviderClientConfiguration{}
	this.AccountId = accountId
	this.Password = password
	this.Username = username
	this.Subtype = subtype
	return &this
}

// NewAbstractProviderClientConfigurationWithDefaults instantiates a new AbstractProviderClientConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAbstractProviderClientConfigurationWithDefaults() *AbstractProviderClientConfiguration {
	this := AbstractProviderClientConfiguration{}
	return &this
}

// GetDebug returns the Debug field value if set, zero value otherwise.
func (o *AbstractProviderClientConfiguration) GetDebug() bool {
	if o == nil || o.Debug == nil {
		var ret bool
		return ret
	}
	return *o.Debug
}

// GetDebugOk returns a tuple with the Debug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractProviderClientConfiguration) GetDebugOk() (*bool, bool) {
	if o == nil || o.Debug == nil {
		return nil, false
	}
	return o.Debug, true
}

// HasDebug returns a boolean if a field has been set.
func (o *AbstractProviderClientConfiguration) HasDebug() bool {
	if o != nil && o.Debug != nil {
		return true
	}

	return false
}

// SetDebug gets a reference to the given bool and assigns it to the Debug field.
func (o *AbstractProviderClientConfiguration) SetDebug(v bool) {
	o.Debug = &v
}

// GetAccountId returns the AccountId field value
func (o *AbstractProviderClientConfiguration) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *AbstractProviderClientConfiguration) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *AbstractProviderClientConfiguration) SetAccountId(v string) {
	o.AccountId = v
}

// GetPassword returns the Password field value
func (o *AbstractProviderClientConfiguration) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *AbstractProviderClientConfiguration) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *AbstractProviderClientConfiguration) SetPassword(v string) {
	o.Password = v
}

// GetUsername returns the Username field value
func (o *AbstractProviderClientConfiguration) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *AbstractProviderClientConfiguration) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *AbstractProviderClientConfiguration) SetUsername(v string) {
	o.Username = v
}

// GetSubtype returns the Subtype field value
func (o *AbstractProviderClientConfiguration) GetSubtype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subtype
}

// GetSubtypeOk returns a tuple with the Subtype field value
// and a boolean to check if the value has been set.
func (o *AbstractProviderClientConfiguration) GetSubtypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subtype, true
}

// SetSubtype sets field value
func (o *AbstractProviderClientConfiguration) SetSubtype(v string) {
	o.Subtype = v
}

func (o AbstractProviderClientConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Debug != nil {
		toSerialize["debug"] = o.Debug
	}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["subtype"] = o.Subtype
	}
	return json.Marshal(toSerialize)
}

type NullableAbstractProviderClientConfiguration struct {
	value *AbstractProviderClientConfiguration
	isSet bool
}

func (v NullableAbstractProviderClientConfiguration) Get() *AbstractProviderClientConfiguration {
	return v.value
}

func (v *NullableAbstractProviderClientConfiguration) Set(val *AbstractProviderClientConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableAbstractProviderClientConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableAbstractProviderClientConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAbstractProviderClientConfiguration(val *AbstractProviderClientConfiguration) *NullableAbstractProviderClientConfiguration {
	return &NullableAbstractProviderClientConfiguration{value: val, isSet: true}
}

func (v NullableAbstractProviderClientConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAbstractProviderClientConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
