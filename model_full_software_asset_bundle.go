/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// FullSoftwareAssetBundle struct for FullSoftwareAssetBundle
type FullSoftwareAssetBundle struct {
	SoftwareComponents *[]MinimalSoftwareComponent `json:"softwareComponents,omitempty"`
}

// NewFullSoftwareAssetBundle instantiates a new FullSoftwareAssetBundle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFullSoftwareAssetBundle(subtype string) *FullSoftwareAssetBundle {
	this := FullSoftwareAssetBundle{}
	this.Subtype = subtype
	return &this
}

// NewFullSoftwareAssetBundleWithDefaults instantiates a new FullSoftwareAssetBundle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFullSoftwareAssetBundleWithDefaults() *FullSoftwareAssetBundle {
	this := FullSoftwareAssetBundle{}
	return &this
}

// GetSoftwareComponents returns the SoftwareComponents field value if set, zero value otherwise.
func (o *FullSoftwareAssetBundle) GetSoftwareComponents() []MinimalSoftwareComponent {
	if o == nil || o.SoftwareComponents == nil {
		var ret []MinimalSoftwareComponent
		return ret
	}
	return *o.SoftwareComponents
}

// GetSoftwareComponentsOk returns a tuple with the SoftwareComponents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullSoftwareAssetBundle) GetSoftwareComponentsOk() (*[]MinimalSoftwareComponent, bool) {
	if o == nil || o.SoftwareComponents == nil {
		return nil, false
	}
	return o.SoftwareComponents, true
}

// HasSoftwareComponents returns a boolean if a field has been set.
func (o *FullSoftwareAssetBundle) HasSoftwareComponents() bool {
	if o != nil && o.SoftwareComponents != nil {
		return true
	}

	return false
}

// SetSoftwareComponents gets a reference to the given []MinimalSoftwareComponent and assigns it to the SoftwareComponents field.
func (o *FullSoftwareAssetBundle) SetSoftwareComponents(v []MinimalSoftwareComponent) {
	o.SoftwareComponents = &v
}

func (o FullSoftwareAssetBundle) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SoftwareComponents != nil {
		toSerialize["softwareComponents"] = o.SoftwareComponents
	}
	return json.Marshal(toSerialize)
}

type NullableFullSoftwareAssetBundle struct {
	value *FullSoftwareAssetBundle
	isSet bool
}

func (v NullableFullSoftwareAssetBundle) Get() *FullSoftwareAssetBundle {
	return v.value
}

func (v *NullableFullSoftwareAssetBundle) Set(val *FullSoftwareAssetBundle) {
	v.value = val
	v.isSet = true
}

func (v NullableFullSoftwareAssetBundle) IsSet() bool {
	return v.isSet
}

func (v *NullableFullSoftwareAssetBundle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFullSoftwareAssetBundle(val *FullSoftwareAssetBundle) *NullableFullSoftwareAssetBundle {
	return &NullableFullSoftwareAssetBundle{value: val, isSet: true}
}

func (v NullableFullSoftwareAssetBundle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFullSoftwareAssetBundle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


