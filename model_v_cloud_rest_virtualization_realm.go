/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// VCloudRestVirtualizationRealm struct for VCloudRestVirtualizationRealm
type VCloudRestVirtualizationRealm struct {
	Organization    *string `json:"organization,omitempty"`
	OrganizationVdc *string `json:"organizationVdc,omitempty"`
	VdcNetworkQuota *int32  `json:"vdcNetworkQuota,omitempty"`
	AccountId       string
	Cidr            string
	Description     string
	Name            string
	Password        string
	Username        string
}

// NewVCloudRestVirtualizationRealm instantiates a new VCloudRestVirtualizationRealm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVCloudRestVirtualizationRealm(accountId string, cidr string, description string, name string, password string, username string) *VCloudRestVirtualizationRealm {
	this := VCloudRestVirtualizationRealm{}
	this.AccountId = accountId
	this.Cidr = cidr
	this.Description = description
	this.Name = name
	this.Password = password
	this.Username = username
	return &this
}

// NewVCloudRestVirtualizationRealmWithDefaults instantiates a new VCloudRestVirtualizationRealm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVCloudRestVirtualizationRealmWithDefaults() *VCloudRestVirtualizationRealm {
	this := VCloudRestVirtualizationRealm{}
	return &this
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *VCloudRestVirtualizationRealm) GetOrganization() string {
	if o == nil || o.Organization == nil {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCloudRestVirtualizationRealm) GetOrganizationOk() (*string, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *VCloudRestVirtualizationRealm) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *VCloudRestVirtualizationRealm) SetOrganization(v string) {
	o.Organization = &v
}

// GetOrganizationVdc returns the OrganizationVdc field value if set, zero value otherwise.
func (o *VCloudRestVirtualizationRealm) GetOrganizationVdc() string {
	if o == nil || o.OrganizationVdc == nil {
		var ret string
		return ret
	}
	return *o.OrganizationVdc
}

// GetOrganizationVdcOk returns a tuple with the OrganizationVdc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCloudRestVirtualizationRealm) GetOrganizationVdcOk() (*string, bool) {
	if o == nil || o.OrganizationVdc == nil {
		return nil, false
	}
	return o.OrganizationVdc, true
}

// HasOrganizationVdc returns a boolean if a field has been set.
func (o *VCloudRestVirtualizationRealm) HasOrganizationVdc() bool {
	if o != nil && o.OrganizationVdc != nil {
		return true
	}

	return false
}

// SetOrganizationVdc gets a reference to the given string and assigns it to the OrganizationVdc field.
func (o *VCloudRestVirtualizationRealm) SetOrganizationVdc(v string) {
	o.OrganizationVdc = &v
}

// GetVdcNetworkQuota returns the VdcNetworkQuota field value if set, zero value otherwise.
func (o *VCloudRestVirtualizationRealm) GetVdcNetworkQuota() int32 {
	if o == nil || o.VdcNetworkQuota == nil {
		var ret int32
		return ret
	}
	return *o.VdcNetworkQuota
}

// GetVdcNetworkQuotaOk returns a tuple with the VdcNetworkQuota field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VCloudRestVirtualizationRealm) GetVdcNetworkQuotaOk() (*int32, bool) {
	if o == nil || o.VdcNetworkQuota == nil {
		return nil, false
	}
	return o.VdcNetworkQuota, true
}

// HasVdcNetworkQuota returns a boolean if a field has been set.
func (o *VCloudRestVirtualizationRealm) HasVdcNetworkQuota() bool {
	if o != nil && o.VdcNetworkQuota != nil {
		return true
	}

	return false
}

// SetVdcNetworkQuota gets a reference to the given int32 and assigns it to the VdcNetworkQuota field.
func (o *VCloudRestVirtualizationRealm) SetVdcNetworkQuota(v int32) {
	o.VdcNetworkQuota = &v
}

func (o VCloudRestVirtualizationRealm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.OrganizationVdc != nil {
		toSerialize["organizationVdc"] = o.OrganizationVdc
	}
	if o.VdcNetworkQuota != nil {
		toSerialize["vdcNetworkQuota"] = o.VdcNetworkQuota
	}
	return json.Marshal(toSerialize)
}

type NullableVCloudRestVirtualizationRealm struct {
	value *VCloudRestVirtualizationRealm
	isSet bool
}

func (v NullableVCloudRestVirtualizationRealm) Get() *VCloudRestVirtualizationRealm {
	return v.value
}

func (v *NullableVCloudRestVirtualizationRealm) Set(val *VCloudRestVirtualizationRealm) {
	v.value = val
	v.isSet = true
}

func (v NullableVCloudRestVirtualizationRealm) IsSet() bool {
	return v.isSet
}

func (v *NullableVCloudRestVirtualizationRealm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVCloudRestVirtualizationRealm(val *VCloudRestVirtualizationRealm) *NullableVCloudRestVirtualizationRealm {
	return &NullableVCloudRestVirtualizationRealm{value: val, isSet: true}
}

func (v NullableVCloudRestVirtualizationRealm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVCloudRestVirtualizationRealm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
