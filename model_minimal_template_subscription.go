/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// MinimalTemplateSubscription struct for MinimalTemplateSubscription
type MinimalTemplateSubscription struct {
	Id                   *int32                       `json:"id,omitempty"`
	State                *string                      `json:"state,omitempty"`
	TemplateRegistration *MinimalTemplateRegistration `json:"templateRegistration,omitempty"`
}

// NewMinimalTemplateSubscription instantiates a new MinimalTemplateSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMinimalTemplateSubscription() *MinimalTemplateSubscription {
	this := MinimalTemplateSubscription{}
	return &this
}

// NewMinimalTemplateSubscriptionWithDefaults instantiates a new MinimalTemplateSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMinimalTemplateSubscriptionWithDefaults() *MinimalTemplateSubscription {
	this := MinimalTemplateSubscription{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MinimalTemplateSubscription) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalTemplateSubscription) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MinimalTemplateSubscription) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MinimalTemplateSubscription) SetId(v int32) {
	o.Id = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *MinimalTemplateSubscription) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalTemplateSubscription) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *MinimalTemplateSubscription) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *MinimalTemplateSubscription) SetState(v string) {
	o.State = &v
}

// GetTemplateRegistration returns the TemplateRegistration field value if set, zero value otherwise.
func (o *MinimalTemplateSubscription) GetTemplateRegistration() MinimalTemplateRegistration {
	if o == nil || o.TemplateRegistration == nil {
		var ret MinimalTemplateRegistration
		return ret
	}
	return *o.TemplateRegistration
}

// GetTemplateRegistrationOk returns a tuple with the TemplateRegistration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalTemplateSubscription) GetTemplateRegistrationOk() (*MinimalTemplateRegistration, bool) {
	if o == nil || o.TemplateRegistration == nil {
		return nil, false
	}
	return o.TemplateRegistration, true
}

// HasTemplateRegistration returns a boolean if a field has been set.
func (o *MinimalTemplateSubscription) HasTemplateRegistration() bool {
	if o != nil && o.TemplateRegistration != nil {
		return true
	}

	return false
}

// SetTemplateRegistration gets a reference to the given MinimalTemplateRegistration and assigns it to the TemplateRegistration field.
func (o *MinimalTemplateSubscription) SetTemplateRegistration(v MinimalTemplateRegistration) {
	o.TemplateRegistration = &v
}

func (o MinimalTemplateSubscription) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.TemplateRegistration != nil {
		toSerialize["templateRegistration"] = o.TemplateRegistration
	}
	return json.Marshal(toSerialize)
}

type NullableMinimalTemplateSubscription struct {
	value *MinimalTemplateSubscription
	isSet bool
}

func (v NullableMinimalTemplateSubscription) Get() *MinimalTemplateSubscription {
	return v.value
}

func (v *NullableMinimalTemplateSubscription) Set(val *MinimalTemplateSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableMinimalTemplateSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableMinimalTemplateSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMinimalTemplateSubscription(val *MinimalTemplateSubscription) *NullableMinimalTemplateSubscription {
	return &NullableMinimalTemplateSubscription{value: val, isSet: true}
}

func (v NullableMinimalTemplateSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMinimalTemplateSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
