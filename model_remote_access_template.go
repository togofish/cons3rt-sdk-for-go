/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// RemoteAccessTemplate struct for RemoteAccessTemplate
type RemoteAccessTemplate struct {
	Id *int32 `json:"id,omitempty"`
	Name string `json:"name"`
	Type string `json:"type"`
	Port int32 `json:"port"`
	Password *string `json:"password,omitempty"`
}

// NewRemoteAccessTemplate instantiates a new RemoteAccessTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRemoteAccessTemplate(name string, type_ string, port int32) *RemoteAccessTemplate {
	this := RemoteAccessTemplate{}
	this.Name = name
	this.Type = type_
	this.Port = port
	return &this
}

// NewRemoteAccessTemplateWithDefaults instantiates a new RemoteAccessTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRemoteAccessTemplateWithDefaults() *RemoteAccessTemplate {
	this := RemoteAccessTemplate{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RemoteAccessTemplate) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteAccessTemplate) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RemoteAccessTemplate) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *RemoteAccessTemplate) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *RemoteAccessTemplate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RemoteAccessTemplate) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RemoteAccessTemplate) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *RemoteAccessTemplate) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RemoteAccessTemplate) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RemoteAccessTemplate) SetType(v string) {
	o.Type = v
}

// GetPort returns the Port field value
func (o *RemoteAccessTemplate) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *RemoteAccessTemplate) GetPortOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *RemoteAccessTemplate) SetPort(v int32) {
	o.Port = v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *RemoteAccessTemplate) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RemoteAccessTemplate) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *RemoteAccessTemplate) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *RemoteAccessTemplate) SetPassword(v string) {
	o.Password = &v
}

func (o RemoteAccessTemplate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["port"] = o.Port
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	return json.Marshal(toSerialize)
}

type NullableRemoteAccessTemplate struct {
	value *RemoteAccessTemplate
	isSet bool
}

func (v NullableRemoteAccessTemplate) Get() *RemoteAccessTemplate {
	return v.value
}

func (v *NullableRemoteAccessTemplate) Set(val *RemoteAccessTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableRemoteAccessTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableRemoteAccessTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRemoteAccessTemplate(val *RemoteAccessTemplate) *NullableRemoteAccessTemplate {
	return &NullableRemoteAccessTemplate{value: val, isSet: true}
}

func (v NullableRemoteAccessTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRemoteAccessTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


