/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// MinimalDeploymentHost struct for MinimalDeploymentHost
type MinimalDeploymentHost struct {
	AdditionalDisks *[]FullDisk          `json:"additionalDisks,omitempty"`
	Id              *int32               `json:"id,omitempty"`
	NumCpus         *int32               `json:"numCpus,omitempty"`
	Ram             *int32               `json:"ram,omitempty"`
	BuildOrder      *int32               `json:"buildOrder,omitempty"`
	SystemModule    *MinimalSystemModule `json:"systemModule,omitempty"`
	SystemRole      *string              `json:"systemRole,omitempty"`
}

// NewMinimalDeploymentHost instantiates a new MinimalDeploymentHost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMinimalDeploymentHost() *MinimalDeploymentHost {
	this := MinimalDeploymentHost{}
	return &this
}

// NewMinimalDeploymentHostWithDefaults instantiates a new MinimalDeploymentHost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMinimalDeploymentHostWithDefaults() *MinimalDeploymentHost {
	this := MinimalDeploymentHost{}
	return &this
}

// GetAdditionalDisks returns the AdditionalDisks field value if set, zero value otherwise.
func (o *MinimalDeploymentHost) GetAdditionalDisks() []FullDisk {
	if o == nil || o.AdditionalDisks == nil {
		var ret []FullDisk
		return ret
	}
	return *o.AdditionalDisks
}

// GetAdditionalDisksOk returns a tuple with the AdditionalDisks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalDeploymentHost) GetAdditionalDisksOk() (*[]FullDisk, bool) {
	if o == nil || o.AdditionalDisks == nil {
		return nil, false
	}
	return o.AdditionalDisks, true
}

// HasAdditionalDisks returns a boolean if a field has been set.
func (o *MinimalDeploymentHost) HasAdditionalDisks() bool {
	if o != nil && o.AdditionalDisks != nil {
		return true
	}

	return false
}

// SetAdditionalDisks gets a reference to the given []FullDisk and assigns it to the AdditionalDisks field.
func (o *MinimalDeploymentHost) SetAdditionalDisks(v []FullDisk) {
	o.AdditionalDisks = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MinimalDeploymentHost) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalDeploymentHost) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MinimalDeploymentHost) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MinimalDeploymentHost) SetId(v int32) {
	o.Id = &v
}

// GetNumCpus returns the NumCpus field value if set, zero value otherwise.
func (o *MinimalDeploymentHost) GetNumCpus() int32 {
	if o == nil || o.NumCpus == nil {
		var ret int32
		return ret
	}
	return *o.NumCpus
}

// GetNumCpusOk returns a tuple with the NumCpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalDeploymentHost) GetNumCpusOk() (*int32, bool) {
	if o == nil || o.NumCpus == nil {
		return nil, false
	}
	return o.NumCpus, true
}

// HasNumCpus returns a boolean if a field has been set.
func (o *MinimalDeploymentHost) HasNumCpus() bool {
	if o != nil && o.NumCpus != nil {
		return true
	}

	return false
}

// SetNumCpus gets a reference to the given int32 and assigns it to the NumCpus field.
func (o *MinimalDeploymentHost) SetNumCpus(v int32) {
	o.NumCpus = &v
}

// GetRam returns the Ram field value if set, zero value otherwise.
func (o *MinimalDeploymentHost) GetRam() int32 {
	if o == nil || o.Ram == nil {
		var ret int32
		return ret
	}
	return *o.Ram
}

// GetRamOk returns a tuple with the Ram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalDeploymentHost) GetRamOk() (*int32, bool) {
	if o == nil || o.Ram == nil {
		return nil, false
	}
	return o.Ram, true
}

// HasRam returns a boolean if a field has been set.
func (o *MinimalDeploymentHost) HasRam() bool {
	if o != nil && o.Ram != nil {
		return true
	}

	return false
}

// SetRam gets a reference to the given int32 and assigns it to the Ram field.
func (o *MinimalDeploymentHost) SetRam(v int32) {
	o.Ram = &v
}

// GetBuildOrder returns the BuildOrder field value if set, zero value otherwise.
func (o *MinimalDeploymentHost) GetBuildOrder() int32 {
	if o == nil || o.BuildOrder == nil {
		var ret int32
		return ret
	}
	return *o.BuildOrder
}

// GetBuildOrderOk returns a tuple with the BuildOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalDeploymentHost) GetBuildOrderOk() (*int32, bool) {
	if o == nil || o.BuildOrder == nil {
		return nil, false
	}
	return o.BuildOrder, true
}

// HasBuildOrder returns a boolean if a field has been set.
func (o *MinimalDeploymentHost) HasBuildOrder() bool {
	if o != nil && o.BuildOrder != nil {
		return true
	}

	return false
}

// SetBuildOrder gets a reference to the given int32 and assigns it to the BuildOrder field.
func (o *MinimalDeploymentHost) SetBuildOrder(v int32) {
	o.BuildOrder = &v
}

// GetSystemModule returns the SystemModule field value if set, zero value otherwise.
func (o *MinimalDeploymentHost) GetSystemModule() MinimalSystemModule {
	if o == nil || o.SystemModule == nil {
		var ret MinimalSystemModule
		return ret
	}
	return *o.SystemModule
}

// GetSystemModuleOk returns a tuple with the SystemModule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalDeploymentHost) GetSystemModuleOk() (*MinimalSystemModule, bool) {
	if o == nil || o.SystemModule == nil {
		return nil, false
	}
	return o.SystemModule, true
}

// HasSystemModule returns a boolean if a field has been set.
func (o *MinimalDeploymentHost) HasSystemModule() bool {
	if o != nil && o.SystemModule != nil {
		return true
	}

	return false
}

// SetSystemModule gets a reference to the given MinimalSystemModule and assigns it to the SystemModule field.
func (o *MinimalDeploymentHost) SetSystemModule(v MinimalSystemModule) {
	o.SystemModule = &v
}

// GetSystemRole returns the SystemRole field value if set, zero value otherwise.
func (o *MinimalDeploymentHost) GetSystemRole() string {
	if o == nil || o.SystemRole == nil {
		var ret string
		return ret
	}
	return *o.SystemRole
}

// GetSystemRoleOk returns a tuple with the SystemRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalDeploymentHost) GetSystemRoleOk() (*string, bool) {
	if o == nil || o.SystemRole == nil {
		return nil, false
	}
	return o.SystemRole, true
}

// HasSystemRole returns a boolean if a field has been set.
func (o *MinimalDeploymentHost) HasSystemRole() bool {
	if o != nil && o.SystemRole != nil {
		return true
	}

	return false
}

// SetSystemRole gets a reference to the given string and assigns it to the SystemRole field.
func (o *MinimalDeploymentHost) SetSystemRole(v string) {
	o.SystemRole = &v
}

func (o MinimalDeploymentHost) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalDisks != nil {
		toSerialize["additionalDisks"] = o.AdditionalDisks
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.NumCpus != nil {
		toSerialize["numCpus"] = o.NumCpus
	}
	if o.Ram != nil {
		toSerialize["ram"] = o.Ram
	}
	if o.BuildOrder != nil {
		toSerialize["buildOrder"] = o.BuildOrder
	}
	if o.SystemModule != nil {
		toSerialize["systemModule"] = o.SystemModule
	}
	if o.SystemRole != nil {
		toSerialize["systemRole"] = o.SystemRole
	}
	return json.Marshal(toSerialize)
}

type NullableMinimalDeploymentHost struct {
	value *MinimalDeploymentHost
	isSet bool
}

func (v NullableMinimalDeploymentHost) Get() *MinimalDeploymentHost {
	return v.value
}

func (v *NullableMinimalDeploymentHost) Set(val *MinimalDeploymentHost) {
	v.value = val
	v.isSet = true
}

func (v NullableMinimalDeploymentHost) IsSet() bool {
	return v.isSet
}

func (v *NullableMinimalDeploymentHost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMinimalDeploymentHost(val *MinimalDeploymentHost) *NullableMinimalDeploymentHost {
	return &NullableMinimalDeploymentHost{value: val, isSet: true}
}

func (v NullableMinimalDeploymentHost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMinimalDeploymentHost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
