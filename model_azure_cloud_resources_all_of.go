/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AzureCloudResourcesAllOf struct for AzureCloudResourcesAllOf
type AzureCloudResourcesAllOf struct {
	Images *[]ImageReferenceDTO `json:"images,omitempty"`
}

// NewAzureCloudResourcesAllOf instantiates a new AzureCloudResourcesAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureCloudResourcesAllOf() *AzureCloudResourcesAllOf {
	this := AzureCloudResourcesAllOf{}
	return &this
}

// NewAzureCloudResourcesAllOfWithDefaults instantiates a new AzureCloudResourcesAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureCloudResourcesAllOfWithDefaults() *AzureCloudResourcesAllOf {
	this := AzureCloudResourcesAllOf{}
	return &this
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *AzureCloudResourcesAllOf) GetImages() []ImageReferenceDTO {
	if o == nil || o.Images == nil {
		var ret []ImageReferenceDTO
		return ret
	}
	return *o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureCloudResourcesAllOf) GetImagesOk() (*[]ImageReferenceDTO, bool) {
	if o == nil || o.Images == nil {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *AzureCloudResourcesAllOf) HasImages() bool {
	if o != nil && o.Images != nil {
		return true
	}

	return false
}

// SetImages gets a reference to the given []ImageReferenceDTO and assigns it to the Images field.
func (o *AzureCloudResourcesAllOf) SetImages(v []ImageReferenceDTO) {
	o.Images = &v
}

func (o AzureCloudResourcesAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	return json.Marshal(toSerialize)
}

type NullableAzureCloudResourcesAllOf struct {
	value *AzureCloudResourcesAllOf
	isSet bool
}

func (v NullableAzureCloudResourcesAllOf) Get() *AzureCloudResourcesAllOf {
	return v.value
}

func (v *NullableAzureCloudResourcesAllOf) Set(val *AzureCloudResourcesAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureCloudResourcesAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureCloudResourcesAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureCloudResourcesAllOf(val *AzureCloudResourcesAllOf) *NullableAzureCloudResourcesAllOf {
	return &NullableAzureCloudResourcesAllOf{value: val, isSet: true}
}

func (v NullableAzureCloudResourcesAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureCloudResourcesAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
