/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// InputSubmissionServiceForProject struct for InputSubmissionServiceForProject
type InputSubmissionServiceForProject struct {
	Enabled *bool `json:"enabled,omitempty"`
	Credentials *Credentials `json:"credentials,omitempty"`
	SubmissionEndpoint InputSubmissionEndpointForProject `json:"submissionEndpoint"`
}

// NewInputSubmissionServiceForProject instantiates a new InputSubmissionServiceForProject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputSubmissionServiceForProject(submissionEndpoint InputSubmissionEndpointForProject) *InputSubmissionServiceForProject {
	this := InputSubmissionServiceForProject{}
	this.SubmissionEndpoint = submissionEndpoint
	return &this
}

// NewInputSubmissionServiceForProjectWithDefaults instantiates a new InputSubmissionServiceForProject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputSubmissionServiceForProjectWithDefaults() *InputSubmissionServiceForProject {
	this := InputSubmissionServiceForProject{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *InputSubmissionServiceForProject) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputSubmissionServiceForProject) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *InputSubmissionServiceForProject) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *InputSubmissionServiceForProject) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *InputSubmissionServiceForProject) GetCredentials() Credentials {
	if o == nil || o.Credentials == nil {
		var ret Credentials
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputSubmissionServiceForProject) GetCredentialsOk() (*Credentials, bool) {
	if o == nil || o.Credentials == nil {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *InputSubmissionServiceForProject) HasCredentials() bool {
	if o != nil && o.Credentials != nil {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given Credentials and assigns it to the Credentials field.
func (o *InputSubmissionServiceForProject) SetCredentials(v Credentials) {
	o.Credentials = &v
}

// GetSubmissionEndpoint returns the SubmissionEndpoint field value
func (o *InputSubmissionServiceForProject) GetSubmissionEndpoint() InputSubmissionEndpointForProject {
	if o == nil {
		var ret InputSubmissionEndpointForProject
		return ret
	}

	return o.SubmissionEndpoint
}

// GetSubmissionEndpointOk returns a tuple with the SubmissionEndpoint field value
// and a boolean to check if the value has been set.
func (o *InputSubmissionServiceForProject) GetSubmissionEndpointOk() (*InputSubmissionEndpointForProject, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SubmissionEndpoint, true
}

// SetSubmissionEndpoint sets field value
func (o *InputSubmissionServiceForProject) SetSubmissionEndpoint(v InputSubmissionEndpointForProject) {
	o.SubmissionEndpoint = v
}

func (o InputSubmissionServiceForProject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Credentials != nil {
		toSerialize["credentials"] = o.Credentials
	}
	if true {
		toSerialize["submissionEndpoint"] = o.SubmissionEndpoint
	}
	return json.Marshal(toSerialize)
}

type NullableInputSubmissionServiceForProject struct {
	value *InputSubmissionServiceForProject
	isSet bool
}

func (v NullableInputSubmissionServiceForProject) Get() *InputSubmissionServiceForProject {
	return v.value
}

func (v *NullableInputSubmissionServiceForProject) Set(val *InputSubmissionServiceForProject) {
	v.value = val
	v.isSet = true
}

func (v NullableInputSubmissionServiceForProject) IsSet() bool {
	return v.isSet
}

func (v *NullableInputSubmissionServiceForProject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputSubmissionServiceForProject(val *InputSubmissionServiceForProject) *NullableInputSubmissionServiceForProject {
	return &NullableInputSubmissionServiceForProject{value: val, isSet: true}
}

func (v NullableInputSubmissionServiceForProject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputSubmissionServiceForProject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


