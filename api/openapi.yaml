openapi: 3.0.1
info:
  contact:
    email: support@cons3rt.com
    url: https://www.cons3rt.com/
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: CONS3RT API
  version: 1.0.0
servers:
- url: /
security:
- APIKeyHeader: []
- Username: []
tags:
- description: |+
    Welcome to the CONS3RT API documentation.

    The CONS3RT API allows you to manage Hosts and resources within your CONS3RT clouds in a programmatic way using conventional HTTP requests.The endpoints are flexible and powerful, providing capability to retrieve information or to execute actions.

    All of the functionality in the CONS3RT user interface is also available through the API, allowing you to script the complex actions needed to support your use case.

    The API documentation will provide an overview of the design and technology, followed by reference information about each supported endpoint.

  name: Introduction
  x-traitTag: "true"
- description: |
    Any tool that is fluent in HTTP can communicate with the API simply by requesting the correct URI. Requests must be made using the HTTPS protocol so that traffic is encrypted. The endpoints respond to different methods depending on the action required.

    <table class="pure-table pure-table-horizontal">
       <thead>
         <tr>
           <th>Method</th>
           <th>Usage</th>
         </tr>
       </thead>
       <tbody>
         <tr>
           <td>GET</td>
           <td>
             <p>For simple retrieval of information about your account, Hosts, Assets, or environment, you should use the <strong>GET</strong> method. The information you request will be returned to you as a JSON or XML object.</p>
             <p>The attributes defined by the JSON object can be used to form additional requests. Any request using the GET method is read-only and will not affect any of the objects you are querying.</p>
           </td>
         </tr>
         <tr>
           <td>DELETE</td>
           <td>
             <p>To destroy a resource and remove it from your account and environment, the <strong>DELETE</strong> method should be used. This will remove the specified object if it is found. If it is not found, the operation will return a response indicating that the object was not found.</p>
             <p>This <a href="http://en.wikipedia.org/wiki/Idempotent#Computer_science_meaning">idempotency</a> means that you do not have to check for a resource's availability prior to issuing a delete command, the final state will be the same regardless of its existence.</p>
           </td>
         </tr>
         <tr>
           <td>PUT</td>
           <td>
             <p>To update the information about a resource in your account, the <strong>PUT</strong> method is available.</p>
             <p>Like the DELETE Method, the PUT method is idempotent. It sets the state of the target using the provided values, regardless of their current values. Requests using the PUT method do not need to check the current attributes of the object.</p>
           </td>
         </tr>
         <tr>
           <td>POST</td>
           <td>
             <p>To create a new object, your request should specify the <strong>POST</strong> method.</p>
             <p>The POST request includes all of the attributes necessary to create a new object. When you wish to create a new object, send a POST request to the target endpoint.</p>
           </td>
         </tr>
       </tbody>
     </table>

    REST clients such as <a href="https://www.getpostman.com/">Postman</a> or <a href="https://insomnia.rest/">Insomnia</a> allow you to make requests to the Twitter REST APIs using a well-designed visual interface. All you have to do is enter the endpoint’s HTTP method, URL, authentication, parameters, and JSON body to start making requests.
  name: HTTP Requests
  x-traitTag: "true"
- description: |-
    The standard API returns HTTP status codes in addition to JSON- or XML-based error codes and messages.

    In the event of a problem, the status will contain the error code, while the body of the response will usually contain additional information about the problem that was encountered.

    In general, if the status returned is in the 200 range, it indicates that the request was fulfilled successfully and that no error was encountered.

    Return codes in the 400 range typically indicate that there was an issue with the request that was sent. Among other things, this could mean that you did not authenticate correctly, that you are requesting an action that you do not have authorization for, that the object you are requesting does not exist, or that your request is malformed.

    If you receive a status in the 500 range, this generally indicates a server-side problem. This means that we are having an issue on our end and cannot fulfill your request currently.

    <table>
    <colgroup><col width="2%"><col width="6%"><col width="92%"></colgroup><thead valign="bottom"><tr class="row-odd"><th class="head">Code</th>
    <th class="head">Text</th>
    <th class="head">Description</th>
    </tr></thead><tbody valign="top"><tr class="row-even"><td>200</td>
    <td>OK</td>
    <td>Success!</td>
    </tr><tr class="row-even"><td>202</td>
    <td>Accepted</td>
    <td>Request was successful, but it might take some time to complete</td>
    </tr><tr class="row-even"><td>204</td>
    <td>No Content</td>
    <td>Request succeeded and there is no content to return</td>
    </tr><tr class="row-odd"><td>304</td>
    <td>Not Modified</td>
    <td>There was no new data to return.</td>
    </tr><tr class="row-even"><td>400</td>
    <td>Bad Request</td>
    <td>The request was invalid or cannot be otherwise served. An accompanying error message will explain further. Requests without authentication are considered invalid and will yield this response.</td>
    </tr><tr class="row-odd"><td>401</td>
    <td>Unauthorized</td>
    <td>Missing or incorrect authentication credentials. This may also returned in other undefined circumstances.</td>
    </tr><tr class="row-even"><td>403</td>
    <td>Forbidden</td>
    <td>The request is understood, but it has been refused or access is not allowed. An accompanying error message will explain why.</td>
    </tr><tr class="row-odd"><td>404</td>
    <td>Not Found</td>
    <td>The URI requested is invalid or the resource requested, such as a user, does not exist.</td>
    </tr><tr class="row-odd"><td>500</td>
    <td>Internal Server Error</td>
    <td>Something is broken. This is usually a temporary error, for example in a high-load situation or if an endpoint is temporarily having issues.
    </td>
    </tr><tr class="row-even"><td>502</td>
    <td>Bad Gateway</td>
    <td>The site is down, or being upgraded.</td>
    </tr><tr class="row-odd"><td>503</td>
    <td>Service Unavailable</td>
    <td>The servers are up, but overloaded with requests. Try again later.</td>
    </tr><tr class="row-even"><td>504</td>
    <td>Gateway timeout</td>
    <td>The servers are up, but the request couldn’t be serviced due to some failure within the internal stack. Try again later.</td>
    </tr></tbody></table>
  name: Response Codes
  x-traitTag: "true"
- description: |
    In order to interact with the CONS3RT API, you or the application you are developing must authenticate.

    Authorization is handled through the use of a special HTTP header and, in some cases, a client certificate.
    <ul>
        <li><code>username</code> - the username associated with your account [If a certificate is being used for authentication, this field can be omitted]</li>
        <li><code>token</code> - the registered rest api token for a user within a given project</li>
    </ul>

    You can generate a unique API token for each of your Projects by visiting the <strong>Security</strong> section of the web interface for your account.

    The combination of your secret API token and client certificate or username functions as a complete authentication request. In effect, it acts as a substitute for a username and password pair.

    Because of this, it is absolutely <strong>essential</strong> that you keep your API tokens secure. Upon generation, the web interface will only display each token a single time in order to prevent the token from being compromised.
  name: Authentication
  x-traitTag: "true"
- description: |-
    There are two different ways to pass parameters in a request with the API.

    When passing parameters to create or update an object, parameters should be passed as a JSON or XML object containing the defined attribute names and values. To identify the preferred format, you should specify what data type you are sending in the header. This is done by setting the <code>Content-Type</code> header to <code>application/json</code> or <code>application/xml</code>. This ensures that your request is interpreted correctly.

    When passing parameters to filter a response on GET requests or on some discrete non-update actions, parameters can be passed using query attributes. In this case, the parameters are embedded into the URI by appending a <code>?</code> to the end of the URI and then setting each attribute with an equal sign. Multiple attributes can be separated with a <code>&</code>.
  name: Parameters
  x-traitTag: "true"
- description: |-
    <dl>
    <dt>Do I need an API token?</dt>
    <dd class="answer">
      <p>Yes, access to this interface requires an API token. Please visit the settings page more information.</p>
    </dd>
    <dt>What authentication is required?</dt>
    <dd class="answer">
      <p>All API calls require an active user account, user credentials (username or certificate depending on the site rules) and an API token.</p>
    </dd>
    <dt>How should calls be formatted?</dt>
    <dd class="answer">
      <p>When using the rest api, all calls must include the following fields in the form of headers:</p>
      <ul>
        <li><code>username</code> - the user's account in CONS3RT [If a certificate is being used for authentication, this field can be omitted]</li>
        <li><code>token</code> - the registered rest api token for a user within a given project</li>
      </ul>
    <p>A <code>Content-Type</code> header may have to be used to indicate the type of content being submitted in the body of the call, for example <code>application/xml</code>, <code>application/json</code>, <code>text/plain</code></p>
    <p>Similarly, an <code>Accept</code> header can be used to indicate the from in which data shall be returned from the call, for example <code>application/xml</code>, <code>application/json</code></p>
    </dd>
    <dt>How should data be formatted?</dt>
    <dd class="answer">
      <p>All API calls that require data in their message body should be formatted in either <a href="http://json.org/example">JSON</a> or <a href="http://www.w3schools.com/xml/xml_syntax.asp">XML</a> format.</p>
    </dd>
    <dt>Is there a specification format file for the API?</dt>
    <dd class="answer">
      <p>Yes, currently both an OpenAPI 3.0 file and a <a href="/reference/api/raml/cons3rt.raml">RAML</a> file describing the ReST API are available.</p>
    </dd>
    </dl>
  name: Frequently Asked Questions
  x-traitTag: "true"
- description: |
    <dl>
    <dt>21.28.0</dt>
    <dd>
    <dl>
    <dt>Redeploy Deployment Run Hosts:</dt>
    <dd>
    <p></p>
    <p></p>
    <p>Users can now request the redeploy of one or more <code>deployment run hosts</code> in their deployment run, following the runs initial completion. This will re-create each host, installing the latest version of components and deployment properties defined for the host. Any local changes made since the host was originally deployed will be lost.</p>
    <p><strong>Redeploy Hosts:</strong> <a href="#operation/redeployDeploymentRunHosts" target="_self">PUT /api/drs/{id}/redeployhosts</a></p>
    </dd>
    </dl>
    </dd>
    </dl>
    <dl>
    <dt>21.24.0</dt>
    <dd>
    <dl>
    <dt>Multiple Scenarios Per Deployment:</dt>
    <dd>
    <p></p>
    <p></p>
    <p>Users can now request more than one <code>scenario</scenario> per deployment. When added scenarios can be given a <code>scenarioBuildOrder</code> to determine the order in which to build scenarios within the deployment.</p>
    <p><strong>Create Deployment:</strong> <a href="#operation/createDeploymentEntire" target="_self">PUT /api/deployments/createdeployment</a></p>
    </dd>
    <dt>Static MAC Address:</dt>
    <dd>
    <p></p>
    <p></p>
    <p>Users can now request a <code>macAddress</code> when launching a deployment in vcloud and openstack similiar to the request for a static ipAddress.</p>
    <p><strong>Launch Deployment Run:</strong> <a href="#operation/launchDeployment" target="_self">POST /api/deployments/{id}/launch</a></p>
    </dd>
    </dl>
    </dd>
    </dl>
    <dl>
    <dt>21.16.0</dt>
    <dd>
    <dl>
    <dt>Project Remote Access features:</dt>
    <dd>
    <p></p>
    <p></p>
    <p>Projects can now have toggle on and off particular remote access features such as file upload and copy/paste into remote sessions.</p>
    <p><strong>Create Project:</strong> <a href="#operation/createProject" target="_self">POST /api/projects/</a></p>
    <p><strong>Update Project:</strong> <a href="#operation/updateProject" target="_self">PUT /api/projects/{id}</a></p>
    </dd>
    <dt>Project Default Role:</dt>
    <dd>
    <p></p>
    <p></p>
    <p>Projects can now define a default role for members of that project</p>
    <p><strong>Create Project:</strong> <a href="#operation/createProject" target="_self">POST /api/projects/</a></p>
    <p><strong>Update Project:</strong> <a href="#operation/updateProject" target="_self">PUT /api/projects/{id}</a></p>
    </dd>
    </dl>
    </dd>
    </dl>
    <dl>
    <dt>21.12.0</dt>
    <dd>
    <dl>
    <dt>Cloud Storage Buckets:</dt>
    <dd>
    <p></p>
    <p></p>
    <p>Users can now create <code>Storage Buckets</code> within a cloud to store files and blobs for later use or consumption.</p>
    <p><strong>Create Bucket:</strong> <a href="#operation/createBucket" target="_self">POST /api/buckets/</a></p>
    <p><strong>Retrieve Bucket:</strong> <a href="#operation/GetBucket" target="_self">GET /api/buckets/{id}</a></p>
    <p><strong>Update Bucket:</strong> <a href="#operation/UpdateBucket" target="_self">PUT /api/buckets/{id}</a></p>
    <p><strong>Delete Bucket:</strong> <a href="#operation/deleteBucket" target="_self">POST /api/buckets/{id}</a></p>
    </dd>
    <dt>Deployment Run Host Identities:</dt>
    <dd>
    <p></p>
    <p></p>
    <p>Users can now create identities for their deployment run hosts, defining access to cloud resources such as storage buckets.</p>
    <p><strong>Create Identity:</strong> <a href="#operation/createIdentity" target="_self">POST /api/drs/{id}/host/{hostid}/identity</a></p>
    <p><strong>Retrieve Identity Access:</strong> <a href="#operation/getIdentity" target="_self">GET /api/drs/{id}/host/{hostid}/identity</a></p>
    <p><strong>Delete Identity:</strong> <a href="#operation/deleteIdentity" target="_self">DELETE /api/drs/{id}/host/{hostid}/identity</a></p>
    </dd>
    </dl>
    </dd>
    </dl>
    <dt>21.7.0</dt>
    <dd>
    <dl>
    <dt>GPU Options and Limits:</dt>
    <dd>
    <p></p>
    <p></p>
    <p>Teams and Project can now define limits on the amount of each GPU type that can be consumed. Additionally, clouds can now define the GPU types available.</p>
    <p><strong>Team GPU Limits:</strong> <a href="#operation/createTeam" target="_self">POST /api/teams</a></p>
    <p><strong>Project GPU Limits:</strong> <a href="#operation/createProject" target="_self">POST /api/projects</a></p>
    <p><strong>Cloud GPU Options:</strong> <a href="#operation/registerCloud" target="_self">POST /api/clouds</a></p>
    </dd>
    <dt>Project Members:</dt>
    <dd>
    <p></p>
    <p></p>
    <p>Projects now specify their <code>activeMemberCount</code> as well as a <code>totalMemberCount</code> which better displays the breakdown of members in a project.</p>
    <p><strong>Retrieve Project:</strong> <a href="#operation/createSystemEntire" target="_self">PUT /api/projects/{id}</a></p>
    </dd>
    </dl>
    </dd>
    </dl>
    <dt>21.5.0</dt>
    <dd>
    <dl>
    <dt>Boundary IP Address:</dt>
    <dd>
    <p></p>
    <p></p>
    <p>Virtualization realm networks now define a <code>boundaryIpAddress</code>, which defines the ip address representing the boundary of that network or NAT device.</p>
    <p><strong>Retrieve Virtualization Realm:</strong> <a href="#operation/getVirtualizationRealm" target="_self">GET /api/virtualizationrealms/{id}</a></p>
    <p><strong>List Virtualization Realm Networks:</strong> <a href="#operation/getProject" target="_self">GET /api/virtualizationrealms/{id}/networks</a></p>
    </dd>
    <dt>Project Members:</dt>
    <dd>
    <p></p>
    <p></p>
    <p>Projects now specify their <code>activeMemberCount</code> as well as a <code>totalMemberCount</code> which better displays the breakdown of members in a project.</p>
    <p><strong>Retrieve Project:</strong> <a href="#operation/createSystemEntire" target="_self">PUT /api/projects/{id}</a></p>
    </dd>
    </dl>
    </dd>
    </dl>
    </dl>
    </dd>
    </dl>
    </dd>
    </dl>
  name: Change Log
  x-traitTag: "true"
- description: |
    Assets are the building blocks of the CONS3RT experience. Assets come in the following types....<br>
    <br>
    Resource Assets: Elements of a Cloud that are registered to be available to specific users.<br>
    <br>
    Component Assets: The building blocks of Composite Assets (see below); Components can be imported by a user with appropriate permissions via the web portal.<br>
    <br>
    Composite Assets: User-assembled Assets that combine Resources and Components in order to define how Systems and Scenarios will be Built, Configured, and Deployed. Users often refer to these as 'recipes,' 'blueprints,' or 'manifests.' Assembly is done via the web portal.<br>
  name: Assets
- description: |-
    Buckets for data and file storage.<br>
    <br>
    Once created, storage buckets can be uploaded to and downloaded from by authenticated users and deployment runs.
  name: Storage
- description: Categories are used to organize and filter a user's Assets.
  name: Categories
- description: |-
    Teams can register the Cloud Resources that they pay for directly (e.g. an AWS account). Some networks may have connectivity or firewall restriction so please contact support if you want to make one of these connections.<br>
    <br>
    Team Managers can create Cloudspaces if they directly own the Cloud, and they are able to create and manage networks, enable remote access and adjust performance parameters.<br>
    <br>
    Teams can also control which projects can access which Cloudspaces and which templates should be made available.
  name: Clouds
- description: |-
    A Composition is a way to publish Runs, Deployments, and Workstations for use in the Simplified Client.<br>
    <br>
    Compositions can be published from Scenarios, Deployments, or Runs.<br>
    <br>
    To publish a Composition, please ensure that the user has the necessary permissions to build Composite Assets and configure Deployment Runs.
  name: Compositions
- description: |-
    Container Assets allow the user to make Container Images available to a user's Deployments in CONS3RT.<br>
    <br>
    These Images can be internal Container Images or Images from a public registry.<br>
    <br>
    Container Assets can be added to System Designs, and when managed by CONS3RT, Container Assets can be installed alongside other Asset types in a 'Hybrid' Deployment.
  name: Container Assets
- description: A Deployment consists of a Scenario, an Elastic Test, and/or a user's
    Custom Properties.
  name: Deployments
- description: |-
    When a user clicks Launch on one of their Deployments, they create a Deployment Run.<br>
    <br>
    Once provisioned, a Deployment Run will allow a user to access any Assets within the Run, including Tests and Virtual Machines.
  name: Deployment Runs
- description: Users are able to import Assets into CONS3RT, including but not limited
    to, Software Apps and Elastic Test Tools.
  name: Import
- description: |-
    Projects are the primary groupings of users and resources at the application level.<br/>
    <br>
    Projects are now managed by a Team, and each Team can have one or more Projects.<br>
    <br>
    Team Managers can create additional Projects up to the limits of their package.<br>
    <br>
    Any user on the site can see the name & description of Projects, and they can request to join unless the Project is set to private, in which case no one will see it.
  name: Projects
- description: |-
    A Scenario consists of one or more Systems.<br>
    <br>
    Optionally, a user can set up Configuration and Teardown Scripts for the Systems in a Scenario.
  name: Scenarios
- description: |-
    The Simplified Client provides a way to access, deploy, and un-deploy selected Deployments.<br>
    <br>
    This Simplified Client is designed for users who do not need to create or modify Resources and Workstations.<br>
    <br>
    Users accessing the Simplified Client will utilize Runs, Deployments and Scenarios that have published as Compositions.
  name: Client
- description: |-
    Users can create Bundles of Software Assets called 'App Bundles' to install as a group on Systems.<br>
    <br>
    Like Systems, App Bundles include reboot and a build order.
  name: Software Bundles
- description: A user can create their own Software Assets using the Software Asset
    Builder.
  name: Software Assets
- description: The Assets available to a user for the creation and configuration of
    Systems.
  name: System Assets
- description: |-
    CONS3RT allows a user to design a Virtual or Physical Host. Your System design will include....<br>
    An Operating System (OS), a specific OS template, or a physical device <br>
    <br>
    Minimum number of CPUs <br>
    <br>
    Minimum Memory (RAM) in GB <br>
    <br>
    Minimum root volume disk size (up to 100 GB) <br>
    <br>
    The number and size of additional disks <br>
    <br>
    GPU requirements <br>
    <br>
    Nested Virtualization requirements
  name: Systems
- description: |-
    Each customer order is now mapped to a Team. The total capacity limits (e.g. RAM, CPU, storage, etc.), add-ons, features and expiration date are set per Team as part of the order on-boarding. At least one Team Manager will be assigned at that time. Team Managers can change the team name, add/remove other Managers and update the primary POC info.<br>
    <br>
    Team Managers can create Cloudspaces if they directly own the Cloud, and they have control over their Cloudspace Resources. They are able to create and manage networks, enable remote access and adjust performance parameters. They can control which projects can access which Cloudspaces and which templates should be made available.
  name: Teams
- description: Within the System Builder, a Template provides the Operating System
    for the user's System Design.
  name: Templates
- description: CONS3RT allows users to import and modify Test Assets.
  name: Test Assets
- description: |-
    CONS3RT Elastic Test provides a framework for getting test results with minimal effort from a selection of integrated Elastic Test Tools.<br>
    <br>
    When a Deployment is launched, an Elastic Test Tool Virtual Machine is created in your Cloudspace.<br>
    <br>
    Once the Deployment is ready, CONS3RT automatically executes the Test Asset on the test tool Virtual Machines.<br>
    <br>
    Upon completion, the Test Results are stored with the Run, and the user will receive an email notification.
  name: Test Tools
- description: Any user within a Project that has the 'Asset Uploader' permissions
    can upload Assets to external services for their Project.
  name: Upload
- description: |
    A Virtualization Realm is the segment of the Cloud into which a user launches their Deployments.<br>
    <br>
    A Team Manager can allocate one or more new Virtualization Realms within one of the Clouds that their Team owns.<br>
    <br>
    Additionally, a CONS3RT-allocated Virtualization Realm include the following security features by default: Credentials, Virtualization Realm-specific Network, Firewalls, Network/Port Address Translation (NAT/PAT), Edge Gateways, and secure Remote Access (RDP, VNC, or SSH).<br>
    <br>
    A Team Manager can enable additional Virtualization Realm security.<br>
    <br>
    Each CONS3RT Virtualization Realm has two networks by default: the cons3rt-net for use by CONS3RT and the user-net, for use by the user.<br>
  name: Virtualization Realms
paths:
  /api/validatecredentials:
    get:
      operationId: validateCredentials
      responses:
        default:
          content:
            text/html:
              schema:
                type: string
          description: default response
  /api/assets/{id}/download:
    get:
      description: |-
        Downloads the Asset in the form of a zip file. Download is only available for importable Asset types (i.e. Software, Test, and Container).<br>
        <br>
        Based on the background flag, the download will be done in the foreground (false), background (true), or in a location as determined by Asset size (default).<br>
        <br>
        If the background flag is set to true (or if no value for the background flag is provided), and the Asset is larger than the site threshold, the Asset will be prepared for download in the background.In that case, an email with a link to retrieve the Asset will be sent.If the Asset is larger than download threshold, it will be prepared for download in the background, and an email with a download link will be sent.
      operationId: download
      parameters:
      - description: ID of asset
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Force the download to happen in the background
        explode: true
        in: query
        name: background
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "202":
          description: Accepted
        "400":
          description: Invalid ID supplied or asset is not the correct type
        "404":
          description: Asset not found
      summary: Download Asset
      tags:
      - Software Assets
      - Test Assets
      - Container Assets
      - Assets
  /api/assets/{id}:
    delete:
      description: |-
        Delete a single Asset with the given ID.<br/>
        <br/>
        <em>Optionally, this call can be allowed to delete if the asset has dependent assets.</em>
      operationId: deleteAsset
      parameters:
      - description: ID of asset to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Allow delete if there are dependent assets
        explode: true
        in: query
        name: force
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid asset ID supplied
        "404":
          description: Asset not found
      summary: Delete asset
      tags:
      - Software Assets
      - Test Assets
      - Container Assets
      - Systems
      - Scenarios
      - Deployments
      - Assets
  /api/assets/{id}/updatestate:
    put:
      description: Updates the state of a single Asset with the given ID.
      operationId: updateAssetState
      parameters:
      - description: ID of asset to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The new asset state type
        explode: true
        in: query
        name: state
        required: true
        schema:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid ID or asset state supplied
        "404":
          description: Asset not found
      summary: Update State
      tags:
      - Software Assets
      - Test Assets
      - Container Assets
      - Systems
      - Scenarios
      - Deployments
      - Assets
  /api/assets/{id}/updatevisibility:
    put:
      description: Updates the visibility of a single Asset with the given ID.
      operationId: updateAssetVisibilityQuery
      parameters:
      - description: ID of asset to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The new asset visibility type
        explode: true
        in: query
        name: visibility
        required: true
        schema:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid ID or asset visibility supplied
        "404":
          description: Asset not found
      summary: Update Visibility
      tags:
      - Software Assets
      - Test Assets
      - Container Assets
      - Systems
      - Scenarios
      - Deployments
      - Assets
  /api/assets/{id}/offline:
    put:
      description: Updates the Offline Status of a single Asset with the given ID.
      operationId: updateOfflineStatus
      parameters:
      - description: ID of asset to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Set the asset status to offline
        explode: true
        in: query
        name: offline
        required: false
        schema:
          default: true
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid ID or asset offline status supplied
        "404":
          description: Asset not found
      summary: Update Offline Status
      tags:
      - Software Assets
      - Test Assets
      - Container Assets
      - Systems
      - Scenarios
      - Deployments
      - Assets
  /api/assets/{id}/addtrustedproject:
    put:
      description: |-
        Allows members of the provided Project to access the specified Asset.<br>
        <br>
        The Asset must have a visibility set to TRUSTED_PROJECT for this to have any effect.
      operationId: addTrustedProject
      parameters:
      - description: ID of asset
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project to trust
        explode: true
        in: query
        name: trustedid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid asset ID or project ID supplied
        "404":
          description: Asset not found
      summary: Assign Trusted Project to Asset
      tags:
      - Software Assets
      - Test Assets
      - Container Assets
      - Systems
      - Scenarios
      - Deployments
      - Assets
  /api/assets/{id}/removetrustedproject:
    put:
      description: Removes the provided Project from the Asset's list of Trusted Projects.
      operationId: removeTrustedProject
      parameters:
      - description: ID of asset
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project to untrust
        explode: true
        in: query
        name: trustedid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid asset ID or project ID supplied
        "404":
          description: Asset not found
      summary: Unassign Trusted Project from Asset
      tags:
      - Software Assets
      - Test Assets
      - Container Assets
      - Systems
      - Scenarios
      - Deployments
      - Assets
  /api/assets/{id}/impactlevel:
    put:
      description: |-
        Updates the Impact Level of a single Asset with the given ID.<br>
        <br
        >Maximum Impact Level can only be set to DOD_LEVEL_6 if allowed in the Environment.
      operationId: updateImpactLevel
      parameters:
      - description: ID of asset
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The new asset impact level type.
        explode: true
        in: query
        name: impactlevel
        required: true
        schema:
          enum:
          - NONE
          - FEDRAMP_LOW
          - FEDRAMP_MODERATE_DOD_LEVEL_2
          - FEDRAMP_HIGH_DOD_LEVEL_4
          - DOD_LEVEL_5
          - DOD_LEVEL_6
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid ID or asset impact level supplied
        "404":
          description: Asset not found
      summary: Update Impact Level
      tags:
      - Software Assets
      - Test Assets
      - Container Assets
      - Systems
      - Scenarios
      - Deployments
      - Assets
  /api/assets/{id}/setitar:
    put:
      description: |-
        Sets the Export Restriction of a single software asset, test asset or container asset with the given ID.<br>
        <br>
        Export Restriction can only be set if the owning Project is an ITAR-restricted Project.<br>
        <br>
        Setting an Export Restriction cannot be undone.
      operationId: itarRestrictAsset
      parameters:
      - description: ID of asset
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid ID or asset impact level supplied
        "404":
          description: Asset not found
      summary: Set Asset Export Restriction
      tags:
      - Software Assets
      - Test Assets
      - Container Assets
      - Assets
  /api/assets/{id}/dependent:
    get:
      description: Returns a collection of the Composite Assets that include the specified
        Asset.
      operationId: listDependentAssets
      parameters:
      - description: ID of asset
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BasicAsset'
                type: array
          description: OK
        "400":
          description: Invalid ID
        "404":
          description: Asset not found
      summary: List all Dependent Assets
      tags:
      - Software Assets
      - Test Assets
      - Container Assets
      - Systems
      - Scenarios
      - Deployments
      - Assets
  /api/assets/{id}/limit:
    put:
      description: Updates the instance limit of a single Asset with the given ID.
      operationId: updateInstanceLimit
      parameters:
      - description: ID of asset
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The new asset instance limit
        explode: true
        in: query
        name: limit
        required: true
        schema:
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid ID or asset impact level supplied
        "404":
          description: Asset not found
      summary: Update Instance Limit
      tags:
      - Software Assets
      - Test Assets
      - Container Assets
      - Systems
      - Scenarios
      - Deployments
      - Assets
  /api/assets/{id}/update:
    put:
      description: Updates the metadata of a single Asset with the given ID.
      operationId: updateAsset
      parameters:
      - description: ID of asset
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputAssetForUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputAssetForUpdate'
        description: The modified Asset metadata
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Asset not found
      summary: Update Asset
      tags:
      - Software Assets
      - Test Assets
      - Container Assets
      - Systems
      - Scenarios
      - Deployments
      - Assets
  /api/assets/{id}/updatecontent:
    put:
      description: |-
        Updates any part of the Asset that was provided, including the values described in the asset.properties file.<br>
        <br>
        The 'Update Content' call is only available for importable Asset types (i.e. Software, Test, and Container).
      operationId: updateAssetContent
      parameters:
      - description: ID of asset
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputFileForm'
        description: The file object
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "202":
          description: Accepted
        "400":
          description: Invalid ID supplied or asset is not the correct type
        "404":
          description: Asset not found
      summary: Update Asset Content
      tags:
      - Software Assets
      - Test Assets
      - Container Assets
      - Assets
  /api/buckets:
    get:
      description: returns a collection of storage buckets
      operationId: listBuckets
      parameters:
      - description: ID of the cloud
        explode: true
        in: query
        name: cloud
        required: false
        schema:
          type: string
        style: form
      - description: Include project buckets
        explode: true
        in: query
        name: project
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Bucket'
                type: array
          description: OK
        "400":
          description: Invalid ID or query parameter supplied
        "404":
          description: Storage buckets not found
      summary: List Storage Buckets
      tags:
      - Storage
    post:
      description: Creates a storage bucket as defined by the user
      operationId: createBucket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bucket'
          application/xml:
            schema:
              $ref: '#/components/schemas/Bucket'
        description: The bucket creation information
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid bucket configuration requested
      summary: Create Storage Bucket
      tags:
      - Storage
  /api/buckets/{id}:
    delete:
      description: Deletes an existing storage bucket by identifier
      operationId: deleteBucket
      parameters:
      - description: ID of bucket
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Storage bucket not found
      summary: Delete Storage Buckets
      tags:
      - Storage
    get:
      description: returns a storage bucket
      operationId: GetBucket
      parameters:
      - description: ID of bucket
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
          description: OK
        "400":
          description: Invalid ID
        "404":
          description: Storage bucket not found
      summary: Retrieve Storage Buckets
      tags:
      - Storage
    post:
      description: |-
        Uploads a file to a bucket.<br>
        <br>
        File must be submitted as multipart-form data, with a file element named "file" and a filename field <br>
        <br>
        A "Connection: Keep-Alive" configuration may be needed for larger sized files, due to the time it takes to copy to the server.
      operationId: uploadFileToBucket
      parameters:
      - description: ID of bucket
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputFileForm'
        description: The file object
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: OK
        "202":
          description: Accepted
        "400":
          description: Invalid file data supplied
      summary: Upload File to Bucket
      tags:
      - Upload
      - Storage
    put:
      description: updates the configuration information for an existing bucket
      operationId: UpdateBucket
      parameters:
      - description: ID of bucket
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Bucket'
          application/xml:
            schema:
              $ref: '#/components/schemas/Bucket'
        description: The bucket creation information
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
          description: OK
        "400":
          description: Invalid ID or configuration request supplied
        "404":
          description: Storage bucket not found
      summary: Update Storage Buckets
      tags:
      - Storage
  /api/buckets/clouds:
    get:
      description: returns a collection of clouds accessible to the user
      operationId: listAvailableCloudsForBuckets
      parameters:
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalCloud'
                type: array
          description: OK
        "400":
          description: Invalid query parameter supplied
        "404":
          description: Clouds not found
      summary: List Clouds Available For Bucket Creation
      tags:
      - Storage
  /api/buckets/{id}/listing:
    get:
      description: lists all files contents for an existing bucket
      operationId: GetBucketListing
      parameters:
      - description: ID of bucket
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Storage bucket not found
      summary: List Bucket Contents
      tags:
      - Storage
  /api/buckets/{id}/download:
    get:
      description: |-
        Downloads the Asset in the form of a zip file. Download is only available for importable Asset types (i.e. Software, Test, and Container).<br>
        <br>
        Based on the background flag, the download will be done in the foreground (false), background (true), or in a location as determined by Asset size (default).<br>
        <br>
        If the background flag is set to true (or if no value for the background flag is provided), and the Asset is larger than the site threshold, the Asset will be prepared for download in the background.In that case, an email with a link to retrieve the Asset will be sent.If the Asset is larger than download threshold, it will be prepared for download in the background, and an email with a download link will be sent.
      operationId: downloadFileFromBucket
      parameters:
      - description: ID of bucket
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The filename within the bucket to download
        explode: true
        in: query
        name: fileName
        required: true
        schema:
          type: string
        style: form
      - description: Force the download to happen in the background
        explode: true
        in: query
        name: background
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "202":
          description: Accepted
        "400":
          description: Invalid ID supplied or asset is not the correct type
        "404":
          description: Asset not found
      summary: Download File From Bucket
      tags:
      - Download
      - Storage
  /api/buckets/{id}/submit/{submission_service_id}:
    post:
      description: |-
        Publishes a resource in the specified bucket to the requested Submission Service.<br>
        <br>
        The requested Project Submission Service will act as a template. Credentials provided when submitting to the Service will override the Project Submission Service's credentials. However, neither the Host nor Port of the Service can be overridden.<br>
        <br>
        If the Service's endpoint is an SFTP Host, the Submission will only be able to override the remote path (i.e. if one has not already been defined in this default Submission Service).<br>
      operationId: submitBucketResourceToSubmissionService
      parameters:
      - description: ID of the bucket to publish a resource from
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project submission service
        explode: false
        in: path
        name: submission_service_id
        required: true
        schema:
          type: string
        style: simple
      - description: The filename within the bucket to download
        explode: true
        in: query
        name: fileName
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputSubmissionServiceForAssetSubmission'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputSubmissionServiceForAssetSubmission'
        description: Submission service override values
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid bucket ID or submission service ID supplied
        "404":
          description: Bucket or Resource not found
      summary: Submit Bucket Resource to the Project's Submission Service
      tags:
      - Container Assets
      - Storage
  /api/categories:
    get:
      description: Returns a collection of the currently available Categories.
      operationId: getCategories
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalCategory'
                type: array
          description: OK
      summary: List all Categories
      tags:
      - Categories
    post:
      description: Creates a single Category in order to organize Assets.
      operationId: createCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCategory'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputCategory'
        description: The Category to create
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullCategory'
          description: OK
        "400":
          description: Invalid data supplied
      summary: Create a Category
      tags:
      - Categories
  /api/categories/{id}:
    delete:
      description: Deletes a single Category with the given ID.
      operationId: deleteCategory
      parameters:
      - description: ID of category to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid category ID supplied
        "404":
          description: Category not found
      summary: Delete Category
      tags:
      - Categories
    put:
      description: Updates the content of a single Category with the given ID.
      operationId: updateCategory
      parameters:
      - description: ID of Category to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCategory'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputCategory'
        description: The modified Category definition
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullCategory'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Category not found
      summary: Update Category
      tags:
      - Categories
  /api/categories/{id}/parent:
    put:
      description: Sets the Parent for an existing Category
      operationId: setCategoryParent
      parameters:
      - description: ID of category to modify
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of desired parent category
        explode: true
        in: query
        name: parentid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullCategory'
          description: OK
        "400":
          description: Invalid category ID or parent category ID supplied
        "404":
          description: Category not found
      summary: Set Parent Category
      tags:
      - Categories
  /api/categories/{id}/asset:
    delete:
      description: |-
        Removes the Category as a filter tag from the provided Asset.<br>
        <br>
        Altering the Category will affect future Asset filtering.
      operationId: removeCategoryFromAsset
      parameters:
      - description: ID of category
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of asset to unassign
        explode: true
        in: query
        name: assetid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid category ID or asset ID supplied
        "404":
          description: Category not found
      summary: Unassign Category from Asset
      tags:
      - Categories
      - Assets
    put:
      description: |-
        Assigns the Category as a filter tag to the provided Asset.<br>
        <br>
        Altering the Category will affect future Asset filtering.
      operationId: addCategoryToAsset
      parameters:
      - description: ID of category
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of asset to assign
        explode: true
        in: query
        name: assetid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid category ID or asset ID supplied
        "404":
          description: Category not found
      summary: Assign Category to Asset
      tags:
      - Categories
      - Assets
  /api/categories/{id}/run:
    delete:
      description: |-
        Removes the Category as a filter tag from the provided Run.<br>
        <br>
        Altering the Category will affect future run filtering.
      operationId: removeCategoryFromDeploymentRun
      parameters:
      - description: ID of category
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of run to unassign
        explode: true
        in: query
        name: runid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid category ID or run ID supplied
        "404":
          description: Category not found
      summary: Unassign Category from deployment run
      tags:
      - Categories
      - Deployment Runs
    put:
      description: |-
        Assigns the Category as a filter tag to the provided Deployment Run.<br>
        <br>
        Altering the Category will affect future Run filtering.
      operationId: addCategoryToDeploymentRun
      parameters:
      - description: ID of category
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of run to assign
        explode: true
        in: query
        name: runid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid category ID or deplyoyment run ID supplied
        "404":
          description: Category not found
      summary: Assign Category to Run
      tags:
      - Categories
      - Deployment Runs
  /api/clouds:
    get:
      description: Returns a collection of the Clouds you manage.
      operationId: getClouds
      parameters:
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalCloud'
                type: array
          description: OK
      summary: List Clouds
      tags:
      - Clouds
    post:
      description: "Creates a single Cloud.<br>\n<br>\n<strong>Cloud Authority To\
        \ Operate (ATO) Consent.</strong>\n<br>\n<p>Teams are allowed to register\
        \ their own Clouds and to use the site capabilities to allocate Cloudspaces,\
        \ configure security, and deploy Systems & Services and/or access them remotely.\
        \ \nHowever, without a Memorandum of Understanding (MOU) or Memorandum of\
        \ Agreement (MOA) with the site owner, customer-owned Clouds and Cloudspaces\
        \ are not covered by the site Authority To Operate (ATO).\nCustomers are responsible\
        \ for compliance with all DoD security requirements for protecting and maintaining\
        \ their systems.</p>\n<p>By setting <code>cloudATOConsent</code> to true,\
        \ the user acknowledges that - as a Team Manager - they a) are authorized\
        \ to represent their organization, and b) they understand that their organization\
        \ is responsible for all security and authorization to operate requirements\
        \ for Systems deployed in their Cloudspaces.</p>"
      operationId: registerCloud
      parameters:
      - description: Cloud ATO consent
        explode: true
        in: query
        name: cloudATOConsent
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCloud'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputCloud'
        description: The Cloud to create
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid data supplied
      summary: Create Cloud
      tags:
      - Clouds
  /api/clouds/{id}:
    delete:
      description: Deletes the content of a single Cloud with the given ID.
      operationId: deleteCloud
      parameters:
      - description: ID of cloud
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid ID or data supplied
        "404":
          description: Cloud not found
      summary: Delete Cloud
      tags:
      - Clouds
    get:
      description: Returns a single Cloud by the given ID.
      operationId: getCloud
      parameters:
      - description: ID of cloud
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullCloud'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Cloud not found
      summary: Retrieve Cloud
      tags:
      - Clouds
    put:
      description: Updates the content of a single Cloud with the given ID.
      operationId: updateCloud
      parameters:
      - description: ID of cloud
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCloud'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputCloud'
        description: The modified Cloud data
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid ID or data supplied
        "404":
          description: Cloud not found
      summary: Update Cloud Content
      tags:
      - Clouds
  /api/clouds/{id}/virtualizationrealms:
    delete:
      description: Removes an existing Virtualization Realm from the specified Cloud.
      operationId: removeVirtRealm
      parameters:
      - description: ID of cloud
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of virtualization realm
        explode: true
        in: query
        name: virtRealmId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid cloud ID or virtualization realm ID supplied
        "404":
          description: Cloud not found
      summary: Unregister Virtualization Realm
      tags:
      - Clouds
    get:
      description: Returns a collection of the Virtualization Realms belonging to
        the specified Cloud.
      operationId: listVirtRealmsInCloud
      parameters:
      - description: ID of cloud
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalVirtualizationRealm'
                type: array
          description: OK
        "400":
          description: Invalid cloud ID supplied
        "404":
          description: Cloud not found
      summary: List Virtualization Realms
      tags:
      - Clouds
    post:
      description: Adds an existing Virtualization Realm as part of the specified
        Cloud
      operationId: registerVirtualizationRealm
      parameters:
      - description: ID of cloud
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractRegisterCloudSpaceRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/AbstractRegisterCloudSpaceRequest'
        description: The virtualization realm registration information
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: OK
        "400":
          description: Invalid cloud ID or data supplied
        "404":
          description: Cloud not found
      summary: Register Virtualization Realm
      tags:
      - Clouds
    put:
      description: Updates the content of a single Virtualization Realm within the
        specified Cloud.
      operationId: updateVirtRealm
      parameters:
      - description: ID of cloud
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of virtualization realm
        explode: true
        in: query
        name: virtRealmId
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputVirtualizationRealm'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputVirtualizationRealm'
        description: The modified virtualization realm information
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid cloud ID, virtualization realm ID, or data supplied
        "404":
          description: Cloud not found
      summary: Update Virtualization Realm
      tags:
      - Clouds
  /api/clouds/{id}/virtualizationrealms/allocate:
    delete:
      description: Removes an existing Virtualization Realm from the specified Cloud
        and destroys the resources in the back-end.
      operationId: deallocateVirtRealm
      parameters:
      - description: ID of cloud
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of virtualization realm
        explode: true
        in: query
        name: virtRealmId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid cloud ID or virtualization realm ID supplied
        "404":
          description: Cloud not found
      summary: De-allocate Virtualization Realm
      tags:
      - Clouds
    post:
      description: |-
        Adds a Virtualization Realm as part of the specified Cloud.<br>
        <br>
        Since this call results in the construction of a new Virtualization Realm, it has financial implications and should not be used if the user is not prepared to incur the expense of construction and existence of the newly created Virtualization Realm.
      operationId: allocateVirtualizationRealm
      parameters:
      - description: ID of cloud
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractCloudSpaceRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/AbstractCloudSpaceRequest'
        description: The virtualization realm allocation information
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinimalVirtualizationRealm'
          description: OK
        "400":
          description: Invalid cloud ID or data supplied
        "404":
          description: Cloud not found
      summary: Allocate Virtualization Realm
      tags:
      - Clouds
  /api/clouds/{id}/resources:
    get:
      description: Returns the back-end resources for a single Cloud by the given
        ID.
      operationId: getCloudResources
      parameters:
      - description: ID of cloud
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractCloudResources'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Cloud not found
      summary: Retrieve Cloud Resources
      tags:
      - Clouds
  /api/clouds/{id}/edgegateways:
    get:
      description: Returns a collection of the Edge Gateway IP addresses belonging
        to the specified Cloud.
      operationId: getEdgeGatewayIPs
      parameters:
      - description: ID of cloud
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          description: Invalid cloud ID supplied
        "404":
          description: Cloud not found
      summary: List Edge Gateways
      tags:
      - Clouds
  /api/clouds/defaultnetwork:
    get:
      description: Returns the default CONS3RT Network definition used by all Clouds.
      operationId: getDefaultNetwork
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
          description: OK
      summary: Retrieve Default Network
      tags:
      - Clouds
  /api/clouds/{id}/maintenance:
    put:
      description: Updates the Maintenance status for a single Cloud by the given
        ID.
      operationId: enableMaintenceMode
      parameters:
      - description: ID of cloud
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Enable or disable maintenance mode
        explode: true
        in: query
        name: enable
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceModeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/MaintenanceModeRequest'
        description: The maintenance mode request, when enabling maintenance mode
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid cloud ID or data supplied
        "404":
          description: Cloud not found
      summary: Update Maintenance Mode
      tags:
      - Clouds
  /api/clouds/{id}/virtualizationrealms/{virtualizationRealmId}/team:
    delete:
      description: Removes the provided Team as a Manager of the Virtualization Realm
        belonging to the specified Cloud.
      operationId: unassignManagingTeam
      parameters:
      - description: ID of cloud
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of virtualization realm
        explode: false
        in: path
        name: virtualizationRealmId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of team to unassign
        explode: true
        in: query
        name: teamId
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid cloud ID, virtualization realm ID, or team ID supplied
        "404":
          description: Cloud not found
      summary: Unassign Manager from Team
      tags:
      - Clouds
    put:
      description: Assigns the provided Team as a Manager of the Virtualization Realm
        belonging to the specified Cloud.
      operationId: assignManagingTeam
      parameters:
      - description: ID of cloud
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of virtualization realm
        explode: false
        in: path
        name: virtualizationRealmId
        required: true
        schema:
          type: string
        style: simple
      - description: ID of team to assign
        explode: true
        in: query
        name: teamId
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid cloud ID, virtualization realm ID, or team ID supplied
        "404":
          description: Cloud not found
      summary: Assign Virtualization Realm-managing Team
      tags:
      - Clouds
  /api/clouds/{id}/impactlevel:
    put:
      description: |-
        Updates the maximum Impact Level of the Cloud with the given ID.<br>
        <br>
        If specified, this value will prevent Deployments containing Assets whose declared Impact Level is greater than the maximum allowed Impact Level from being run in this Virtualization Realm.<br>
        <br>
        Maximum Impact Level can only be set to DOD_LEVEL_6 if allowed in the environment.
      operationId: updateVirtualizationRealmMaximumImpactLevel
      parameters:
      - description: ID of cloud
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The maximum impact level type.
        explode: true
        in: query
        name: maximumimpactlevel
        required: true
        schema:
          enum:
          - NONE
          - FEDRAMP_LOW
          - FEDRAMP_MODERATE_DOD_LEVEL_2
          - FEDRAMP_HIGH_DOD_LEVEL_4
          - DOD_LEVEL_5
          - DOD_LEVEL_6
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid ID or impact level supplied
        "404":
          description: Cloud not found
      summary: Update Impact Level
      tags:
      - Assets
      - Clouds
  /api/compositions:
    get:
      description: Returns a collection of the user's relevant Compositions matching
        a specified query.
      operationId: listCompositions
      parameters:
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FullComposition'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List all Compositions
      tags:
      - Compositions
  /api/compositions/{id}:
    delete:
      description: Deletes a single Composition with the given ID.
      operationId: deleteComposition
      parameters:
      - description: ID of composition to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid composition ID supplied
        "404":
          description: Composition not found
      summary: Delete Composition
      tags:
      - Compositions
    get:
      description: Returns a single Composition event by the given ID.
      operationId: getComposition
      parameters:
      - description: ID of composition to return
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullComposition'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Composition not found
      summary: Retrieve Composition
      tags:
      - Compositions
    put:
      description: Updates the content of a single Composition with the given ID.
      operationId: updateComposition
      parameters:
      - description: ID of Composition to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputComposition'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputComposition'
        description: The modified Composition definition
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullComposition'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Composition not found
      summary: Update Composition
      tags:
      - Compositions
  /api/containers/{id}:
    get:
      description: Returns a single Container Asset event by the given ID.
      operationId: getContainer
      parameters:
      - description: ID of container to return
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullContainerAsset'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Container not found
      summary: Retrieve Container Asset
      tags:
      - Container Assets
  /api/containers:
    get:
      description: Returns a collection of the user's relevant Container Assets matching
        a specified query.
      operationId: getContainerAssets
      parameters:
      - description: Category ID(s) to filter by. Multiple categories can be provided
          with comma-separated strings.
        explode: true
        in: query
        name: categoryids
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalContainerAsset'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List all Containers
      tags:
      - Container Assets
  /api/containers/expanded:
    get:
      description: Returns a collection of all relevant Container Assets matching
        a specified query, including those from the Project.
      operationId: getContainerAssetsExpanded
      parameters:
      - description: Include community assets
        explode: true
        in: query
        name: community
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Category ID(s) to filter by. Multiple categories can be provided
          with comma-separated strings.
        explode: true
        in: query
        name: categoryids
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BasicContainerAsset'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List all Containers, including Project Assets
      tags:
      - Container Assets
  /api/containers/{id}/submit/{submission_service_id}:
    post:
      description: |-
        Publishes the Container Asset specified in the ID parameter to the requested Submission Service.<br>
        <br>
        The requested Project Submission Service will act as a template. Credentials provided when submitting to the Service will override the Project Submission Service's credentials. However, neither the Host nor Port of the Service can be overridden.<br>
        <br>
        If the Service's endpoint is an SFTP Host, the Submission will only be able to override the remote path (i.e. if one has not already been defined in this default Submission Service).<br>
        <br>
        If the Service's endpoint is a Docker Registry, an image name and image tag for use in the destination Registry must be provided.
      operationId: submitAssetToSubmissionService
      parameters:
      - description: ID of Container Asset to publish
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project submission service
        explode: false
        in: path
        name: submission_service_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputSubmissionServiceForAssetSubmission'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputSubmissionServiceForAssetSubmission'
        description: Submission service override values
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid container ID or submission service ID supplied
        "404":
          description: Container not found
      summary: Submit Container to the Project's Submission Service
      tags:
      - Container Assets
  /api/deployments/{id}/schedules:
    delete:
      description: Removes the provided Recurring Schedule from the Deployment.
      operationId: removeRecurringSchedule
      parameters:
      - description: ID of deployment
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid deployment ID supplied
        "404":
          description: Deployment not found
      summary: Remove Recurring Schedule
      tags:
      - Deployments
    get:
      description: Returns a collection of the active Recurring Schedules for a single
        Deployment.
      operationId: listSchedules
      parameters:
      - description: ID of deployment
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalRecurringSchedule'
                type: array
          description: OK
        "400":
          description: Invalid deployment ID supplied
        "404":
          description: Deployment not found
      summary: List Recurring Schedules
      tags:
      - Deployments
    put:
      description: |-
        Adds the Recurring Schedule to a Deployment, creating a Deployment run with the given parameters at intervals specified by the Schedule.<br>
        <br>
        Timezone must be provided as Java Timezone, and thus must take the form of "GMT + or - (hour)(hour)(min)(min)" Example: GMT-0700 <br>
        <br>
        The Schedule field must be provided in valid cron format: "(minute 0-59) (hour 0-23) (day of month 1-31) (month 1-12) (day of week 0-6, with 0 representing Sunday)<br>
        <br>
        "*" is a wildcard that can replace any single entry, representing any or all of the possible entries (e.g. an hour of * means every hour).<br>
        <br>
        Individual entries in the Schedule string can also be represented as ranges (e.g. day of month 4-17, would represent the 4th through the 17th of the month).<br>
        <br>
        In addition, values can also be specified as comma lists (e.g. hours 1,4,6 would represent occurrences at the first, fourth, and sixth hour respectively).
      operationId: addRecurringSchedule
      parameters:
      - description: ID of deployment
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputRecurringSchedule'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputRecurringSchedule'
        description: The Recurring Schedule definition
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid deployment ID or recurring schedule definition supplied
        "404":
          description: Deployment not found
      summary: Add Recurring Schedule
      tags:
      - Deployments
  /api/deployments/{id}/clone:
    put:
      description: Clones the specified Deployment to a new Deployment with the provided
        name.
      operationId: cloneDeployment
      parameters:
      - description: ID of deployment
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the new deployment
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid deployment ID or name supplied
        "404":
          description: Deployment not found
      summary: Clone Deployment
      tags:
      - Deployments
  /api/deployments/createdeployment:
    put:
      description: |-
        Create a single Deplyoment.<br>
        <br>
        All existing Assets used in creation must contain their Asset ID, while to-be-constructed Composite Assets must contain a valid Asset ID for each element contained.
      operationId: createDeploymentEntire
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/InputDeployment'
          application/json:
            schema:
              $ref: '#/components/schemas/InputDeployment'
        description: The Deployment to create
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid data supplied
      summary: Create Deployment
      tags:
      - Deployments
  /api/deployments/{id}/validrealms:
    get:
      description: Returns a collection of the available Virtualization Realms for
        launching the specified Deployment.
      operationId: determineValidVirtualizationRealms
      parameters:
      - description: ID of deployment
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalVirtualizationRealm'
                type: array
          description: OK
        "400":
          description: Invalid deployment ID supplied
        "404":
          description: Deployment not found
      summary: List Valid Virtualization Realms
      tags:
      - Deployments
  /api/deployments/{id}/networks/{virtualizationRealmId}:
    get:
      description: Returns a collection of the Networks that will be created for a
        single Deployment that has launched into the specified Virtualization Realm.
      operationId: getValidNetworksForVirtualizationRealm
      parameters:
      - description: ID of deployment
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of virtualization realm
        explode: false
        in: path
        name: virtualizationRealmId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalNetwork'
                type: array
          description: OK
        "400":
          description: Invalid deployment ID or virtualization realm ID supplied
        "404":
          description: Deployment not found
      summary: List Virtualization Realm Networks
      tags:
      - Deployments
  /api/deployments/{id}/bindings:
    post:
      description: Returns a collection of the possible Virtualization Realm bindings
        for a single Deployment.
      operationId: getBindingsForDeployment
      parameters:
      - description: ID of deployment
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputDeploymentRunOptionsForBindings'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputDeploymentRunOptionsForBindings'
        description: The deployment run options to use when launching the deployment
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VirtualizationRealmBinding'
                type: array
          description: OK
        "400":
          description: Invalid deployment ID or virtualization realm ID supplied
        "404":
          description: Deployment not found
      summary: List Bindings
      tags:
      - Deployments
  /api/deployments/{id}/launch:
    post:
      description: |-
        Launches a Deployment with Run Options.<br>
        <br>
        Either provide a virtualizationRealmId or a virtualizationRealmBinding object to determine the Virtualization Realm to deploy into, and the template bindings to use (if specified).<br>
        <br>
        Network interface objects must be provided for each desired network connection.<br>
        <br>
        A root password can be set within the provided Deployment Run Options, which will override the password for all Hosts.<br>
        <br>
        The override of Host passwords may fail due to template password complexity rules and should not be done without consideration.
      operationId: launchDeployment
      parameters:
      - description: ID of deployment
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/InputDeploymentRunOptions'
          application/json:
            schema:
              $ref: '#/components/schemas/InputDeploymentRunOptions'
        description: The deployment run options to use when launching the deployment
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitDeploymentRunRequestReturnType'
          description: OK
        "400":
          description: Invalid deployment ID or run options supplied
        "404":
          description: Deployment not found
      summary: Launch Deployment
      tags:
      - Deployments
  /api/deployments/{id}/options:
    get:
      description: Returns a collection of the previously used Run Options for a single
        Deployment.
      operationId: listOptions
      parameters:
      - description: ID of deployment
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalDeploymentRunOptions'
                type: array
          description: OK
        "400":
          description: Invalid deployment ID supplied
        "404":
          description: Deployment not found
      summary: List Run Options
      tags:
      - Deployments
  /api/deployments/{id}/properties:
    get:
      description: Returns a collection of the Properties for a single Deployment.
      operationId: listProperties
      parameters:
      - description: ID of deployment
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Property'
                type: array
          description: OK
        "400":
          description: Invalid deployment ID supplied
        "404":
          description: Deployment not found
      summary: List Properties
      tags:
      - Deployments
  /api/deployments/{id}:
    get:
      description: Returns a single Deployment by the given ID.
      operationId: getDeployment
      parameters:
      - description: ID of deployment
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullDeployment'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Deployment not found
      summary: Retrieve Deployment
      tags:
      - Deployments
  /api/deployments/{id}/metrics:
    get:
      description: Returns historical metric data for a single Deployment.
      operationId: getDeploymentMetric
      parameters:
      - description: ID of deployment
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeploymentAssetMetric'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Deployment not found
      summary: Retrieve Metrics
      tags:
      - Deployments
  /api/deployments/{id}/runs:
    get:
      description: Returns a collection of the Deployment Runs for a single Deployment.
      operationId: getDeploymentRuns
      parameters:
      - description: ID of deployment
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalDeploymentRun'
                type: array
          description: OK
        "400":
          description: Invalid deployment ID supplied
        "404":
          description: Deployment not found
      summary: List Deployment Runs
      tags:
      - Deployments
      - Deployment Runs
  /api/deployments:
    get:
      description: Returns a collection of the user's relevant Deployments matching
        a specified query.
      operationId: getDeployments
      parameters:
      - description: Category ID(s) to filter by. Multiple categories can be provided
          with comma-separated strings.
        explode: true
        in: query
        name: categoryids
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalDeployment'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List Deployments
      tags:
      - Deployments
  /api/deployments/expanded:
    get:
      description: Returns a collection of all relevant Deployments matching a specified
        query, including those from the Project.
      operationId: getDeploymentsExpanded
      parameters:
      - description: Include community assets
        explode: true
        in: query
        name: community
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Category ID(s) to filter by. Multiple categories can be provided
          with comma-separated strings.
        explode: true
        in: query
        name: categoryids
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BasicDeployment'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List all Deployments, including Project Assets
      tags:
      - Deployments
  /api/drs/{id}/host/{hostid}:
    get:
      description: Returns the specified Host in the Deployment Run by the given ID.
      operationId: getHost
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of host
        explode: false
        in: path
        name: hostid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullDeploymentRunHost'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Deployment run not found
      summary: Retrieve Host
      tags:
      - Deployment Runs
  /api/drs:
    get:
      description: Returns a collection of the user's relevant Deployment Runs matching
        a specified query.
      operationId: getDeploymentRuns_1
      parameters:
      - description: Deployment run status
        explode: true
        in: query
        name: search_type
        required: true
        schema:
          enum:
          - SEARCH_ACTIVE
          - SEARCH_ALL
          - SEARCH_AVAILABLE
          - SEARCH_COMPOSING
          - SEARCH_DECOMPOSING
          - SEARCH_INACTIVE
          - SEARCH_PROCESSING
          - SEARCH_SCHEDULED
          - SEARCH_TESTING
          - SEARCH_SCHEDULED_AND_ACTIVE
          type: string
        style: form
      - description: Include project runs
        explode: true
        in: query
        name: in_project
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalDeploymentRun'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List Deployment Runs
      tags:
      - Deployments
      - Deployment Runs
  /api/drs/{id}/setlock:
    put:
      description: Update the Lock on a single Deployment Run with the given ID.
      operationId: setDeploymentRunLock
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The desired lock state
        explode: true
        in: query
        name: lock
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid ID or lock supplied
        "404":
          description: Deployment run not found
      summary: Update Lock
      tags:
      - Deployment Runs
  /api/drs/{id}:
    delete:
      description: Deletes a single inactive Deployment Run with the given ID.
      operationId: DeleteDeploymentRun
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Delete all dependencies of the deployment run
        explode: true
        in: query
        name: purge
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid deployment run ID supplied
        "404":
          description: Deployment run not found
      summary: Delete Deployment Run
      tags:
      - Deployment Runs
    get:
      description: Returns a single Deployment Run by the given ID.
      operationId: getDeploymentRun
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullDeploymentRun'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Deployment run not found
      summary: Retrieve Deployment Run
      tags:
      - Deployment Runs
  /api/drs/{id}/downloadreport:
    get:
      description: Downloads a single Test Report for the specified Deployment Run.
      operationId: downloadDeploymentRunTestReport
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Report file name
        explode: true
        in: query
        name: file
        required: false
        schema:
          type: string
        style: form
      - description: Report number
        explode: true
        in: query
        name: number
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Deployment run not found
      summary: Download Report
      tags:
      - Deployment Runs
  /api/drs/{id}/reports:
    get:
      description: Returns a collection of the Test Reports for a single Deployment
        Run.
      operationId: getDeploymentRunReports
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: OK
        "400":
          description: Invalid deployment run ID supplied
        "404":
          description: Deployment run not found
      summary: List Reports
      tags:
      - Deployment Runs
  /api/drs/{id}/release:
    put:
      description: |-
        Releases the Deployment Run for the ID provided.<br>
        <br>
        If the user is an Administrator, the force flag is honored.<br>
        <br>
        If the user is a non-Admin, the force flag is only honored in the event that a release request experiences an exception known to be resolved by a force.
      operationId: releaseDeploymentRun
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Force the release of this run
        explode: true
        in: query
        name: force
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid deployment run ID supplied
        "404":
          description: Deployment run not found
      summary: Release Deployment Run
      tags:
      - Deployment Runs
  /api/drs/{id}/hostaction:
    put:
      description: Executes an action against the specified Host in the Deployment
        Run for the ID provided.
      operationId: performHostAction
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of host
        explode: true
        in: query
        name: deploymentrunhostid
        required: true
        schema:
          type: string
        style: form
      - description: Action to perform
        explode: true
        in: query
        name: action
        required: true
        schema:
          enum:
          - POWER_OFF
          - POWER_ON
          - REBOOT
          - SHUTDOWN
          - SUSPEND
          - RESIZE
          - CREATE_SNAPSHOT
          - RESTORE_SNAPSHOT
          - REMOVE_ALL_SNAPSHOTS
          type: string
        style: form
      - description: Desired number of CPUs, if resizing host in a non instance type
          based virtualization realm
        explode: true
        in: query
        name: cpu
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Desired amount of RAM in Mebibytes, if resizing host in a non
          instance type based virtualization realm
        explode: true
        in: query
        name: ram
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The instance type name to resize to, if resizing host in an instance
          type based virtualization realm
        explode: true
        in: query
        name: instanceTypeName
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid deployment run ID or host ID supplied
        "404":
          description: Deployment run not found
      summary: Execute Host Action
      tags:
      - Deployment Runs
  /api/drs/{id}/redeployhosts:
    put:
      description: Requests the redeploy of one or more deployment run hosts.
      operationId: redeployDeploymentRunHosts
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              items:
                $ref: '#/components/schemas/RestIdObject'
              type: array
        description: The collection of deployment run host ids to redeploy
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid deployment run ID or host IDs supplied
        "404":
          description: Deployment run not found
      summary: Redeploy Deployment Run Hosts
      tags:
      - Deployment Runs
  /api/drs/{id}/host/{hostid}/resize:
    get:
      description: Returns a collection of available instance types for resizing a
        Deployment Run Host.
      operationId: getHostInstanceTypes
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of host
        explode: false
        in: path
        name: hostid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TargetInstanceTypes'
          description: OK
        "400":
          description: Invalid deployment run ID, host id, or query parameter supplied
        "404":
          description: Deployment run or host not found
      summary: List available instance types for host
      tags:
      - Deployment Runs
  /api/drs/{id}/rerun:
    put:
      description: Launches a new Deployment Run with the same configuration as the
        specified Deployment Run.
      operationId: relaunchDeploymentRun
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid deployment run ID supplied
        "404":
          description: Deployment run not found
      summary: Relaunch Deployment Run
      tags:
      - Deployment Runs
  /api/drs/{id}/publish:
    delete:
      description: |-
        Unpublishes the specified Deployment as a Composition.<br>
        <br>
        Consumers will no longer be able to connect to the run, and the run will no longer appear to consumers.
      operationId: unpublishDeploymentRun
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid deployment run ID or data supplied
        "404":
          description: Deployment run not found
      summary: Unpublish Deployment Run
      tags:
      - Compositions
      - Deployment Runs
    post:
      description: |-
        Publishes the specified Deployment as a Composition.<br>
        <br>
        Consumers will be able to connect to the run, but will not be able to manage the composition.
      operationId: publishDeploymentRun
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid deployment run ID or data supplied
        "404":
          description: Deployment run not found
      summary: Publish Deployment Run
      tags:
      - Compositions
      - Deployment Runs
  /api/drs/{id}/powerschedule:
    put:
      description: Updates the Power Schedule for a single Deployment Run with the
        given ID.
      operationId: setPowerScheduleForDeploymentRun
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PowerSchedule'
          application/xml:
            schema:
              $ref: '#/components/schemas/PowerSchedule'
        description: The desired power schedule
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid ID or data supplied
        "404":
          description: Deployment run not found
      summary: Update Power Schedule
      tags:
      - Deployment Runs
  /api/drs/{id}/retest:
    put:
      description: Re-executes all Tests in the specified Deployment Run.
      operationId: retestDeploymentRun
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid deployment run ID supplied
        "404":
          description: Deployment run not found
      summary: Re-test Deployment Run
      tags:
      - Deployment Runs
  /api/drs/{id}/downloadhost:
    get:
      description: |-
        Downloads a single Host Bundle for the specified Deployment Run.<br>
        <br>
        Based on the background flag, the download will either be done in the foreground (false), background (true), or be determined by asset size (no value).<br>
        <br>
        If the background flag is set to true (or no value for the background flag is provided), and the host is larger than the site threshold, it will be prepared for download in the background and an email with a link to retrieve the asset will be sent.
      operationId: downloadHost
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Name of host to bundle for download
        explode: true
        in: query
        name: role
        required: true
        schema:
          type: string
        style: form
      - description: Force the download to happen in the background
        explode: true
        in: query
        name: background
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          description: OK
        "202":
          description: Accepted
        "400":
          description: Invalid ID or role supplied
        "404":
          description: Deployment run not found
      summary: Download Host
      tags:
      - Deployment Runs
  /api/drs/{id}/host/{hostid}/container:
    put:
      description: Re-deploys the specified Container Asset installation on the single
        Host in the specified Deployment Run.
      operationId: redeployContainerAsset
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of host
        explode: false
        in: path
        name: hostid
        required: true
        schema:
          type: string
        style: simple
      - description: ID of container asset installation
        explode: true
        in: query
        name: installationid
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputContainerComponent'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputContainerComponent'
        description: The updated Container Component definition
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid deployment run ID, host ID, or installation ID supplied
        "404":
          description: Deployment run not found
      summary: Re-deploy Container Asset
      tags:
      - Deployment Runs
  /api/drs/{id}/host/{hostid}/access:
    get:
      description: Returns a collection of the Host Access Logs for a single Deployment
        Run.
      operationId: getHostAccess
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of host
        explode: false
        in: path
        name: hostid
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RemoteAccessSession'
                type: array
          description: OK
        "400":
          description: Invalid deployment run ID, host id, or query parameter supplied
        "404":
          description: Deployment run or host not found
      summary: List Host Access Logs
      tags:
      - Deployment Runs
  /api/drs/{id}/host/{hostid}/identity:
    delete:
      description: Deletes the identity of a deployment run host.
      operationId: deleteIdentity
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of host
        explode: false
        in: path
        name: hostid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid deployment run ID, host id, or query parameter supplied
        "404":
          description: Deployment run, host, or identity not found
      summary: Delete host identity
      tags:
      - Deployment Runs
      - Identities
    get:
      description: Returns the deployment run host identity for the user, if one exists.
      operationId: getIdentity
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of host
        explode: false
        in: path
        name: hostid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CloudResourceAccessListing'
                type: array
          description: OK
        "400":
          description: Invalid deployment run ID, host id, or query parameter supplied
        "404":
          description: Deployment run or host not found
      summary: Get Host Identity For User
      tags:
      - Deployment Runs
      - Identities
    post:
      description: Creates an identity for the deployment run host with access to
        the resources requested by the user
      operationId: createIdentity
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of host
        explode: false
        in: path
        name: hostid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          '*/*':
            schema:
              items:
                $ref: '#/components/schemas/CloudResourceObject'
              type: array
        description: The cloud resources to be accessed by the host identity
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BaseIdentity'
                type: array
          description: OK
        "400":
          description: Invalid deployment run ID, host id, or query parameter supplied
        "404":
          description: Deployment run or host not found
      summary: Create a host identity
      tags:
      - Deployment Runs
      - Identities
  /api/drs/{id}/host/{hostid}/identities:
    get:
      description: Returns a collection of identities for the deployment run host
      operationId: getIdentities
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of host
        explode: false
        in: path
        name: hostid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BaseIdentity'
                type: array
          description: OK
        "400":
          description: Invalid deployment run ID, host id, or query parameter supplied
        "404":
          description: Deployment run or host not found
      summary: Get Host Identities
      tags:
      - Deployment Runs
      - Identities
  /api/drs/{id}/host/{hostid}/identity/{username}:
    delete:
      description: Deletes an identity for a user specified by name
      operationId: deleteIdentityById
      parameters:
      - description: ID of deployment run
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of host
        explode: false
        in: path
        name: hostid
        required: true
        schema:
          type: string
        style: simple
      - description: Username of the identity to be deleted
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BaseIdentity'
                type: array
          description: OK
        "400":
          description: Invalid deployment run ID, host id, or query parameter supplied
        "404":
          description: Deployment run, host, or identity not found
      summary: Deletes identity for specified user
      tags:
      - Deployment Runs
      - Identities
  /api/import:
    post:
      description: |-
        Imports an Asset in the form of a zip file.<br>
        <br>
        File must be submitted as multipart-form data, with a file element named "file" and a filename field containing a name that ends in ".zip" <br>
        <br>
        A "Connection: Keep-Alive" configuration may be needed for larger sized files, due to the time it takes to copy to the server.
      operationId: uploadFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputFileForm'
        description: The file object
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: OK
        "202":
          description: Accepted
        "400":
          description: Invalid file data supplied
      summary: Import a New Asset
      tags:
      - Import
  /api/projects/{id}:
    delete:
      description: Deletes a single Project with the given ID.
      operationId: deleteProject
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Delete all dependencies
        explode: true
        in: query
        name: force
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid project ID supplied
        "404":
          description: Project not found
      summary: Delete Project
      tags:
      - Projects
    get:
      description: Returns a single Project by the given ID.
      operationId: getProject
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullProject'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Project not found
      summary: Retrieve Project
      tags:
      - Projects
    put:
      description: Updates the content of a single Project with the given ID.
      operationId: updateProject
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputProjectUpdate'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputProjectUpdate'
        description: The modified Project
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid ID or data supplied
        "404":
          description: Project not found
      summary: Update Project
      tags:
      - Projects
  /api/projects:
    get:
      description: Returns a collection of the user's relevant Projects matching a
        specified query.
      operationId: getProjects
      parameters:
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalProject'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List Joined Projects
      tags:
      - Projects
    post:
      description: Creates a single Project.
      operationId: createProject
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputProjectFull'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputProjectFull'
        description: The Project to create
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid data supplied
      summary: Create a Project
      tags:
      - Projects
  /api/projects/{id}/addtrustedproject:
    put:
      description: |-
        Adds the target Project as a Trusted Partner of the specified Project.<br>
        <br>
        Doing so makes the target Project eligible to be selected as trusted when sharing certain Assets.
      operationId: addTrustedProject_1
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of trusted project
        explode: true
        in: query
        name: trustedid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid project ID or target project ID supplied
        "404":
          description: Project not found
      summary: Assign Trusted Project to Project
      tags:
      - Projects
  /api/projects/{id}/removetrustedproject:
    put:
      description: Removes the target Project from the specified Project's list of
        Trusted Partners.
      operationId: removeTrustedProject_1
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of trusted project
        explode: true
        in: query
        name: trustedid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid project ID or target project ID supplied
        "404":
          description: Project not found
      summary: Unassign Trusted Project from Project
      tags:
      - Projects
  /api/projects/expanded:
    get:
      description: Returns a collection of public Projects the user has not joined.
      operationId: getProjectsExpanded
      parameters:
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalProject'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List Unjoined Projects
      tags:
      - Projects
  /api/projects/{id}/members:
    delete:
      description: Removes the provided member from the specified Project.
      operationId: removeProjectMember
      parameters:
      - description: Username of desired member
        explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid project ID or username supplied
        "404":
          description: Project not found
      summary: Unassign Member from Project
      tags:
      - Projects
    get:
      description: Returns a collection of the users that are members of the specified
        Project.
      operationId: listMembers
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Project membership state type
        explode: true
        in: query
        name: membershipState
        required: false
        schema:
          enum:
          - REQUESTED
          - ACTIVE
          - BLOCKED
          - DELETED
          type: string
        style: form
      - description: Project member role type
        explode: true
        in: query
        name: role
        required: false
        schema:
          enum:
          - ADMINISTRATOR
          - ASSET_RESTORER
          - STATUS_READER
          - UI_MACHINE
          - TEST_TOOL
          - MEMBER
          - CONSUMER
          - STANDARD
          - SOFTWARE_DEVELOPER
          - TEST_DEVELOPER
          - ASSET_SHARER
          - ASSET_PROMOTER
          - POWER_SCHEDULE_UPDATER
          - PROJECT_OWNER
          - PROJECT_MANAGER
          - PROJECT_MODERATOR
          - REMOTE_ACCESS
          - MAESTRO_MACHINE
          - FAP_MACHINE
          - SCHEDULER_MACHINE
          - CONS3RT_MACHINE
          - SOURCEBUILDER_MACHINE
          - SYSTEM_ASSET_IMPORTER
          - ASSET_CERTIFIER
          - ASSET_UPLOADER
          type: string
        style: form
      - description: User name to search for
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserProject'
                type: array
          description: OK
        "400":
          description: Invalid project ID supplied
        "404":
          description: Project not found
      summary: List Members
      tags:
      - Projects
    put:
      description: Assigns the provided user as a member of the specified Project.
      operationId: addProjectMember
      parameters:
      - description: Username of desired member
        explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid project ID or username supplied
        "404":
          description: Project not found
      summary: Assign Project Member
      tags:
      - Projects
  /api/projects/{id}/virtualizationrealms:
    get:
      description: Returns a collection of the Virtualization Realms accessible by
        the specified Project.
      operationId: getProjectVirtRealms
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalVirtualizationRealm'
                type: array
          description: OK
        "400":
          description: Invalid project ID supplied
        "404":
          description: Project not found
      summary: List Virtualization Realms
      tags:
      - Projects
  /api/projects/{id}/invitation:
    post:
      description: Creates an Invitation Code to be used by a new user at the time
        of creation to automatically associate them with the specified Project.
      operationId: requestProjectInvitation
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Email address of invitee
        explode: true
        in: query
        name: email
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid project ID or email address supplied
        "404":
          description: Project not found
      summary: Create Invitation Code
      tags:
      - Projects
  /api/projects/{id}/virtualizationrealms/default:
    put:
      description: Updates the default Virtualization Realm for the specified Project.
      operationId: setProjectDefaultVirtualizationRealm
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of virtualization realm
        explode: true
        in: query
        name: virtualizationrealmid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid project ID or virtualization realm ID supplied
        "404":
          description: Project not found
      summary: Update Default Virtualization Realm
      tags:
      - Projects
  /api/projects/{id}/itar:
    put:
      description: |-
        Sets the Export Restriction of Assets created within the specified Project.<br>
        <br>
        Once a Project is labeled as ITAR-restricted, this cannot be changed.
      operationId: setProjectItarInformation
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Additional information about the export restriction
        explode: true
        in: query
        name: message
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid project ID or export restriction supplied
        "404":
          description: Project not found
      summary: Set Asset Export Restriction
      tags:
      - Projects
  /api/projects/{id}/powerschedule:
    put:
      description: Updates the default Power Schedule for Deployment Runs launched
        by members of the specified Project.
      operationId: setProjectDefaultPowerSchedule
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PowerSchedule'
          application/xml:
            schema:
              $ref: '#/components/schemas/PowerSchedule'
        description: The desired power schedule
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid project ID or power scheduled supplied
        "404":
          description: Project not found
      summary: Update Default Power Schedule
      tags:
      - Projects
  /api/projects/{id}/metrics/virtualmachinecount:
    get:
      description: Returns metric data for Virtual Machines launched by members of
        the specified Project.
      operationId: getVirtualMachineCountMetrics
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Interval start time, specified in seconds since epoch
        explode: true
        in: query
        name: start
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: Interval end time, specified in seconds since epoch
        explode: true
        in: query
        name: end
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: Number of intervals
        explode: true
        in: query
        name: interval
        required: false
        schema:
          default: 1
          format: int64
          type: integer
        style: form
      - description: Interval unit
        explode: true
        in: query
        name: intervalUnit
        required: false
        schema:
          default: HOURS
          enum:
          - Nanos
          - Micros
          - Millis
          - Seconds
          - Minutes
          - Hours
          - HalfDays
          - Days
          - Weeks
          - Months
          - Years
          - Decades
          - Centuries
          - Millennia
          - Eras
          - Forever
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid ID or query parameters supplied
        "404":
          description: Project not found
      summary: Retrieve Virtual Machine Metrics
      tags:
      - Projects
  /api/projects/{id}/metrics/hostconfiguration:
    get:
      description: Returns metric data for Deployment Runs launched by members of
        the specified Project.
      operationId: getHostConfigurationMetrics
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Interval start time, specified in seconds since epoch
        explode: true
        in: query
        name: start
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: Interval end time, specified in seconds since epoch
        explode: true
        in: query
        name: end
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: Number of intervals
        explode: true
        in: query
        name: interval
        required: false
        schema:
          default: 1
          format: int64
          type: integer
        style: form
      - description: Interval unit
        explode: true
        in: query
        name: intervalUnit
        required: false
        schema:
          default: HOURS
          enum:
          - Nanos
          - Micros
          - Millis
          - Seconds
          - Minutes
          - Hours
          - HalfDays
          - Days
          - Weeks
          - Months
          - Years
          - Decades
          - Centuries
          - Millennia
          - Eras
          - Forever
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid ID or query parameters supplied
        "404":
          description: Project not found
      summary: Retrieve Metrics
      tags:
      - Projects
      - Deployment Runs
  /api/projects/{id}/members/roles:
    delete:
      description: Removes the provided Role from the specified member of the Project.
      operationId: removeRoleFromProjectMember
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username of project member
        explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      - description: Project role to remove
        explode: true
        in: query
        name: role
        required: true
        schema:
          enum:
          - ADMINISTRATOR
          - ASSET_RESTORER
          - STATUS_READER
          - UI_MACHINE
          - TEST_TOOL
          - MEMBER
          - CONSUMER
          - STANDARD
          - SOFTWARE_DEVELOPER
          - TEST_DEVELOPER
          - ASSET_SHARER
          - ASSET_PROMOTER
          - POWER_SCHEDULE_UPDATER
          - PROJECT_OWNER
          - PROJECT_MANAGER
          - PROJECT_MODERATOR
          - REMOTE_ACCESS
          - MAESTRO_MACHINE
          - FAP_MACHINE
          - SCHEDULER_MACHINE
          - CONS3RT_MACHINE
          - SOURCEBUILDER_MACHINE
          - SYSTEM_ASSET_IMPORTER
          - ASSET_CERTIFIER
          - ASSET_UPLOADER
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid project ID, username, or project role supplied
        "404":
          description: Project not found
      summary: Unassign Role from Member
      tags:
      - Projects
    put:
      description: Assigns the provided role to the specified member of the Project.
      operationId: addRoleToProjectMember
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username of project member
        explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      - description: Project role to add
        explode: true
        in: query
        name: role
        required: true
        schema:
          enum:
          - ADMINISTRATOR
          - ASSET_RESTORER
          - STATUS_READER
          - UI_MACHINE
          - TEST_TOOL
          - MEMBER
          - CONSUMER
          - STANDARD
          - SOFTWARE_DEVELOPER
          - TEST_DEVELOPER
          - ASSET_SHARER
          - ASSET_PROMOTER
          - POWER_SCHEDULE_UPDATER
          - PROJECT_OWNER
          - PROJECT_MANAGER
          - PROJECT_MODERATOR
          - REMOTE_ACCESS
          - MAESTRO_MACHINE
          - FAP_MACHINE
          - SCHEDULER_MACHINE
          - CONS3RT_MACHINE
          - SOURCEBUILDER_MACHINE
          - SYSTEM_ASSET_IMPORTER
          - ASSET_CERTIFIER
          - ASSET_UPLOADER
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid project ID, username, or project role supplied
        "404":
          description: Project not found
      summary: Assign Role to Member
      tags:
      - Projects
  /api/projects/{id}/submission:
    get:
      description: Returns a collection of the available Submission Services for the
        specified Project.
      operationId: listSubmissionSerivcesForProject
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SubmissionService'
                type: array
          description: OK
        "400":
          description: Invalid project ID supplied
        "404":
          description: Project not found
      summary: List Submission Services
      tags:
      - Projects
    post:
      description: |-
        Adds a new Submission Service to the list of available services for the specified Project.<br>
        <br>
        This Submission Service will act as a template for all Project members submitting to the Service. Members will be able to override the credentials used when submitting to this Service, but will not be able to override the Host or Port of the Service.<br>
        <br>
        If the Service's endpoint is an SFTP host, a submitting member will only be able to override the remote path if one has not already been defined in this default Submission Service.
      operationId: addSubmissionServiceToProject
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputSubmissionServiceForProject'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputSubmissionServiceForProject'
        description: The submission service
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid project ID or data supplied
        "404":
          description: Project not found
      summary: Add Submission Service
      tags:
      - Projects
  /api/projects/{id}/submission/{submission_service_id}:
    delete:
      description: Removes the provided Submission Service from the list of available
        Services for the specified Project.
      operationId: removeSubmissionServiceFromProject
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of submission service
        explode: false
        in: path
        name: submission_service_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid project ID or submission service supplied
        "404":
          description: Project not found
      summary: Remove Submission Service
      tags:
      - Projects
    put:
      description: |-
        Updates an existing Submission Service in the specified Project.<br>
        <br>
        This Submission Service will act as a template for all Project members submitting to the Service. Members will be able to override the credentials used when submitting to this Service, but will not be able to override the Host or Port of the Service.<br>
        <br>
        If the Service's endpoint is an SFTP Host, a submitting member will only be able to override the remote path if one has not already been defined in this default Submission Service.
      operationId: updateSubmissionService
      parameters:
      - description: ID of project
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of submission service
        explode: false
        in: path
        name: submission_service_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputSubmissionServiceForProject'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputSubmissionServiceForProject'
        description: The submission service
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid project ID, submission service ID, or data supplied
        "404":
          description: Project not found
      summary: Update Submission Service
      tags:
      - Projects
  /api/scenarios/{id}/bindings:
    get:
      description: Returns a collection of the possible Virtualization Realm bindings
        for a single scenario.
      operationId: getBindingsForDeployment_1
      parameters:
      - description: ID of scenario
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of preferred virtualization realm
        explode: true
        in: query
        name: virtualizationRealmId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VirtualizationRealmBinding'
                type: array
          description: OK
        "400":
          description: Invalid scenario ID or virtualization realm ID supplied
        "404":
          description: Scenario not found
      summary: List Bindings
      tags:
      - Scenarios
  /api/scenarios/{id}/clone:
    put:
      description: Clones the specified Scenario to a new Scenario with the provided
        name.
      operationId: cloneScenario
      parameters:
      - description: ID of scenario
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the new scenario
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid scenario ID or name supplied
        "404":
          description: Scenario not found
      summary: Clone Scenario
      tags:
      - Scenarios
  /api/scenarios/createscenario:
    put:
      description: |-
        Creates a single Scenario.<br>
        <br>
        All existing Assets used in creation must contain their Asset ID, while Composite Assets to be constructed must contain a valid Asset ID for each element contained.
      operationId: createScenario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputScenario'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputScenario'
        description: The Scenario to create
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid data supplied
      summary: Create Scenario
      tags:
      - Scenarios
  /api/scenarios/{id}:
    get:
      description: Returns a single Scenario by the given ID.
      operationId: getScenario
      parameters:
      - description: ID of scenario
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullScenario'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Scenario not found
      summary: Retrieve Scenario
      tags:
      - Scenarios
  /api/scenarios:
    get:
      description: Returns a collection of the user's relevant Scenarios matching
        a specified query.
      operationId: getScenarios
      parameters:
      - description: Category ID(s) to filter by. Multiple categories can be provided
          with comma-separated strings.
        explode: true
        in: query
        name: categoryids
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalScenario'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List Scenarios
      tags:
      - Scenarios
  /api/scenarios/expanded:
    get:
      description: Returns a collection of all relevant Scenarios matching a specified
        query, including those from the project.
      operationId: getScenariosExpanded
      parameters:
      - description: Include community assets
        explode: true
        in: query
        name: community
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Category ID(s) to filter by. Multiple categories can be provided
          with comma-separated strings.
        explode: true
        in: query
        name: categoryids
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BasicScenario'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List all Scenarios, including Project Assets
      tags:
      - Scenarios
  /api/scenarios/{id}/launch:
    put:
      description: |-
        Launches a Deployment created from the specified Scenario, with the provided Run Options.<br>
        <br>
        A root password can be set within the provided Deployment Run Options, which will override the password for all Hosts.<br>
        <br>
        The override of Host passwords may fail due to template password complexity rules and should not be done without consideration.
      operationId: quickBuild
      parameters:
      - description: ID of scenario
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputDeploymentRunOptions'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputDeploymentRunOptions'
        description: The deployment run options to use when launching the deployment
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid scenario ID or run options supplied
        "404":
          description: Scenario not found
      summary: Launch Scenario
      tags:
      - Scenarios
  /api/scenarios/{id}/publish:
    post:
      description: Publishes the specified Scenario as a Composition, with the provided
        Run Options for launching.
      operationId: publishScenarioToComposition
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputComposition'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputComposition'
        description: The composition definition used when launching the deployment
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid scenario ID or run options supplied
        "404":
          description: Scenario not found
      summary: Publish Scenario
      tags:
      - Scenarios
      - Compositions
  /api/search:
    get:
      description: Returns a collection of all relevant Assets matching a specified
        query, including those from the project.
      operationId: search
      parameters:
      - description: ID of asset to search for
        explode: true
        in: query
        name: id
        required: false
        schema:
          type: string
        style: form
      - description: Text to search for. This string must be URL encoded.
        explode: true
        in: query
        name: text
        required: false
        schema:
          type: string
        style: form
      - description: Category ID(s) to filter by. Multiple categories can be provided
          with comma-separated strings.
        explode: true
        in: query
        name: categoryids
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BasicAsset'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: Search all Assets, including Project Assets
      tags:
      - Assets
  /api/client/{id}:
    post:
      description: Launch a pre-existing Composition, declaring the username, password,
        and (optionally) the time to live.
      operationId: launchComposition
      parameters:
      - description: ID of composition to launch
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompositionLaunchOptions'
          application/xml:
            schema:
              $ref: '#/components/schemas/CompositionLaunchOptions'
        description: The Composition launch options
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  format: int32
                  type: integer
                type: array
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Composition not found
      summary: Launch Composition
      tags:
      - Client
  /api/client:
    get:
      description: Returns a collection of statuses for the user's available Compositions.
      operationId: listCompositionStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AbstractCompositionStatus'
                type: array
          description: OK
      summary: List Composition Statuses
      tags:
      - Client
  /api/software/bundles:
    get:
      description: Returns a collection of the user's relevant Software Bundles matching
        a specified query.
      operationId: getSoftwareBundles
      parameters:
      - description: Category ID(s) to filter by. Multiple categories can be provided
          with comma-separated strings.
        explode: true
        in: query
        name: categoryids
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalSoftwareAssetBundle'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List Software Bundles
      tags:
      - Software Bundles
    post:
      description: Create a single Software Bundle from the Software Components of
        the specified System Module.
      operationId: createSoftwareAssetBundleFromSystemModule
      parameters:
      - description: ID of system module
        explode: true
        in: query
        name: systemId
        required: true
        schema:
          type: string
        style: form
      - description: Name of the new software bundle
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          '*/*':
            schema:
              type: string
        description: Description of the new software bundle
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid system module ID or data supplied
        "404":
          description: System module not found
      summary: Create Software Bundle
      tags:
      - Software Bundles
  /api/software/bundles/expanded:
    get:
      description: Returns a collection of all relevant Software Bundles matching
        a specified query, including those from the Project.
      operationId: getSoftwareAssetBundleExpanded
      parameters:
      - description: Include community assets
        explode: true
        in: query
        name: community
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Category ID(s) to filter by. Multiple categories can be provided
          with comma-separated strings.
        explode: true
        in: query
        name: categoryids
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BasicSoftwareAssetBundle'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List all Software Bundles, including Project Assets
      tags:
      - Software Bundles
  /api/software/bundles/{id}:
    delete:
      description: Delete a single Software Bundle with the given ID.
      operationId: deleteSoftwareAssetBundle
      parameters:
      - description: ID of software bundle
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Software Bundle not found
      summary: Delete Software Bundle
      tags:
      - Software Bundles
    get:
      description: Returns a single Software Bundle by the given ID.
      operationId: getSoftwareBundle
      parameters:
      - description: ID of software bundle
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullSoftwareAssetBundle'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Software Bundle not found
      summary: Retrieve Software Bundle
      tags:
      - Software Bundles
  /api/software/{id}:
    get:
      description: Returns a single Software Asset by the given ID.
      operationId: getSoftware
      parameters:
      - description: ID of software asset
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullSoftwareAsset'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Software Asset not found
      summary: Retrieve Software Asset
      tags:
      - Software Assets
  /api/software:
    get:
      description: Returns a collection of the user's relevant Software Assets matching
        a specified query.
      operationId: getSoftwareSet
      parameters:
      - description: Software Asset type
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - APPLICATION
          - SOURCE_CODE
          - TEST_TOOL
          type: string
        style: form
      - description: Category ID(s) to filter by. Multiple categories can be provided
          with comma-separated strings.
        explode: true
        in: query
        name: categoryids
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalSoftwareAsset'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List Software Assets
      tags:
      - Software Assets
  /api/software/expanded:
    get:
      description: Returns a collection of all relevant Software Assets matching a
        specified query, including those from the Project.
      operationId: getSoftwareSetExpanded
      parameters:
      - description: Software Asset type
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - APPLICATION
          - SOURCE_CODE
          - TEST_TOOL
          type: string
        style: form
      - description: Include community assets
        explode: true
        in: query
        name: community
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Category ID(s) to filter by. Multiple categories can be provided
          with comma-separated strings.
        explode: true
        in: query
        name: categoryids
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BasicSoftwareAsset'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List all Software Assets, including Project Assets
      tags:
      - Software Assets
  /api/software/{id}/updateinstall:
    put:
      description: Updates the Software Asset Installation Script with the supplied
        data.
      operationId: updateSoftwareAssetInstallScript
      parameters:
      - description: ID of software asset
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputFileForm'
        description: The file object
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid ID or file data supplied
        "404":
          description: Software Asset not found
      summary: Update Install Script
      tags:
      - Assets
      - Software Assets
  /api/systemassets:
    get:
      description: Returns a collection of currently registered System Assets.
      operationId: listSystemAssets
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalSystemAsset'
                type: array
          description: OK
      summary: List System Assets
      tags:
      - System Assets
    post:
      description: Create a new System Asset registration.
      operationId: createSystemAsset
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputSystemAsset'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputSystemAsset'
        description: The System Asset definition
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FullSystemAsset'
                type: array
          description: OK
      summary: Create System Asset
      tags:
      - System Assets
  /api/systemassets/{id}:
    delete:
      description: Delete a single System Asset with the given ID.
      operationId: deleteSystemAsset
      parameters:
      - description: ID of system asset to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid System Asset ID supplied
        "404":
          description: System Asset not found
      summary: Delete System Asset
      tags:
      - System Assets
    get:
      description: Retrieves an existing System Asset registration based on ID.
      operationId: retrieveSystemAsset
      parameters:
      - description: ID of System Asset
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FullSystemAsset'
                type: array
          description: OK
        "400":
          description: Invalid system asset ID supplied
        "404":
          description: System Asset not found
      summary: Retrieve System Asset
      tags:
      - System Assets
    put:
      description: Update the content of a single System Asset with the given ID and
        new registration information.
      operationId: updateSystemAsset
      parameters:
      - description: ID of System Asset to update
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputSystemAsset'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputSystemAsset'
        description: The modified System Asset definition
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullSystemAsset'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: System Asset not found
      summary: Update System Asset
      tags:
      - System Assets
  /api/systemassets/{id}/import:
    post:
      description: Import a System Asset from an existing System Asset registration,
        based on ID.
      operationId: importSystemAsset
      parameters:
      - description: ID of system asset to import
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid System Asset ID supplied
        "404":
          description: System Asset not found
      summary: Import System Asset
      tags:
      - System Assets
  /api/systems/{id}:
    get:
      description: Returns a single System by the given ID.
      operationId: getSystem
      parameters:
      - description: ID of system
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullSystemModule'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: System not found
      summary: Retrieve System
      tags:
      - Systems
  /api/systems/{id}/createscenario:
    put:
      description: Creates a single-Host Scenario with the provided name from the
        specified System.
      operationId: createScenario_1
      parameters:
      - description: ID of system
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the new scenario
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      - description: System role name in the new scenario
        explode: true
        in: query
        name: role
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid system ID, name, or role supplied
        "404":
          description: System not found
      summary: Create Scenario from System
      tags:
      - Systems
  /api/systems/{id}/launch:
    put:
      description: |-
        Launches a Deployment created from the specified System, with the provided Run Options.<br>
        <br>
        A root password can be set within the provided Deployment Run Options, which will override the password for all Hosts.<br>
        <br>
        The override of Host passwords may fail due to template password complexity rules and should not be done without consideration.
      operationId: quickBuild_1
      parameters:
      - description: ID of system
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputDeploymentRunOptions'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputDeploymentRunOptions'
        description: The deployment run options to use when launching the deployment
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid system ID or run options supplied
        "404":
          description: System not found
      summary: Launch System
      tags:
      - Scenarios
      - Systems
  /api/systems/{id}/clone:
    put:
      description: Clones the specified System to a new System with the provided name.
      operationId: cloneSystem
      parameters:
      - description: ID of system
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the new system
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid system ID or name supplied
        "404":
          description: System not found
      summary: Clone System
      tags:
      - Deployments
      - Systems
  /api/systems/createsystem:
    put:
      description: |-
        Creates a single System.<br>
        <br>
        All existing Assets used in creation must contain their Asset ID.
      operationId: createSystemEntire
      requestBody:
        content:
          application/xml:
            schema:
              $ref: '#/components/schemas/InputSystemModule'
          application/json:
            schema:
              $ref: '#/components/schemas/InputSystemModule'
        description: The System to create
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid data supplied
      summary: Create System
      tags:
      - Scenarios
      - Systems
  /api/systems:
    get:
      description: Returns a collection of the user's relevant Systems matching a
        specified query.
      operationId: getSystems
      parameters:
      - description: System module type
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - APPLIANCE
          - DEVICE
          - PHYSICAL_HOST
          - VIRTUAL_HOST
          - INVALID
          type: string
        style: form
      - description: Category ID(s) to filter by. Multiple categories can be provided
          with comma-separated strings.
        explode: true
        in: query
        name: categoryids
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalSystemModule'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List Systems
      tags:
      - Systems
  /api/systems/expanded:
    get:
      description: Returns a collection of all relevant Systems matching a specified
        query, including those from the Project.
      operationId: getSystemsExpanded
      parameters:
      - description: System module type
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - APPLIANCE
          - DEVICE
          - PHYSICAL_HOST
          - VIRTUAL_HOST
          - INVALID
          type: string
        style: form
      - description: Include community assets
        explode: true
        in: query
        name: community
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Category ID(s) to filter by. Multiple categories can be provided
          with comma-separated strings.
        explode: true
        in: query
        name: categoryids
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BasicSystemModule'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List all Systems, including Project Assets
      tags:
      - Systems
  /api/systems/{id}/softwarebundle:
    post:
      description: Creates a single Software Bundle from the Software Components of
        the specified System.
      operationId: createSoftwareBundleFromSystemModule
      parameters:
      - description: ID of system module
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the new software bundle
        explode: true
        in: query
        name: name
        required: true
        schema:
          type: string
        style: form
      requestBody:
        content:
          '*/*':
            schema:
              type: string
        description: Description of the new software bundle
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid system module ID or data supplied
        "404":
          description: System module not found
      summary: Create Software Bundle
      tags:
      - Systems
  /api/systems/{id}/softwareconfiguration:
    put:
      description: |-
        Updates the Software Component Configuration of a System to the provided set of Software Components, including their individual Configurations.<br>
        <br>
        User must be an Administrator and System Module Software Components will be replaced with the set provided.
      operationId: updateSoftwareConfigurationForSystemModule
      parameters:
      - description: ID of system module
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/InputSoftwareComponent'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/InputSoftwareComponent'
              type: array
        description: The updated software components
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid system module ID or data supplied
        "404":
          description: System module not found
      summary: Update Software Configuration
      tags:
      - Systems
  /api/systems/{id}/softwarecomponents:
    put:
      description: Updates the Software Components of a System, including their individual
        Configurations.
      operationId: updateSoftwareComponentsForSystemModule
      parameters:
      - description: ID of system module
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/InputSoftwareComponent'
              type: array
          application/xml:
            schema:
              items:
                $ref: '#/components/schemas/InputSoftwareComponent'
              type: array
        description: The updated software components
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid system module ID or data supplied
        "404":
          description: System module not found
      summary: Update Software Components
      tags:
      - Systems
  /api/systems/{id}/replacesoftware:
    put:
      description: Replaces the underlying Software Asset within the specified Software
        Component of the specified System.
      operationId: replaceSoftwareAssetForSoftwareComponent
      parameters:
      - description: ID of system module
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of software component to modify
        explode: true
        in: query
        name: componentid
        required: true
        schema:
          type: string
        style: form
      - description: ID of desired software asset
        explode: true
        in: query
        name: assetid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid system module ID, software component ID, or software
            asset ID supplied
        "404":
          description: System module not found
      summary: Replace Software Asset
      tags:
      - Systems
  /api/systems/{id}/softwarecomponent/{componentid}:
    put:
      description: Update a single Software Component of the specified System.
      operationId: updateSoftwareComponentForSystemModule
      parameters:
      - description: ID of system module
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of software component to modify
        explode: false
        in: path
        name: componentid
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputSoftwareComponent'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputSoftwareComponent'
        description: The modified Software Component
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid system module ID or software component ID supplied
        "404":
          description: System module not found
      summary: Update Software Component
      tags:
      - Systems
  /api/systems/{id}/templateprofile:
    put:
      description: Update the Template Profile of the specified System.
      operationId: updateTemplateProfileForSystemModule
      parameters:
      - description: ID of system module
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputTemplateProfile'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputTemplateProfile'
        description: The modified Template Profile
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid system module ID or template profile supplied
        "404":
          description: System module not found
      summary: Updates Template Profile
      tags:
      - Systems
  /api/teams:
    get:
      description: Returns a collection of the registered Teams matching a specified
        query.
      operationId: getTeams
      parameters:
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalTeam'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List Teams
      tags:
      - Teams
    post:
      description: Creates a single Team.
      operationId: createTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputTeamFull'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputTeamFull'
        description: The Team to create
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid data supplied
      summary: Create Team
      tags:
      - Teams
  /api/teams/{id}:
    delete:
      description: Deletes a single inactive Team with the given ID.
      operationId: DeleteTeam
      parameters:
      - description: ID of team
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid team ID supplied
        "404":
          description: Team not found
      summary: Delete Team
      tags:
      - Teams
    get:
      description: Returns a single Team by the given ID.
      operationId: retrieveTeam
      parameters:
      - description: ID of team
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullTeam'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Team not found
      summary: Retrieve Team
      tags:
      - Teams
    put:
      description: Updates the content of a single Team with the given ID.
      operationId: updateTeam
      parameters:
      - description: ID of team
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputTeamFull'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputTeamFull'
        description: The modified team definition
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid ID or data supplied
        "404":
          description: Team not found
      summary: Update Team
      tags:
      - Teams
  /api/teams/{id}/updatestate:
    put:
      description: Updates the State of a single Team with the given ID.
      operationId: updateTeamState
      parameters:
      - description: ID of team
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Updated team state type
        explode: true
        in: query
        name: state
        required: true
        schema:
          enum:
          - ACTIVE
          - INACTIVE
          - REQUESTED
          - RETIRED
          - UNFUNDED
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid ID or state supplied
        "404":
          description: Team not found
      summary: Update State
      tags:
      - Teams
  /api/teams/{id}/project/{project_id}/limits:
    put:
      description: Updates the resource limits for the specified Project within the
        specified Team.
      operationId: setProjectLimits
      parameters:
      - description: ID of team
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project
        explode: false
        in: path
        name: project_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectLimits'
          application/xml:
            schema:
              $ref: '#/components/schemas/ProjectLimits'
        description: The desired project limits
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid team ID, project ID, or data supplied
        "404":
          description: Team not found
      summary: Update Project Limits
      tags:
      - Teams
  /api/teams/{id}/clouds:
    get:
      description: Returns a collection of the Clouds belonging to the specified Team.
      operationId: getTeamOwnedClouds
      parameters:
      - description: ID of team
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalCloud'
                type: array
          description: OK
        "400":
          description: Invalid team ID supplied
        "404":
          description: Team not found
      summary: List Clouds
      tags:
      - Teams
  /api/teams/{id}/virtualizationrealms:
    get:
      description: Returns a collection of the Virtualization Realms belonging to
        the specified Team.
      operationId: getTeamOwnedOrManagedVirtualizationRealms
      parameters:
      - description: ID of team
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalVirtualizationRealm'
                type: array
          description: OK
        "400":
          description: Invalid team ID supplied
        "404":
          description: Team not found
      summary: List Virtualization Realms
      tags:
      - Teams
  /api/teams/{id}/managers:
    delete:
      description: Removes the provided user as a Manager from the specified Team.
      operationId: removeTeamManagerFromTeam
      parameters:
      - description: ID of team
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username of manager to remove
        explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid team ID or username supplied
        "404":
          description: Team not found
      summary: Unassign Manager from Team
      tags:
      - Teams
    put:
      description: Assigns the provided user as a Manager of the specified Team
      operationId: addTeamManagerToTeam
      parameters:
      - description: ID of team
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Username of desired manager
        explode: true
        in: query
        name: username
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid team ID or username supplied
        "404":
          description: Team not found
      summary: Assign Manager
      tags:
      - Teams
  /api/templates:
    get:
      description: Returns a collection of the user's available Templates matching
        a specified query.
      operationId: listVirtualizationRealmTemplates
      parameters:
      - description: Virtualization Realm ID to filter by
        explode: true
        in: query
        name: virtualization_realm_id
        required: true
        schema:
          format: int32
          type: integer
        style: form
      - description: Include templates registered to this virtualization realm
        explode: true
        in: query
        name: include_registrations
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Include templates this virtualization realm is subscribed to
        explode: true
        in: query
        name: include_subscriptions
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalCons3rtTemplateData'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List all Templates
      tags:
      - Templates
  /api/testassets/{id}/addtrustedproject:
    put:
      deprecated: true
      operationId: addTestAssetTrustedProject
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: trustedid
        required: true
        schema:
          type: string
        style: form
      responses:
        default:
          content:
            application/json:
              schema:
                type: string
            application/xml:
              schema:
                type: string
          description: default response
      tags:
      - Test Assets
  /api/testassets/{id}:
    get:
      description: Returns a single Test Asset by the given ID.
      operationId: getTestAsset
      parameters:
      - description: ID of test asset
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullTestAsset'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Test Asset not found
      summary: Retrieve Test Asset
      tags:
      - Test Assets
  /api/testassets:
    get:
      description: Returns a collection of the user's relevant Test Assets matching
        a specified query.
      operationId: getTestAssets
      parameters:
      - description: Test Asset type
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - UNKNOWN
          - LISA
          - SOAPUI
          - SELENIUM
          - RETINA
          - NESSUS
          - CERTIFY
          - SCRIPT
          - WEBEXPLOITSUITE
          - FORTIFY
          - SONAR
          - POWERSHELL
          - MOCK
          type: string
        style: form
      - description: Category ID(s) to filter by. Multiple categories can be provided
          with comma-separated strings.
        explode: true
        in: query
        name: categoryids
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalTestAsset'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List Test Assets
      tags:
      - Test Assets
  /api/testassets/expanded:
    get:
      description: Returns a collection of all relevant Test Assets matching a specified
        query, including those from the Project.
      operationId: getTestAssetsExpanded
      parameters:
      - description: Test Asset type
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - UNKNOWN
          - LISA
          - SOAPUI
          - SELENIUM
          - RETINA
          - NESSUS
          - CERTIFY
          - SCRIPT
          - WEBEXPLOITSUITE
          - FORTIFY
          - SONAR
          - POWERSHELL
          - MOCK
          type: string
        style: form
      - description: Include community assets
        explode: true
        in: query
        name: community
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Category ID(s) to filter by. Multiple categories can be provided
          with comma-separated strings.
        explode: true
        in: query
        name: categoryids
        required: false
        schema:
          items:
            format: int32
            type: integer
          type: array
          uniqueItems: true
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BasicTestAsset'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List all Test Assets, including Project Assets
      tags:
      - Test Assets
  /api/testtools:
    get:
      description: Returns a collection of the Test Tools associated with the current
        Environment.
      operationId: getTestTools
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TestTool'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: Get Test Tools
      tags:
      - Test Tools
  /api/upload:
    get:
      description: Downloads an uploaded temporary file for UUID handle.
      operationId: getFileObject
      parameters:
      - description: UUID of the temporary file
        explode: true
        in: query
        name: uuid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          description: OK
        "400":
          description: Invalid file data supplied
        "404":
          description: File not found
      summary: Download File
      tags:
      - Upload
    post:
      description: |-
        Uploads a temporary file for later use within the API.<br>
        <br>
        By default, this file will only be available for 30 minutes.
      operationId: uploadFile_1
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputFileForm'
        description: The file object
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid file data supplied
      summary: Upload File
      tags:
      - Upload
  /api/upload/content:
    get:
      description: Retrieves content of uploaded temporary file.
      operationId: getFileContent
      parameters:
      - description: UUID of the temporary file
        explode: true
        in: query
        name: uuid
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid file data supplied
        "404":
          description: File not found
      summary: Get File Content
      tags:
      - Upload
  /api/users:
    get:
      description: Returns a collection of the users
      operationId: getUsers
      parameters:
      - description: The users state, if a state is not provided users in all states
          will be returned
        explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - REQUESTED
          - ACTIVE
          - INACTIVE
          type: string
        style: form
      - description: Date (seconds since epoch) to filter on
        explode: true
        in: query
        name: createdbefore
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Date (seconds since epoch) to filter on
        explode: true
        in: query
        name: createdafter
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BasicUser'
                type: array
          description: OK
        "400":
          description: Invalid query parameter
      summary: List all Users
      tags:
      - Users
    post:
      description: Creates a new user with the supplied data
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUser'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputUser'
        description: The User definition
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid data supplied
      summary: Create a new user
      tags:
      - Users
  /api/users/pending:
    get:
      deprecated: true
      description: Returns a collection of users who have requested approval.
      operationId: getPendingUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BasicUser'
                type: array
          description: OK
      summary: List Pending Users
      tags:
      - Users
  /api/virtualizationrealms/{id}/maintenance:
    put:
      description: Updates the maintenance status for a single Virtualization Realm
        by the given ID.
      operationId: enableMaintenceMode_1
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Enable or disable maintenance mode
        explode: true
        in: query
        name: enable
        required: false
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MaintenanceModeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/MaintenanceModeRequest'
        description: The maintenance mode request, when enabling maintenance mode
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid virtualization realm ID or data supplied
        "404":
          description: Virtualization realm not found
      summary: Update Maintenance Mode
      tags:
      - Virtualization Realms
  /api/virtualizationrealms/{id}/metrics/virtualmachinecount:
    get:
      description: Returns metric data for Virtual Machines launched into the specified
        Virtualization Realm.
      operationId: getVirtualMachineCountMetrics_1
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Interval start time, specified in seconds since epoch
        explode: true
        in: query
        name: start
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: Interval end time, specified in seconds since epoch
        explode: true
        in: query
        name: end
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: Number of intervals
        explode: true
        in: query
        name: interval
        required: false
        schema:
          default: 1
          format: int64
          type: integer
        style: form
      - description: Interval unit
        explode: true
        in: query
        name: intervalUnit
        required: false
        schema:
          default: HOURS
          enum:
          - Nanos
          - Micros
          - Millis
          - Seconds
          - Minutes
          - Hours
          - HalfDays
          - Days
          - Weeks
          - Months
          - Years
          - Decades
          - Centuries
          - Millennia
          - Eras
          - Forever
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid ID or query parameters supplied
        "404":
          description: Virtualization realm not found
      summary: Retrieve Virtual Machine Metrics
      tags:
      - Virtualization Realms
  /api/virtualizationrealms/{id}/metrics/hostconfiguration:
    get:
      description: Returns metric data for Deployment Runs launched into the specified
        Virtualization Realm.
      operationId: getHostConfigurationMetrics_1
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Interval start time, specified in seconds since epoch
        explode: true
        in: query
        name: start
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: Interval end time, specified in seconds since epoch
        explode: true
        in: query
        name: end
        required: true
        schema:
          format: int64
          type: integer
        style: form
      - description: Number of intervals
        explode: true
        in: query
        name: interval
        required: false
        schema:
          default: 1
          format: int64
          type: integer
        style: form
      - description: Interval unit
        explode: true
        in: query
        name: intervalUnit
        required: false
        schema:
          default: HOURS
          enum:
          - Nanos
          - Micros
          - Millis
          - Seconds
          - Minutes
          - Hours
          - HalfDays
          - Days
          - Weeks
          - Months
          - Years
          - Decades
          - Centuries
          - Millennia
          - Eras
          - Forever
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          description: Invalid ID or query parameters supplied
        "404":
          description: Virtualization realm not found
      summary: Retrieve Metrics
      tags:
      - Virtualization Realms
  /api/virtualizationrealms:
    get:
      description: Returns a collection of the Virtualization Realms that the user
        manages.
      operationId: getVirtualizationRealms
      parameters:
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalVirtualizationRealm'
                type: array
          description: OK
      summary: List Virtualization Realms
      tags:
      - Virtualization Realms
  /api/virtualizationrealms/{id}:
    get:
      description: Returns a single Virtualization Realm by the given ID.
      operationId: getVirtualizationRealm
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullVirtualizationRealm'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Virtualization realm not found
      summary: Retrieve Virtualization Realm
      tags:
      - Virtualization Realms
    put:
      description: Updates the content of a single Virtualization Realm with the given
        ID.
      operationId: updateVirtualizationRealm
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputVRAdminVirtualizationRealm'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputVRAdminVirtualizationRealm'
        description: The updated Virtualization Realm data
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid ID or data supplied
        "404":
          description: Virtualization realm not found
      summary: Update Virtualization Realm
      tags:
      - Clouds
      - Virtualization Realms
  /api/virtualizationrealms/{id}/activate:
    put:
      description: Updates the active State for a single Virtualization Realm by the
        given ID.
      operationId: setVirtualizationRealmActive
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Activate or deactivate virtualization realm
        explode: true
        in: query
        name: activate
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid virtualization realm ID or data supplied
        "404":
          description: Virtualization realm not found
      summary: Update State
      tags:
      - Virtualization Realms
  /api/virtualizationrealms/{id}/projects:
    delete:
      description: Revokes Project member access to the specified Virtualization Realm.
      operationId: removeProject
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project to unassign
        explode: true
        in: query
        name: projectId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid virtualization realm ID or project ID supplied
        "404":
          description: Virtualization realm not found
      summary: Unassign Project
      tags:
      - Virtualization Realms
    get:
      description: Returns a collection of the Projects allowed to access to the specified
        Virtualization Realm.
      operationId: listProjects
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalProject'
                type: array
          description: OK
        "400":
          description: Invalid virtualization realm ID supplied
        "404":
          description: Virtualization realm not found
      summary: List Projects
      tags:
      - Virtualization Realms
    put:
      description: Provides members of the Project with access to the specified Virtualization
        Realm
      operationId: addProject
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of project to assign
        explode: true
        in: query
        name: projectId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: OK
        "400":
          description: Invalid virtualization realm ID or project ID supplied
        "404":
          description: Virtualization realm not found
      summary: Assign Project
      tags:
      - Clouds
      - Virtualization Realms
  /api/virtualizationrealms/{id}/networks:
    get:
      description: Returns a collection of the Networks in the specified Virtualization
        Realm.
      operationId: getNetworks
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalNetwork'
                type: array
          description: OK
        "400":
          description: Invalid virtualization realm ID supplied
        "404":
          description: Virtualization realm not found
      summary: List Networks
      tags:
      - Virtualization Realms
    post:
      description: |-
        Adds a Network to the specified Virtualization Realm.<br>
        <br>
        Since this call results in the construction of a new, back-end Network it has financial implications and should not be used if the user is not prepared to incur the expense of construction and existence of the newly created Network.
      operationId: addNetwork
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AbstractAddNetworkCloudSpaceRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/AbstractAddNetworkCloudSpaceRequest'
        description: The network allocation information
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MinimalVirtualizationRealm'
          description: OK
        "400":
          description: Invalid virtualization realm ID or data supplied
        "404":
          description: Virtualization realm not found
      summary: Allocate Network
      tags:
      - Virtualization Realms
  /api/virtualizationrealms/{id}/networks/unregistered:
    get:
      description: Returns a collection of the unregistered, back-end Networks in
        the specified Virtualization Realm.
      operationId: getUnregisteredNetworks
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Subnet'
                type: array
          description: OK
        "400":
          description: Invalid virtualization realm ID supplied
        "404":
          description: Virtualization realm not found
      summary: List Unregistered Networks
      tags:
      - Virtualization Realms
  /api/virtualizationrealms/{id}/networks/{networkIdentifier}:
    put:
      description: Adds an existing, back-end Network the specified Virtualization
        Realm.
      operationId: registerNetwork
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Back-end network identifier
        explode: false
        in: path
        name: networkIdentifier
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid virtualization realm ID or network identifier supplied
        "404":
          description: Virtualization realm not found
      summary: Register Network
      tags:
      - Virtualization Realms
  /api/virtualizationrealms/{id}/networks/{networkId}:
    delete:
      description: Removes an existing Network from the specified Virtualization Realm.
      operationId: deleteNetwork
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Attempt to delete all back-end resources
        explode: true
        in: query
        name: deallocate
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid virtualization realm ID or network ID supplied
        "404":
          description: Virtualization realm not found
      summary: Delete Network
      tags:
      - Virtualization Realms
    get:
      description: Returns a single Network in the specified Virtualization Realm.
      operationId: getNetwork
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: ID of network
        explode: false
        in: path
        name: networkId
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
          description: OK
        "400":
          description: Invalid virtualization realm ID or network ID supplied
        "404":
          description: Virtualization realm not found
      summary: Retrieve Network
      tags:
      - Virtualization Realms
  /api/virtualizationrealms/{id}/remoteaccess:
    delete:
      description: Disables Remote Access for a single Virtualization Realm by the
        given ID.
      operationId: disableVirtRealmRemoteAccess
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid virtualization realm ID or data supplied
        "404":
          description: Virtualization realm not found
      summary: Disable Remote Access
      tags:
      - Virtualization Realms
    post:
      description: |-
        Enables Remote Access for a single Virtualization Realm by the given ID.<br>
        <br>
        To do so, Remote Access must be configured for the Virtualization Realm.<br>
        <br>
        If no instanceType is provided, the Instance Type will first attempt to use the value from the Virtualization Realm's Remote Access config.
      operationId: enableVirtRealmRemoteAccess
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Remote access server instance type
        explode: true
        in: query
        name: instanceType
        required: false
        schema:
          enum:
          - LARGE
          - MEDIUM
          - SMALL
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid virtualization realm ID or data supplied
        "404":
          description: Virtualization realm not found
      summary: Enable Remote Access
      tags:
      - Virtualization Realms
    put:
      description: |-
        Updates the Remote Access configuration for a single Virtualization Realm by the given ID.<br>
        <br>
        Note: remoteAccessIpAddress cannot be updated if the Virtualization Realm's Remote Access is currently enabled.
      operationId: updateVirtRealmRemoteAccessConfig
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemoteAccessConfig'
          application/xml:
            schema:
              $ref: '#/components/schemas/RemoteAccessConfig'
        description: The updated remote access configuration
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid virtualization realm ID or data supplied
        "404":
          description: Virtualization realm not found
      summary: Update Remote Access
      tags:
      - Virtualization Realms
  /api/virtualizationrealms/{id}/deploymentruns:
    get:
      description: Returns a collection of the Deployment Runs launched into the specified
        Virtualization Realm.
      operationId: getDeploymentRunsInVirtualizationRealm
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Deployment run status type
        explode: true
        in: query
        name: search_type
        required: true
        schema:
          default: SEARCH_ALL
          enum:
          - SEARCH_ACTIVE
          - SEARCH_ALL
          - SEARCH_AVAILABLE
          - SEARCH_COMPOSING
          - SEARCH_DECOMPOSING
          - SEARCH_INACTIVE
          - SEARCH_PROCESSING
          - SEARCH_SCHEDULED
          - SEARCH_TESTING
          - SEARCH_SCHEDULED_AND_ACTIVE
          type: string
        style: form
      - description: Maximum number of results to return
        explode: true
        in: query
        name: maxresults
        required: false
        schema:
          default: 40
          format: int64
          type: integer
        style: form
      - description: Requested page number
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 0
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalDeploymentRun'
                type: array
          description: OK
        "400":
          description: Invalid virtualization realm ID or query parameter supplied
        "404":
          description: Virtualization realm not found
      summary: List Deployment Runs
      tags:
      - Deployments
      - Virtualization Realms
  /api/virtualizationrealms/{id}/templates:
    get:
      description: Returns a collection of the Templates in the specified Virtualization
        Realm.
      operationId: getTemplatesInVirtualizationRealm
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: Include templates registered to the virtualization realm
        explode: true
        in: query
        name: include_registrations
        required: false
        schema:
          default: true
          type: boolean
        style: form
      - description: Include templates subscribed to by the virtualization realm
        explode: true
        in: query
        name: include_subscriptions
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalCons3rtTemplateData'
                type: array
          description: OK
        "400":
          description: Invalid virtualization realm ID or query parameter supplied
        "404":
          description: Virtualization realm not found
      summary: List Templates
      tags:
      - Virtualization Realms
  /api/virtualizationrealms/{id}/templates/registrations:
    get:
      description: Returns a collection of the Template Registrations in the specified
        Virtualization Realm.
      operationId: listTemplateRegistrations
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalTemplateRegistration'
                type: array
          description: OK
        "400":
          description: Invalid virtualization realm ID supplied
        "404":
          description: Virtualization realm not found
      summary: List Template Registrations
      tags:
      - Virtualization Realms
    post:
      description: Adds an existing back-end Template to the specified Virtualization
        Realm.
      operationId: registerTemplate
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputRegisterTemplateObject'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputRegisterTemplateObject'
        description: The template registration data
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullTemplateRegistration'
          description: OK
        "400":
          description: Invalid virtualization realm ID or data supplied
        "404":
          description: Virtualization realm not found
      summary: Register Template
      tags:
      - Virtualization Realms
    put:
      description: Forces the back-end Template data to be re-read in the specified
        Virtualization Realm.
      operationId: invalidateTemplateCacheInVirtualizationRealm
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid virtualization realm ID supplied
        "404":
          description: Virtualization realm not found
      summary: Refresh Template Cache
      tags:
      - Virtualization Realms
  /api/virtualizationrealms/{id}/templates/registrations/pending:
    get:
      description: Returns a collection of the unregistered, back-end Templates in
        the specified Virtualization Realm.
      operationId: listUnregisteredTemplates
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Cons3rtTemplateTagData'
                type: array
          description: OK
        "400":
          description: Invalid virtualization realm ID supplied
        "404":
          description: Virtualization realm not found
      summary: List Unregistered Templates
      tags:
      - Virtualization Realms
  /api/virtualizationrealms/{id}/templates/registrations/{registration_id}:
    delete:
      description: |-
        Removes an existing Template Registration from the specified Virtualization Realm.<br>
        <br>
        Note: Unregistering a Template will remove all subscriptions to the Template from other Virtualization Realms.
      operationId: unregisterTemplate
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ID of template registration
        explode: false
        in: path
        name: registration_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputUnregisterTemplateObject'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputUnregisterTemplateObject'
        description: The deletion settings
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid virtualization realm ID or template registration ID
            supplied
        "404":
          description: Virtualization realm not found
      summary: Delete Template Registration
      tags:
      - Virtualization Realms
    get:
      description: Returns a single Template Registration in the specified Virtualization
        Realm.
      operationId: retrieveTemplateRegistration
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ID of template registration
        explode: false
        in: path
        name: registration_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullTemplateRegistration'
          description: OK
        "400":
          description: Invalid virtualization realm ID or template registration ID
            supplied
        "404":
          description: Virtualization realm not found
      summary: Retrieve Template Registration
      tags:
      - Virtualization Realms
    put:
      description: |-
        Updates the Template Registration for a single Virtualization Realm by the given ID.<br>
        <br>
        Note: The state of a Template Registration can only be set to OFFLINE or PUBLISHED.<br>
        <br>
        Note: All fields in Template data are honored on update, therefore any configuration that is desired in the updated Registration should be provided.
      operationId: updateTemplateRegistration
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ID of template registration
        explode: false
        in: path
        name: registration_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The desired template registration state
        explode: true
        in: query
        name: offline
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputCons3rtTemplateData'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputCons3rtTemplateData'
        description: The modified template registration data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid virtualization realm ID, template registration ID,
            or data supplied
        "404":
          description: Virtualization realm not found
      summary: Update Template Registration
      tags:
      - Virtualization Realms
  /api/virtualizationrealms/{id}/templates/registrations/{registration_id}/share:
    delete:
      description: Revokes access to a Template Registration in the specified Virtualization
        Realm by the provided external Virtualization Realm.
      operationId: unshareTemplateRegistration
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ID of template registration
        explode: false
        in: path
        name: registration_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ID of external virtualization realm to revoke template registration
          access for
        explode: true
        in: query
        name: target_realm_id
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid virtualization realm ID, template registration ID,
            or external virtualization realm ID supplied
        "404":
          description: Virtualization realm not found
      summary: Unshare Template
      tags:
      - Virtualization Realms
    post:
      description: Shares an existing Template Registration in the specified Virtualization
        Realm to the provided external Virtualization Realm(s).
      operationId: shareTemplateRegistration
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ID of template registration
        explode: false
        in: path
        name: registration_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ID(s) of external virtualization realms to share template registration
          with
        explode: true
        in: query
        name: target_realm_ids
        required: true
        schema:
          items:
            format: int32
            type: integer
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid virtualization realm ID, template registration ID,
            or data supplied
        "404":
          description: Virtualization realm not found
      summary: Share Template
      tags:
      - Virtualization Realms
  /api/virtualizationrealms/{id}/templates/subscriptions:
    get:
      description: Returns a collection of the Template Subscriptions in the specified
        Virtualization Realm.
      operationId: listTemplateSubscriptions
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MinimalTemplateSubscription'
                type: array
          description: OK
        "400":
          description: Invalid virtualization realm ID supplied
        "404":
          description: Virtualization realm not found
      summary: List Template Subscriptions
      tags:
      - Virtualization Realms
    post:
      description: Creates a Template Subscription in the specified Virtualization
        Realm.
      operationId: createTemplateSubsciption
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ID of template registration
        explode: true
        in: query
        name: registration_id
        required: true
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullTemplateSubscription'
          description: OK
        "400":
          description: Invalid virtualization realm ID or template registration ID
            supplied
        "404":
          description: Virtualization realm not found
      summary: Create Template Subscription
      tags:
      - Virtualization Realms
  /api/virtualizationrealms/{id}/templates/subscriptions/pending:
    get:
      description: Returns a collection of the pending Template Subscriptions in the
        specified Virtualization Realm.
      operationId: listPendingTemplateSubscriptions
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FullTemplateRegistrationForSubscription'
                type: array
          description: OK
        "400":
          description: Invalid virtualization realm ID supplied
        "404":
          description: Virtualization realm not found
      summary: List Pending Subscriptions
      tags:
      - Virtualization Realms
  /api/virtualizationrealms/{id}/templates/subscriptions/{subscription_id}:
    delete:
      description: Removes an existing Template Subscription from the specified Virtualization
        Realm.
      operationId: deleteTemplateSubscription
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ID of template subscription
        explode: false
        in: path
        name: subscription_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid virtualization realm ID or template subscription ID
            supplied
        "404":
          description: Virtualization realm not found
      summary: Delete Template Subscription
      tags:
      - Virtualization Realms
    get:
      description: Returns a single Template Subscription in the specified Virtualization
        Realm.
      operationId: getTemplateSubscription
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ID of template subscription
        explode: false
        in: path
        name: subscription_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullTemplateSubscription'
          description: OK
        "400":
          description: Invalid virtualization realm ID or template subscription ID
            supplied
        "404":
          description: Virtualization realm not found
      summary: Retrieve Template Subscription
      tags:
      - Virtualization Realms
    put:
      description: |-
        Updates the Template Subscription for a single Virtualization Realm by the given ID.<br>
        <br>
        Note: The state of a Template Subscription can only be set to OFFLINE or PUBLISHED.<br>
        <br>
        Note: The limits of a Template subscription (CPU, RAM, etc.) cannot exceed the value included in the Registration.
      operationId: updateTemplateSubscription
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: ID of template subscription
        explode: false
        in: path
        name: subscription_id
        required: true
        schema:
          format: int32
          type: integer
        style: simple
      - description: The desired template subscription state
        explode: true
        in: query
        name: offline
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputTemplateSubscription'
          application/xml:
            schema:
              $ref: '#/components/schemas/InputTemplateSubscription'
        description: The modified template subscription data
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: boolean
          description: OK
        "400":
          description: Invalid virtualization realm ID, template subscription ID,
            or data supplied
        "404":
          description: Virtualization realm not found
      summary: Update Template Subscription
      tags:
      - Virtualization Realms
  /api/virtualizationrealms/{id}/resources:
    get:
      description: Returns the back-end resources for a single Virtualization Realm
        by the given ID.
      operationId: getVirtualizationRealmResources
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AbstractCloudResources'
          description: OK
        "400":
          description: Invalid ID supplied
        "404":
          description: Virtualization Realm not found
      summary: Retrieve Virtualization Realm Resources
      tags:
      - Virtualization Realms
  /api/virtualizationrealms/{id}/updatereachability:
    put:
      operationId: updateVirtualizationRealmReachability
      parameters:
      - description: ID of virtualization realm
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        default:
          content:
            application/json:
              schema:
                type: boolean
            application/xml:
              schema:
                type: boolean
          description: default response
      tags:
      - Virtualization Realms
  /public/buildNumber:
    get:
      operationId: getBuildNumber
      responses:
        default:
          content:
            text/html:
              schema:
                type: string
          description: default response
  /public/version:
    get:
      operationId: getVersion
      responses:
        default:
          content:
            text/html:
              schema:
                type: string
          description: default response
  /public:
    get:
      operationId: getRootHtml
      responses:
        default:
          content:
            text/html:
              schema:
                type: string
          description: default response
  /public/buildTimestamp:
    get:
      operationId: getBuildTimestamp
      responses:
        default:
          content:
            text/html:
              schema:
                type: string
          description: default response
  /public/cons3rtVersion:
    get:
      operationId: getCons3rtVersion
      responses:
        default:
          content:
            text/html:
              schema:
                type: string
          description: default response
  /public/shortVersion:
    get:
      operationId: getShortVersion
      responses:
        default:
          content:
            text/html:
              schema:
                type: string
          description: default response
  /public/revision:
    get:
      operationId: getRevision
      responses:
        default:
          content:
            text/html:
              schema:
                type: string
          description: default response
components:
  schemas:
    BasicAppliance:
      allOf:
      - $ref: '#/components/schemas/BasicAsset'
      type: object
      xml:
        name: appliance
    BasicAsset:
      discriminator:
        propertyName: subtype
      example:
        offline: true
        creator:
          id: 0
          email: email
          username: username
        visibility: OWNER
        subtype: subtype
        name: name
        description: description
        id: id
        state: IN_DEVELOPMENT
        owningProject:
          name: name
          id: 6
          itarRestricted: true
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        offline:
          type: boolean
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        creator:
          $ref: '#/components/schemas/MinimalUser'
        owningProject:
          $ref: '#/components/schemas/MinimalProject'
        subtype:
          type: string
      required:
      - subtype
      type: object
      xml:
        name: asset
    BasicDeployment:
      allOf:
      - $ref: '#/components/schemas/BasicAsset'
      type: object
      xml:
        name: deployment
    BasicDevice:
      allOf:
      - $ref: '#/components/schemas/BasicAsset'
      type: object
      xml:
        name: device
    BasicPhysicalHost:
      allOf:
      - $ref: '#/components/schemas/BasicAsset'
      type: object
      xml:
        name: physicalHost
    BasicPhysicalMachine:
      allOf:
      - $ref: '#/components/schemas/BasicAsset'
      - $ref: '#/components/schemas/BasicPhysicalMachine_allOf'
      type: object
      xml:
        name: physicalMachine
    BasicScenario:
      allOf:
      - $ref: '#/components/schemas/BasicAsset'
      type: object
      xml:
        name: scenario
    BasicSoftwareAsset:
      allOf:
      - $ref: '#/components/schemas/BasicAsset'
      - $ref: '#/components/schemas/BasicSoftwareAsset_allOf'
      type: object
      xml:
        name: software
    BasicTestAsset:
      allOf:
      - $ref: '#/components/schemas/BasicAsset'
      - $ref: '#/components/schemas/BasicTestAsset_allOf'
      type: object
      xml:
        name: testAsset
    BasicVirtualHost:
      allOf:
      - $ref: '#/components/schemas/BasicAsset'
      type: object
      xml:
        name: virtualHost
    MinimalProject:
      example:
        name: name
        id: 6
        itarRestricted: true
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        name:
          type: string
        itarRestricted:
          type: boolean
      type: object
      xml:
        name: project
    MinimalUser:
      example:
        id: 0
        email: email
        username: username
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        username:
          type: string
        email:
          type: string
      type: object
      xml:
        name: user
    AbstractProviderClientConfiguration:
      discriminator:
        propertyName: subtype
      properties:
        debug:
          type: boolean
        accountId:
          maxLength: 255
          minLength: 1
          type: string
        password:
          maxLength: 255
          minLength: 1
          type: string
        username:
          maxLength: 255
          minLength: 1
          type: string
        subtype:
          type: string
      required:
      - accountId
      - password
      - subtype
      - username
      type: object
      xml:
        name: providerClientConfiguration
    Asset:
      properties:
        id:
          type: string
          xml:
            attribute: true
        trustedProjects:
          items:
            $ref: '#/components/schemas/Project'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        creator:
          $ref: '#/components/schemas/User'
        dependentAssetCount:
          format: int32
          type: integer
        description:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        name:
          type: string
        offline:
          type: boolean
        owningProject:
          $ref: '#/components/schemas/Project'
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        impactLevel:
          enum:
          - NONE
          - FEDRAMP_LOW
          - FEDRAMP_MODERATE_DOD_LEVEL_2
          - FEDRAMP_HIGH_DOD_LEVEL_4
          - DOD_LEVEL_5
          - DOD_LEVEL_6
          type: string
        categories:
          items:
            $ref: '#/components/schemas/Category'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      type: object
      xml:
        name: asset
    AwsClientConfiguration:
      allOf:
      - $ref: '#/components/schemas/AbstractProviderClientConfiguration'
      - $ref: '#/components/schemas/AwsClientConfiguration_allOf'
      required:
      - accountId
      - password
      - regionName
      - username
      type: object
      xml:
        name: awsClientConfiguration
    AwsCloud:
      allOf:
      - $ref: '#/components/schemas/Cloud'
      - $ref: '#/components/schemas/AwsCloud_allOf'
      required:
      - accessKey
      - description
      - externalIpSource
      - maximumImpactLevel
      - name
      - ownerId
      - owningTeam
      - regionName
      - secretAccessKey
      type: object
      xml:
        name: awsCloud
    AwsVirtualizationRealm:
      allOf:
      - $ref: '#/components/schemas/VirtualizationRealm'
      - $ref: '#/components/schemas/AwsVirtualizationRealm_allOf'
      required:
      - accountId
      - cidr
      - description
      - name
      - password
      - username
      type: object
      xml:
        name: virtualizationRealm
    AzureCloud:
      allOf:
      - $ref: '#/components/schemas/Cloud'
      - $ref: '#/components/schemas/AzureCloud_allOf'
      required:
      - clientId
      - description
      - environment
      - externalIpSource
      - maximumImpactLevel
      - name
      - owningTeam
      - regionName
      - secretAccessKey
      - subscriptionId
      - tenant
      type: object
      xml:
        name: azureCloud
    AzureVirtualizationRealm:
      allOf:
      - $ref: '#/components/schemas/VirtualizationRealm'
      - $ref: '#/components/schemas/AzureVirtualizationRealm_allOf'
      required:
      - accountId
      - cidr
      - description
      - environment
      - name
      - password
      - region
      - resourceGroupName
      - tenantId
      - username
      - virtualNetworkName
      type: object
      xml:
        name: virtualizationRealm
    Category:
      properties:
        disruptive:
          type: boolean
        hidden:
          type: boolean
          xml:
            attribute: true
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        name:
          type: string
        parent:
          $ref: '#/components/schemas/Category'
        subcategories:
          items:
            $ref: '#/components/schemas/Category'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      required:
      - id
      - name
      type: object
      xml:
        name: category
    Certificate:
      properties:
        pem:
          type: string
      type: object
      xml:
        name: certificate
    Cloud:
      discriminator:
        propertyName: subtype
      properties:
        cloudType:
          enum:
          - AwsCloud
          - AzureCloud
          - OpenStackCloud
          - VCloudRestCloud
          type: string
        description:
          type: string
        name:
          type: string
        externalIpAddresses:
          items:
            type: string
            xml:
              name: externalIpAddress
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        externalIpSource:
          enum:
          - ON_DEMAND
          - POOL
          type: string
        features:
          $ref: '#/components/schemas/CloudFeatures'
        gpuTypes:
          items:
            enum:
            - K80
            - M10
            - M60
            - P40
            - T4
            - V100D
            type: string
            xml:
              name: gpuType
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        linuxRepositoryUrl:
          type: string
        maximumImpactLevel:
          enum:
          - NONE
          - FEDRAMP_LOW
          - FEDRAMP_MODERATE_DOD_LEVEL_2
          - FEDRAMP_HIGH_DOD_LEVEL_4
          - DOD_LEVEL_5
          - DOD_LEVEL_6
          type: string
        networks:
          items:
            $ref: '#/components/schemas/Network'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        owningTeam:
          $ref: '#/components/schemas/Team'
        providerFeatureConfigurations:
          additionalProperties:
            $ref: '#/components/schemas/AbstractProviderClientConfiguration'
          type: object
        state:
          enum:
          - ACTIVE
          - ENTERING_MAINTENANCE
          - MAINTENANCE
          type: string
        templateVirtualizationRealm:
          $ref: '#/components/schemas/VirtualizationRealm'
        connectedVirtualizationRealms:
          items:
            $ref: '#/components/schemas/VirtualizationRealm'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        virtualizationRealms:
          items:
            $ref: '#/components/schemas/VirtualizationRealm'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        subtype:
          type: string
      required:
      - description
      - externalIpSource
      - maximumImpactLevel
      - name
      - owningTeam
      - subtype
      type: object
      xml:
        name: cloud
    CloudFeatures:
      example:
        gpuAvailable: true
        storageServiceEnabled: true
        allocationCapable: true
        bypassScanningEnabled: true
        deallocationCapable: true
      properties:
        allocationCapable:
          type: boolean
        bypassScanningEnabled:
          type: boolean
        deallocationCapable:
          type: boolean
        gpuAvailable:
          type: boolean
        storageServiceEnabled:
          type: boolean
      type: object
      xml:
        name: cloudFeatures
    Cons3rtTemplateData:
      properties:
        displayName:
          type: string
        operatingSystem:
          enum:
          - AMAZON_LINUX_2_LATEST_X64
          - AMAZON_LINUX_LATEST_X64
          - CENTOS_6_X64
          - CENTOS_6_X86
          - CENTOS_7_X64
          - CENTOS_8_X64
          - CORE_OS_1221_X64
          - F5_BIGIP_X64
          - FEDORA_23_X64
          - FORTISIEM
          - GENERIC_LINUX_X64
          - GENERIC_WINDOWS_X64
          - KALI_ROLLING_X64
          - ORACLE_LINUX_6_X64
          - ORACLE_LINUX_7_X64
          - ORACLE_LINUX_8_X64
          - OS_X_10
          - OS_X_11
          - PALO_ALTO_NETWORKS_PAN_OS_X64
          - RASPBIAN
          - RHEL_5_X64
          - RHEL_5_X86
          - RHEL_6_X64
          - RHEL_6_X86
          - RHEL_7_ATOMIC_HOST
          - RHEL_7_PPCLE
          - RHEL_7_X64
          - RHEL_8_X64
          - SOLARIS_11_X64
          - UBUNTU_12_X64
          - UBUNTU_14_X64
          - UBUNTU_16_X64
          - UBUNTU_18_X64
          - UBUNTU_20_X64
          - UBUNTU_CORE
          - VYOS_1_1_X64
          - VYOS_1_2_X64
          - VYOS_1_3_X64
          - VYOS_ROLLING_X64
          - WINDOWS_10_X64
          - WINDOWS_7_X64
          - WINDOWS_7_X86
          - WINDOWS_8_X64
          - WINDOWS_SERVER_2008_R2_X64
          - WINDOWS_SERVER_2008_X64
          - WINDOWS_SERVER_2012_R2_X64
          - WINDOWS_SERVER_2012_X64
          - WINDOWS_SERVER_2016_X64
          - WINDOWS_SERVER_2019_X64
          - WINDOWS_SERVER_2019_CORE_X64
          - WINDOWS_XP_X86
          type: string
        virtRealmTemplateName:
          type: string
        cons3rtAgentInstalled:
          type: boolean
        containerCapable:
          type: boolean
        disks:
          items:
            $ref: '#/components/schemas/Disk'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        failCount:
          format: int32
          type: integer
        hasGpu:
          type: boolean
        id:
          format: int32
          type: integer
        license:
          type: string
        maxNumCpus:
          format: int32
          type: integer
        maxRamInMegabytes:
          format: int64
          type: integer
        note:
          type: string
        packageManagementType:
          enum:
          - APP_STORE
          - APT_GET
          - DNF
          - DOCKER
          - NONE
          - PKGADD
          - SNAP
          - YUM
          type: string
        powerOnDelayOverride:
          format: int32
          type: integer
        powerShellVersion:
          enum:
          - NONE
          - POWERSHELL_1_0
          - POWERSHELL_2_0
          - POWERSHELL_3_0
          - POWERSHELL_4_0
          - POWERSHELL_5_0
          - POWERSHELL_6_0
          type: string
        templateRegistration:
          $ref: '#/components/schemas/TemplateRegistration'
        remoteAccessTemplates:
          items:
            $ref: '#/components/schemas/RemoteAccessTemplate'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        serviceManagementType:
          enum:
          - SYSTEMD
          - INITD
          - LAUNCHD
          - UNKNOWN
          - UPDATE_RC
          - UPSTART
          - WINDOWS
          type: string
        userCount:
          format: int32
          type: integer
          xml:
            name: useCount
        virtRealmId:
          format: int32
          type: integer
      required:
      - operatingSystem
      - virtRealmTemplateName
      type: object
      xml:
        name: cons3rtTemplateData
    Credentials:
      example:
        password: password
        username: username
      properties:
        password:
          type: string
        username:
          type: string
      required:
      - username
      type: object
      xml:
        name: submissionService
    Disk:
      example:
        createOrder: 9
        isBootDisk: true
        capacityInMegabytes: 7
        isAdditionalDisk: true
        id: 3
        bootDisk: true
        additionalDisk: true
      properties:
        additionalDisk:
          type: boolean
        bootDisk:
          type: boolean
        capacityInMegabytes:
          format: int32
          type: integer
        createOrder:
          format: int32
          type: integer
        isAdditionalDisk:
          type: boolean
        isBootDisk:
          type: boolean
        id:
          format: int32
          type: integer
      required:
      - capacityInMegabytes
      type: object
      xml:
        name: disk
    DnatRule:
      example:
        dnatProtocol: ANY
        dnatEnabled: true
        dnatTargetIp: dnatTargetIp
        id: 6
        dnatTargetPort: dnatTargetPort
        dnatPort: dnatPort
      properties:
        dnatEnabled:
          type: boolean
        dnatPort:
          type: string
        dnatProtocol:
          enum:
          - ANY
          - ICMP
          - TCP
          - UDP
          type: string
        dnatTargetIp:
          type: string
        dnatTargetPort:
          type: string
        id:
          format: int32
          type: integer
      required:
      - dnatEnabled
      - dnatPort
      - dnatProtocol
      - dnatTargetIp
      - dnatTargetPort
      type: object
      xml:
        name: dnatRule
    DockerRegistrySubmissionEndpoint:
      allOf:
      - $ref: '#/components/schemas/SubmissionEndpoint'
      - $ref: '#/components/schemas/DockerRegistrySubmissionEndpoint_allOf'
      required:
      - host
      - imageName
      - imageTag
      type: object
      xml:
        name: dockerRegistry
    FirewallRule:
      example:
        ruleEnabled: true
        ruleAction: ALLOW
        protocol: ANY
        ruleSource: ruleSource
        ruleDestPort: ruleDestPort
        ruleOrder: 5
        ruleSourcePort: ruleSourcePort
        id: 1
        ruleDestination: ruleDestination
      properties:
        id:
          format: int32
          type: integer
        ruleOrder:
          format: int32
          type: integer
        protocol:
          enum:
          - ANY
          - ICMP
          - TCP
          - UDP
          type: string
        ruleAction:
          enum:
          - ALLOW
          - DENY
          type: string
        ruleDestination:
          type: string
        ruleDestPort:
          type: string
        ruleEnabled:
          type: boolean
        ruleSource:
          type: string
        ruleSourcePort:
          type: string
      required:
      - protocol
      - ruleAction
      - ruleDestination
      - ruleEnabled
      - ruleOrder
      - ruleSource
      type: object
      xml:
        name: firewallRule
    LogEntry:
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        message:
          type: string
        projectName:
          type: string
        severity:
          enum:
          - DEBUG
          - INFO
          - WARNING
          - ERROR
          type: string
        source:
          type: string
        time:
          format: int32
          type: integer
        username:
          type: string
      type: object
      xml:
        name: logEntry
    Metadata:
      properties:
        assetDirectory:
          type: string
        version:
          format: int32
          type: integer
        cloud:
          $ref: '#/components/schemas/Cloud'
        creationDate:
          format: int32
          type: integer
        documentation:
          type: string
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        instanceLimit:
          format: int32
          type: integer
        itarRestricted:
          type: boolean
        license:
          type: string
        modifier:
          $ref: '#/components/schemas/User'
        modifierDate:
          format: int32
          type: integer
        properties:
          items:
            $ref: '#/components/schemas/Property'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        uri:
          type: string
        validated:
          type: boolean
        sizeInMegabytes:
          format: int32
          type: integer
      type: object
      xml:
        name: metadata
    Network:
      example:
        isolated: true
        name: name
        description: description
        cidr: cidr
        id: 0
        networkFunction: CONS3RT
        boundaryIpAddress: boundaryIpAddress
        firewallRules:
        - ruleEnabled: true
          ruleAction: ALLOW
          protocol: ANY
          ruleSource: ruleSource
          ruleDestPort: ruleDestPort
          ruleOrder: 5
          ruleSourcePort: ruleSourcePort
          id: 1
          ruleDestination: ruleDestination
        - ruleEnabled: true
          ruleAction: ALLOW
          protocol: ANY
          ruleSource: ruleSource
          ruleDestPort: ruleDestPort
          ruleOrder: 5
          ruleSourcePort: ruleSourcePort
          id: 1
          ruleDestination: ruleDestination
        dnatRules:
        - dnatProtocol: ANY
          dnatEnabled: true
          dnatTargetIp: dnatTargetIp
          id: 6
          dnatTargetPort: dnatTargetPort
          dnatPort: dnatPort
        - dnatProtocol: ANY
          dnatEnabled: true
          dnatTargetIp: dnatTargetIp
          id: 6
          dnatTargetPort: dnatTargetPort
          dnatPort: dnatPort
      properties:
        id:
          format: int32
          type: integer
        isolated:
          type: boolean
        boundaryIpAddress:
          type: string
        cidr:
          maxLength: 16
          minLength: 10
          type: string
        description:
          type: string
        dnatRules:
          items:
            $ref: '#/components/schemas/DnatRule'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        firewallRules:
          items:
            $ref: '#/components/schemas/FirewallRule'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        networkFunction:
          enum:
          - CONS3RT
          - ADDITIONAL
          - PRIMARY
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - cidr
      - dnatRules
      - firewallRules
      - name
      type: object
      xml:
        name: network
    OpenStackCloud:
      allOf:
      - $ref: '#/components/schemas/Cloud'
      - $ref: '#/components/schemas/OpenStackCloud_allOf'
      required:
      - description
      - externalIpSource
      - keystoneHostname
      - keystonePassword
      - keystonePort
      - keystoneProtocol
      - keystoneUsername
      - keystoneVersion
      - maximumImpactLevel
      - name
      - natImageId
      - natInstanceType
      - owningTeam
      - tenant
      - tenantId
      type: object
      xml:
        name: openStackCloud
    OpenStackVirtualizationRealm:
      allOf:
      - $ref: '#/components/schemas/VirtualizationRealm'
      required:
      - accountId
      - cidr
      - description
      - name
      - password
      - username
      type: object
      xml:
        name: virtualizationRealm
    PathBasedSubmissionEndpoint:
      allOf:
      - $ref: '#/components/schemas/SubmissionEndpoint'
      - $ref: '#/components/schemas/PathBasedSubmissionEndpoint_allOf'
      discriminator:
        propertyName: subtype
      required:
      - host
      - subtype
      type: object
      xml:
        name: submissionEndpoint
    PocInfo:
      example:
        firstname: firstname
        phone: phone
        organization: organization
        email: email
        lastname: lastname
      properties:
        email:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        organization:
          type: string
        phone:
          type: string
      type: object
      xml:
        name: contactInfo
    PowerSchedule:
      example:
        mode: NONE
        weekdayEndTimeHour: 21
        weekdayStartTimeMinutes: 24
        weekdayStartTimeHour: 4
        weekendEndTimeMinutes: 7
        weekdayEndTimeMinutes: 21
        weekendStartTimeMinutes: 8
        weekendEndTimeHour: 16
        weekendStartTimeHour: 2
      properties:
        mode:
          enum:
          - NONE
          - ECO_MODE
          - LOW_COST
          - WEEKEND_SHUTDOWN
          - CUSTOM
          type: string
        weekdayEndTimeHour:
          format: int32
          maximum: 23
          minimum: 0
          type: integer
        weekdayEndTimeMinutes:
          format: int32
          maximum: 59
          minimum: 0
          type: integer
        weekdayStartTimeHour:
          format: int32
          maximum: 23
          minimum: 0
          type: integer
        weekdayStartTimeMinutes:
          format: int32
          maximum: 59
          minimum: 0
          type: integer
        weekendEndTimeHour:
          format: int32
          maximum: 23
          minimum: 0
          type: integer
        weekendEndTimeMinutes:
          format: int32
          maximum: 59
          minimum: 0
          type: integer
        weekendStartTimeHour:
          format: int32
          maximum: 23
          minimum: 0
          type: integer
        weekendStartTimeMinutes:
          format: int32
          maximum: 59
          minimum: 0
          type: integer
      required:
      - mode
      type: object
      xml:
        name: powerSchedule
    Project:
      properties:
        activeMemberCount:
          format: int32
          type: integer
        createdAt:
          format: int32
          type: integer
        defaultPowerSchedule:
          $ref: '#/components/schemas/PowerSchedule'
        defaultRole:
          enum:
          - ADMINISTRATOR
          - ASSET_RESTORER
          - STATUS_READER
          - UI_MACHINE
          - TEST_TOOL
          - MEMBER
          - CONSUMER
          - STANDARD
          - SOFTWARE_DEVELOPER
          - TEST_DEVELOPER
          - ASSET_SHARER
          - ASSET_PROMOTER
          - POWER_SCHEDULE_UPDATER
          - PROJECT_OWNER
          - PROJECT_MANAGER
          - PROJECT_MODERATOR
          - REMOTE_ACCESS
          - MAESTRO_MACHINE
          - FAP_MACHINE
          - SCHEDULER_MACHINE
          - CONS3RT_MACHINE
          - SOURCEBUILDER_MACHINE
          - SYSTEM_ASSET_IMPORTER
          - ASSET_CERTIFIER
          - ASSET_UPLOADER
          type: string
        defaultVirtualizationRealm:
          $ref: '#/components/schemas/VirtualizationRealm'
        description:
          type: string
        features:
          $ref: '#/components/schemas/ProjectFeatures'
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        itarComment:
          type: string
        itarRestricted:
          type: boolean
        limits:
          $ref: '#/components/schemas/ProjectLimits'
        totalMemberCount:
          format: int32
          type: integer
        name:
          type: string
        owningTeam:
          $ref: '#/components/schemas/Team'
        isPrivate:
          type: boolean
        trustedProjects:
          items:
            $ref: '#/components/schemas/Project'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        resourceUsage:
          $ref: '#/components/schemas/ResourceUsage'
        submissionServices:
          items:
            $ref: '#/components/schemas/SubmissionService'
          type: array
          uniqueItems: true
        updatedAt:
          format: int32
          type: integer
        members:
          items:
            $ref: '#/components/schemas/User'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        virtualizationRealms:
          items:
            $ref: '#/components/schemas/VirtualizationRealm'
          type: array
          uniqueItems: true
          xml:
            name: virtulizationRealms
            wrapped: true
      required:
      - id
      - limits
      type: object
      xml:
        name: project
    ProjectFeatures:
      example:
        remoteAccessFileDownloadEnabled: true
        assetBypassScanningEnabled: true
        remoteAccessFileUploadEnabled: true
        remoteAccessPasteEnabled: true
        remoteAccessCopyEnabled: true
      properties:
        assetBypassScanningEnabled:
          type: boolean
        remoteAccessCopyEnabled:
          type: boolean
        remoteAccessFileDownloadEnabled:
          type: boolean
        remoteAccessFileUploadEnabled:
          type: boolean
        remoteAccessPasteEnabled:
          type: boolean
      type: object
    ProjectLimits:
      example:
        maxNumCpus: 0
        gpuTypeMaximums:
          key: 5
        maxStorageInMegabytes: 0
        maxNumGpus: 0
        maxRamInMegabytes: 0
        validUntil: 2
        maxVirtualMachines: 0
      properties:
        gpuTypeMaximums:
          additionalProperties:
            format: int32
            type: integer
          type: object
        maxNumCpus:
          format: int32
          minimum: 0
          type: integer
        maxNumGpus:
          format: int32
          minimum: 0
          type: integer
        maxRamInMegabytes:
          format: int32
          minimum: 0
          type: integer
        maxStorageInMegabytes:
          format: int32
          minimum: 0
          type: integer
        maxVirtualMachines:
          format: int32
          minimum: 0
          type: integer
        validUntil:
          format: int32
          type: integer
      required:
      - maxNumCpus
      - maxNumGpus
      - maxRamInMegabytes
      - maxStorageInMegabytes
      - maxVirtualMachines
      type: object
      xml:
        name: projectLimits
    Property:
      example:
        id: 7
        value: value
        key: key
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
      xml:
        name: property
    RemoteAccessConfig:
      example:
        remoteAccessIpAddress: remoteAccessIpAddress
        templateName: templateName
        remoteAccessPort: 7
        instanceType: LARGE
        id: 4
      properties:
        id:
          format: int32
          type: integer
        remoteAccessIpAddress:
          type: string
        remoteAccessPort:
          format: int32
          type: integer
        instanceType:
          enum:
          - LARGE
          - MEDIUM
          - SMALL
          type: string
        templateName:
          type: string
      required:
      - instanceType
      - remoteAccessIpAddress
      - remoteAccessPort
      type: object
      xml:
        name: remoteAccessConfig
    RemoteAccessTemplate:
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        name:
          type: string
        type:
          enum:
          - NONE
          - SSH
          - VNC
          - RDP
          type: string
        port:
          format: int32
          type: integer
        password:
          type: string
      required:
      - name
      - port
      - type
      type: object
      xml:
        name: remoteAccessTemplate
    ResourceUsage:
      example:
        ramInMegabytes: 1
        numCpus: 7
        numGpus: 1
        virtualMachines: 6
        storageInMegabytes: 1
      properties:
        numCpus:
          format: int32
          type: integer
        numGpus:
          format: int32
          type: integer
        ramInMegabytes:
          format: int32
          type: integer
        storageInMegabytes:
          format: int32
          type: integer
        virtualMachines:
          format: int32
          type: integer
      type: object
      xml:
        name: resourceUsage
    S3SubmissionEndpoint:
      allOf:
      - $ref: '#/components/schemas/PathBasedSubmissionEndpoint'
      required:
      - host
      type: object
      xml:
        name: s3
    SFTPSubmissionEndpoint:
      allOf:
      - $ref: '#/components/schemas/PathBasedSubmissionEndpoint'
      required:
      - host
      type: object
      xml:
        name: sftp
    SubmissionEndpoint:
      discriminator:
        propertyName: subtype
      example:
        port: 4
        subtype: subtype
        host: host
        id: 1
        type: DockerRegistryEndpoint
      properties:
        host:
          type: string
        id:
          format: int32
          type: integer
        port:
          format: int32
          type: integer
        type:
          enum:
          - DockerRegistryEndpoint
          - HttpPostEndpoint
          - S3Endpoint
          - SFTPEndpoint
          type: string
        subtype:
          type: string
      required:
      - host
      - subtype
      type: object
      xml:
        name: submissionEndpoint
    SubmissionService:
      example:
        hostLoggingString: hostLoggingString
        credentials:
          password: password
          username: username
        name: name
        id: 7
        submissionEndpoint:
          port: 4
          subtype: subtype
          host: host
          id: 1
          type: DockerRegistryEndpoint
        enabled: true
      properties:
        hostLoggingString:
          type: string
        credentials:
          $ref: '#/components/schemas/Credentials'
        enabled:
          type: boolean
        id:
          format: int32
          type: integer
        name:
          type: string
        submissionEndpoint:
          $ref: '#/components/schemas/SubmissionEndpoint'
      required:
      - name
      - submissionEndpoint
      type: object
      xml:
        name: submissionService
    Team:
      properties:
        assetBundleInstallerEnabled:
          type: boolean
        assetBypassScanningEnabled:
          type: boolean
        availabilityZoneEnabled:
          type: boolean
        bypassScanningEnabled:
          type: boolean
        leadUser:
          $ref: '#/components/schemas/User'
        gpuTypeMaximums:
          additionalProperties:
            format: int32
            type: integer
          type: object
        icon:
          type: string
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        managedVirtualizationRealms:
          items:
            $ref: '#/components/schemas/VirtualizationRealm'
          type: array
          uniqueItems: true
          xml:
            name: virtualizationRealm
            wrapped: true
        teamManagers:
          items:
            $ref: '#/components/schemas/User'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        maxAssets:
          format: int32
          minimum: 0
          type: integer
        maxManagedVirtualizationRealms:
          format: int32
          minimum: 0
          type: integer
        maxNumCpus:
          format: int32
          minimum: 0
          type: integer
        maxNumGpus:
          format: int32
          minimum: 0
          type: integer
        maxProjects:
          format: int32
          minimum: 0
          type: integer
        maxRamInMegabytes:
          format: int32
          minimum: 0
          type: integer
        maxSharedRemoteAccessSessions:
          format: int32
          minimum: 0
          type: integer
        maxStorageInMegabytes:
          format: int32
          minimum: 0
          type: integer
        maxUsers:
          format: int32
          type: integer
        maxVirtualMachines:
          format: int32
          minimum: 0
          type: integer
        name:
          type: string
        orderNumber:
          type: string
        ownedClouds:
          items:
            $ref: '#/components/schemas/Cloud'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        ownedProjects:
          items:
            $ref: '#/components/schemas/Project'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        contactInfo:
          $ref: '#/components/schemas/PocInfo'
        powerScheduleEnabled:
          type: boolean
        private:
          type: boolean
        rdpClientProxyEnabled:
          type: boolean
        rdpClientSessionDuration:
          format: int32
          type: integer
        snapshotEnabled:
          type: boolean
        state:
          enum:
          - ACTIVE
          - INACTIVE
          - REQUESTED
          - RETIRED
          - UNFUNDED
          type: string
        validUntil:
          format: int32
          type: integer
      required:
      - contactInfo
      - leadUser
      - name
      - state
      - validUntil
      type: object
      xml:
        name: team
    TemplateRegistration:
      properties:
        id:
          format: int32
          type: integer
        offline:
          type: boolean
        registeringVirtualizationRealm:
          $ref: '#/components/schemas/VirtualizationRealm'
        subscriptions:
          items:
            $ref: '#/components/schemas/TemplateSubscription'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        templateData:
          $ref: '#/components/schemas/Cons3rtTemplateData'
        templateUuid:
          format: uuid
          type: string
        virtRealmsSharedTo:
          items:
            $ref: '#/components/schemas/VirtualizationRealm'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      type: object
      xml:
        name: templateRegistration
    TemplateSubscription:
      properties:
        id:
          format: int32
          type: integer
        maxNumCpus:
          format: int32
          type: integer
        maxRamInMegabytes:
          format: int32
          type: integer
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        subscribingVirtualizationRealm:
          $ref: '#/components/schemas/VirtualizationRealm'
        templateRegistration:
          $ref: '#/components/schemas/TemplateRegistration'
        templateUuid:
          format: uuid
          type: string
      type: object
      xml:
        name: templateSubscription
    User:
      properties:
        createdAt:
          format: int32
          type: integer
        updatedAt:
          format: int32
          type: integer
        administeredClouds:
          items:
            $ref: '#/components/schemas/Cloud'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        administeredVirtRealms:
          items:
            $ref: '#/components/schemas/VirtualizationRealm'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        certificates:
          items:
            $ref: '#/components/schemas/Certificate'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        comment:
          type: string
        defaultProject:
          $ref: '#/components/schemas/Project'
        email:
          type: string
        firstname:
          type: string
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        lastname:
          type: string
        logEntries:
          items:
            $ref: '#/components/schemas/LogEntry'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        organization:
          type: string
        projectCount:
          format: int32
          type: integer
        state:
          enum:
          - REQUESTED
          - ACTIVE
          - INACTIVE
          type: string
        termsOfServiceAccepted:
          type: boolean
        username:
          type: string
      type: object
      xml:
        name: user
    VCloudRestCloud:
      allOf:
      - $ref: '#/components/schemas/Cloud'
      - $ref: '#/components/schemas/VCloudRestCloud_allOf'
      required:
      - description
      - externalIpSource
      - hostname
      - maximumImpactLevel
      - name
      - owningTeam
      - password
      - port
      - protocol
      - remoteAccessInternalIp
      - remoteAccessPort
      - username
      type: object
      xml:
        name: vcloudRestCloud
    VCloudRestVirtualizationRealm:
      allOf:
      - $ref: '#/components/schemas/VirtualizationRealm'
      - $ref: '#/components/schemas/VCloudRestVirtualizationRealm_allOf'
      required:
      - accountId
      - cidr
      - description
      - name
      - password
      - username
      type: object
      xml:
        name: virtualizationRealm
    VirtualizationRealm:
      discriminator:
        propertyName: virtualizationRealmType
      properties:
        virtualizationRealmType:
          enum:
          - Amazon
          - Azure
          - Mock
          - OpenStack
          - VCloudRest
          type: string
        accessPoint:
          type: string
        accountId:
          type: string
        activeVirtualMachines:
          format: int32
          type: integer
        networks:
          items:
            $ref: '#/components/schemas/Network'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        adminUsers:
          items:
            $ref: '#/components/schemas/User'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        allocated:
          type: boolean
        cidr:
          maxLength: 16
          minLength: 10
          type: string
        connectedCloud:
          $ref: '#/components/schemas/Cloud'
        cloud:
          $ref: '#/components/schemas/Cloud'
        createdAt:
          format: int32
          type: integer
        dateLastReachable:
          format: int32
          type: integer
        defaultWindowsDomainName:
          type: string
        description:
          type: string
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        localStorageName:
          type: string
        maximumNumCpus:
          format: int32
          minimum: 0
          type: integer
        maximumNumGpus:
          format: int32
          minimum: 0
          type: integer
        maximumRamInMegabytes:
          format: int32
          minimum: 0
          type: integer
        maximumStorageInMegabytes:
          format: int32
          minimum: 0
          type: integer
        maximumVirtualMachines:
          format: int32
          minimum: 0
          type: integer
        name:
          type: string
        password:
          type: string
        powerOnDelayBase:
          format: int64
          type: integer
        powerOnInitialDelayBase:
          format: int32
          type: integer
        powerOnMaximumDelay:
          format: int32
          minimum: 0
          type: integer
        powerOnMinimumDelay:
          format: int32
          minimum: 0
          type: integer
        projects:
          items:
            $ref: '#/components/schemas/Project'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        reachable:
          type: boolean
        remoteAccessConfig:
          $ref: '#/components/schemas/RemoteAccessConfig'
        remoteAccessDeploymentId:
          format: int32
          type: integer
        remoteAccessDeploymentRunStatus:
          enum:
          - UNKNOWN
          - SCHEDULED
          - SUBMITTED
          - PROVISIONING_HOSTS
          - HOSTS_PROVISIONED
          - RESERVED
          - RELEASE_REQUESTED
          - RELEASING
          - TESTING
          - TESTED
          - REDEPLOYING_HOSTS
          - COMPLETED
          - CANCELED
          type: string
        remoteAccessStatus:
          enum:
          - ENABLING
          - ENABLED
          - DISABLING
          - DISABLED
          - ERROR
          type: string
        state:
          enum:
          - ACTIVE
          - ENTERING_MAINTENANCE
          - INACTIVE
          - MAINTENANCE
          - PENDING
          - REQUESTED
          - RETIRED
          type: string
        supportedFeatures:
          items:
            enum:
            - USER_PASSWORD_UPDATE
            - VIRT_MACHINE_NESTED_VIRTUALIZATION
            - VIRT_MACHINE_REPROVISIONING
            - VIRT_MACHINE_SNAPSHOT
            - VIRT_MACHINE_SUSPEND
            - VIRT_REALM_ADD_NETWORK
            - VIRT_REALM_ALLOCATION
            - VIRT_REALM_APPLY_SECURITY
            - VIRT_REALM_DEALLOCATION
            - VIRT_REALM_DELETE_NETWORK
            - VIRT_REALM_INSTANCE_TYPE_DRIVEN
            - VIRT_REALM_REDEPLOY_BOUNDARY_PROTECTION
            - VIRT_REALM_REFRESH_BOUNDARY_PROTECTION
            type: string
            xml:
              name: supportedFeatures
          type: array
          uniqueItems: true
        templateRegistrations:
          items:
            $ref: '#/components/schemas/TemplateRegistration'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        templates:
          items:
            $ref: '#/components/schemas/Cons3rtTemplateData'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        templateSubscriptions:
          items:
            $ref: '#/components/schemas/TemplateSubscription'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        updatedAt:
          format: int32
          type: integer
        username:
          type: string
        zoneCount:
          format: int32
          type: integer
      required:
      - accountId
      - cidr
      - description
      - name
      - password
      - username
      type: object
      xml:
        name: virtualizationRealm
    InputAssetForUpdate:
      example:
        metadata:
          license: license
          documentation: documentation
        name: name
        description: description
      properties:
        name:
          type: string
        description:
          type: string
        metadata:
          $ref: '#/components/schemas/MetadataDocsLicense'
      type: object
      xml:
        name: asset
    MetadataDocsLicense:
      example:
        license: license
        documentation: documentation
      properties:
        license:
          type: string
        documentation:
          type: string
      type: object
      xml:
        name: metadata
    InputPart:
      properties:
        headers:
          additionalProperties:
            items:
              type: string
            type: array
          properties:
            empty:
              type: boolean
          type: object
        bodyAsString:
          type: string
        mediaType:
          $ref: '#/components/schemas/InputPart_mediaType'
        contentTypeFromMessage:
          type: boolean
      type: object
    MultipartFormDataInput:
      properties:
        formData:
          additionalProperties:
            $ref: '#/components/schemas/InputPart'
          type: object
        formDataMap:
          additionalProperties:
            items:
              $ref: '#/components/schemas/InputPart'
            type: array
          type: object
        preamble:
          type: string
        parts:
          items:
            $ref: '#/components/schemas/InputPart'
          type: array
      type: object
    InputFileForm:
      properties:
        file:
          items:
            format: binary
            type: string
          type: array
        filename:
          type: string
      type: object
      xml:
        name: form
    Bucket:
      example:
        cloudResourceVisibility: OWNER
        identifier: identifier
        cloudId: 0
        name: name
        scanningDisabled: true
      properties:
        cloudResourceVisibility:
          enum:
          - OWNER
          - OWNING_PROJECT_READ
          - OWNING_PROJECT_WRITE
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        identifier:
          type: string
        name:
          type: string
        cloudId:
          format: int32
          type: integer
        scanningDisabled:
          type: boolean
      required:
      - cloudResourceVisibility
      - name
      type: object
      xml:
        name: bucket
    MinimalCloud:
      example:
        cloudType: AwsCloud
        name: name
        id: 0
        state: ACTIVE
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        name:
          type: string
        state:
          enum:
          - ACTIVE
          - ENTERING_MAINTENANCE
          - MAINTENANCE
          type: string
        cloudType:
          enum:
          - AwsCloud
          - AzureCloud
          - OpenStackCloud
          - VCloudRestCloud
          type: string
      required:
      - name
      type: object
      xml:
        name: cloud
    InputDockerRegistrySubmissionEndpointForAssetSubmission:
      allOf:
      - $ref: '#/components/schemas/InputSubmissionEndpointForAssetSubmission'
      - $ref: '#/components/schemas/DockerRegistrySubmissionEndpoint_allOf'
      required:
      - imageName
      - imageTag
      type: object
      xml:
        name: dockerRegistry
    InputSFTPSubmissionEndpointForAssetSubmission:
      allOf:
      - $ref: '#/components/schemas/InputSubmissionEndpointForAssetSubmission'
      - $ref: '#/components/schemas/InputSFTPSubmissionEndpointForAssetSubmission_allOf'
      type: object
      xml:
        name: sftp
    InputSubmissionEndpointForAssetSubmission:
      discriminator:
        propertyName: subtype
      example:
        port: 0
        subtype: subtype
      properties:
        port:
          format: int32
          type: integer
        subtype:
          type: string
      required:
      - subtype
      type: object
      xml:
        name: submissionEndpoint
    InputSubmissionServiceForAssetSubmission:
      example:
        credentials:
          password: password
          username: username
        submissionEndpoint:
          port: 0
          subtype: subtype
      properties:
        credentials:
          $ref: '#/components/schemas/Credentials'
        submissionEndpoint:
          $ref: '#/components/schemas/InputSubmissionEndpointForAssetSubmission'
      required:
      - submissionEndpoint
      type: object
      xml:
        name: submissionService
    MinimalCategory:
      example:
        disruptive: true
        name: name
        id: 0
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        name:
          type: string
        disruptive:
          type: boolean
      type: object
      xml:
        name: category
    FullCategory:
      example:
        parent:
          disruptive: true
          name: name
          id: 0
        hidden: true
        disruptive: true
        editable: true
        name: name
        id: 0
        subcategories:
        - disruptive: true
          name: name
          id: 0
        - disruptive: true
          name: name
          id: 0
      properties:
        disruptive:
          type: boolean
        editable:
          type: boolean
        hidden:
          type: boolean
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        name:
          type: string
        parent:
          $ref: '#/components/schemas/MinimalCategory'
        subcategories:
          items:
            $ref: '#/components/schemas/MinimalCategory'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      type: object
      xml:
        name: category
    InputCategory:
      example:
        parent:
          id: 6
        hidden: true
        disruptive: true
        name: name
        id: 0
      properties:
        disruptive:
          type: boolean
        hidden:
          type: boolean
          xml:
            attribute: true
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        name:
          type: string
        parent:
          $ref: '#/components/schemas/InputParentCategory'
      required:
      - name
      type: object
      xml:
        name: category
    InputParentCategory:
      example:
        id: 6
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
      required:
      - id
      type: object
      xml:
        name: category
    InputAwsCloud:
      allOf:
      - $ref: '#/components/schemas/InputCloud'
      - $ref: '#/components/schemas/AwsCloud_allOf'
      required:
      - accessKey
      - externalIpSource
      - maximumImpactLevel
      - name
      - ownerId
      - owningTeam
      - regionName
      - secretAccessKey
      type: object
      xml:
        name: awsCloud
    InputAzureCloud:
      allOf:
      - $ref: '#/components/schemas/InputCloud'
      - $ref: '#/components/schemas/AzureCloud_allOf'
      required:
      - clientId
      - environment
      - externalIpSource
      - maximumImpactLevel
      - name
      - owningTeam
      - regionName
      - secretAccessKey
      - subscriptionId
      - tenant
      type: object
      xml:
        name: azureCloud
    InputCloud:
      discriminator:
        propertyName: subtype
      example:
        externalIpSource: ON_DEMAND
        owningTeam:
          id: 5
        description: description
        cons3rtNetwork:
          isolated: true
          name: name
          description: description
          cidr: cidr
          id: 0
          networkFunction: CONS3RT
          boundaryIpAddress: boundaryIpAddress
          firewallRules:
          - ruleEnabled: true
            ruleAction: ALLOW
            protocol: ANY
            ruleSource: ruleSource
            ruleDestPort: ruleDestPort
            ruleOrder: 5
            ruleSourcePort: ruleSourcePort
            id: 1
            ruleDestination: ruleDestination
          - ruleEnabled: true
            ruleAction: ALLOW
            protocol: ANY
            ruleSource: ruleSource
            ruleDestPort: ruleDestPort
            ruleOrder: 5
            ruleSourcePort: ruleSourcePort
            id: 1
            ruleDestination: ruleDestination
          dnatRules:
          - dnatProtocol: ANY
            dnatEnabled: true
            dnatTargetIp: dnatTargetIp
            id: 6
            dnatTargetPort: dnatTargetPort
            dnatPort: dnatPort
          - dnatProtocol: ANY
            dnatEnabled: true
            dnatTargetIp: dnatTargetIp
            id: 6
            dnatTargetPort: dnatTargetPort
            dnatPort: dnatPort
        features:
          gpuAvailable: true
          storageServiceEnabled: true
          allocationCapable: true
          bypassScanningEnabled: true
          deallocationCapable: true
        externalIpAddresses:
        - externalIpAddresses
        - externalIpAddresses
        templateVirtualizationRealm:
          name: name
          virtualizationRealmType: Amazon
          id: 2
          state: ACTIVE
        subtype: subtype
        additionalNetworks:
        - isolated: true
          name: name
          description: description
          cidr: cidr
          id: 0
          networkFunction: CONS3RT
          boundaryIpAddress: boundaryIpAddress
          firewallRules:
          - ruleEnabled: true
            ruleAction: ALLOW
            protocol: ANY
            ruleSource: ruleSource
            ruleDestPort: ruleDestPort
            ruleOrder: 5
            ruleSourcePort: ruleSourcePort
            id: 1
            ruleDestination: ruleDestination
          - ruleEnabled: true
            ruleAction: ALLOW
            protocol: ANY
            ruleSource: ruleSource
            ruleDestPort: ruleDestPort
            ruleOrder: 5
            ruleSourcePort: ruleSourcePort
            id: 1
            ruleDestination: ruleDestination
          dnatRules:
          - dnatProtocol: ANY
            dnatEnabled: true
            dnatTargetIp: dnatTargetIp
            id: 6
            dnatTargetPort: dnatTargetPort
            dnatPort: dnatPort
          - dnatProtocol: ANY
            dnatEnabled: true
            dnatTargetIp: dnatTargetIp
            id: 6
            dnatTargetPort: dnatTargetPort
            dnatPort: dnatPort
        - isolated: true
          name: name
          description: description
          cidr: cidr
          id: 0
          networkFunction: CONS3RT
          boundaryIpAddress: boundaryIpAddress
          firewallRules:
          - ruleEnabled: true
            ruleAction: ALLOW
            protocol: ANY
            ruleSource: ruleSource
            ruleDestPort: ruleDestPort
            ruleOrder: 5
            ruleSourcePort: ruleSourcePort
            id: 1
            ruleDestination: ruleDestination
          - ruleEnabled: true
            ruleAction: ALLOW
            protocol: ANY
            ruleSource: ruleSource
            ruleDestPort: ruleDestPort
            ruleOrder: 5
            ruleSourcePort: ruleSourcePort
            id: 1
            ruleDestination: ruleDestination
          dnatRules:
          - dnatProtocol: ANY
            dnatEnabled: true
            dnatTargetIp: dnatTargetIp
            id: 6
            dnatTargetPort: dnatTargetPort
            dnatPort: dnatPort
          - dnatProtocol: ANY
            dnatEnabled: true
            dnatTargetIp: dnatTargetIp
            id: 6
            dnatTargetPort: dnatTargetPort
            dnatPort: dnatPort
        name: name
        maximumImpactLevel: NONE
        state: ACTIVE
        linuxRepositoryUrl: linuxRepositoryUrl
        gpuTypes:
        - K80
        - K80
      properties:
        name:
          type: string
        description:
          type: string
        externalIpAddresses:
          items:
            type: string
          type: array
          uniqueItems: true
        additionalNetworks:
          items:
            $ref: '#/components/schemas/Network'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        cons3rtNetwork:
          $ref: '#/components/schemas/Network'
        externalIpSource:
          enum:
          - ON_DEMAND
          - POOL
          type: string
        features:
          $ref: '#/components/schemas/CloudFeatures'
        gpuTypes:
          items:
            enum:
            - K80
            - M10
            - M60
            - P40
            - T4
            - V100D
            type: string
            xml:
              name: gpuType
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        linuxRepositoryUrl:
          type: string
        maximumImpactLevel:
          enum:
          - NONE
          - FEDRAMP_LOW
          - FEDRAMP_MODERATE_DOD_LEVEL_2
          - FEDRAMP_HIGH_DOD_LEVEL_4
          - DOD_LEVEL_5
          - DOD_LEVEL_6
          type: string
        owningTeam:
          $ref: '#/components/schemas/InputTeam'
        state:
          enum:
          - ACTIVE
          - ENTERING_MAINTENANCE
          - MAINTENANCE
          type: string
        templateVirtualizationRealm:
          $ref: '#/components/schemas/MinimalVirtualizationRealm'
        subtype:
          type: string
      required:
      - externalIpSource
      - maximumImpactLevel
      - name
      - owningTeam
      - subtype
      type: object
      xml:
        name: cloud
    InputOpenStackCloud:
      allOf:
      - $ref: '#/components/schemas/InputCloud'
      - $ref: '#/components/schemas/InputOpenStackCloud_allOf'
      required:
      - externalIpSource
      - keystoneHostname
      - keystonePassword
      - keystonePort
      - keystoneProtocol
      - keystoneUsername
      - keystoneVersion
      - maximumImpactLevel
      - name
      - natImageId
      - natInstanceType
      - owningTeam
      - tenant
      - tenantId
      type: object
      xml:
        name: openStackCloud
    InputTeam:
      example:
        id: 5
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
      required:
      - id
      type: object
      xml:
        name: team
    InputVCloudRestCloud:
      allOf:
      - $ref: '#/components/schemas/InputCloud'
      - $ref: '#/components/schemas/InputVCloudRestCloud_allOf'
      required:
      - externalIpSource
      - hostname
      - maximumImpactLevel
      - name
      - owningTeam
      - password
      - port
      - protocol
      - remoteAccessInternalIp
      - remoteAccessPort
      - username
      type: object
      xml:
        name: vCloudRestCloud
    MinimalVirtualizationRealm:
      example:
        name: name
        virtualizationRealmType: Amazon
        id: 2
        state: ACTIVE
      properties:
        virtualizationRealmType:
          enum:
          - Amazon
          - Azure
          - Mock
          - OpenStack
          - VCloudRest
          type: string
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        name:
          type: string
        state:
          enum:
          - ACTIVE
          - ENTERING_MAINTENANCE
          - INACTIVE
          - MAINTENANCE
          - PENDING
          - REQUESTED
          - RETIRED
          type: string
      required:
      - id
      type: object
      xml:
        name: virtualizationRealm
    FullAwsCloud:
      allOf:
      - $ref: '#/components/schemas/FullCloud'
      - $ref: '#/components/schemas/FullAwsCloud_allOf'
      required:
      - externalIpSource
      - maximumImpactLevel
      - name
      type: object
      xml:
        name: awsCloud
    FullAzureCloud:
      allOf:
      - $ref: '#/components/schemas/FullCloud'
      - $ref: '#/components/schemas/FullAzureCloud_allOf'
      required:
      - clientId
      - environment
      - externalIpSource
      - maximumImpactLevel
      - name
      - regionName
      - subscriptionId
      - tenant
      type: object
      xml:
        name: azureCloud
    FullCloud:
      discriminator:
        propertyName: subtype
      example:
        externalIpSource: ON_DEMAND
        owningTeam:
          private: true
          contactInfo:
            firstname: firstname
            phone: phone
            organization: organization
            email: email
            lastname: lastname
          name: name
          validUtil: 1
          id: 6
          state: ACTIVE
        description: description
        networks:
        - isolated: true
          name: name
          description: description
          cidr: cidr
          id: 0
          networkFunction: CONS3RT
          boundaryIpAddress: boundaryIpAddress
          firewallRules:
          - ruleEnabled: true
            ruleAction: ALLOW
            protocol: ANY
            ruleSource: ruleSource
            ruleDestPort: ruleDestPort
            ruleOrder: 5
            ruleSourcePort: ruleSourcePort
            id: 1
            ruleDestination: ruleDestination
          - ruleEnabled: true
            ruleAction: ALLOW
            protocol: ANY
            ruleSource: ruleSource
            ruleDestPort: ruleDestPort
            ruleOrder: 5
            ruleSourcePort: ruleSourcePort
            id: 1
            ruleDestination: ruleDestination
          dnatRules:
          - dnatProtocol: ANY
            dnatEnabled: true
            dnatTargetIp: dnatTargetIp
            id: 6
            dnatTargetPort: dnatTargetPort
            dnatPort: dnatPort
          - dnatProtocol: ANY
            dnatEnabled: true
            dnatTargetIp: dnatTargetIp
            id: 6
            dnatTargetPort: dnatTargetPort
            dnatPort: dnatPort
        - isolated: true
          name: name
          description: description
          cidr: cidr
          id: 0
          networkFunction: CONS3RT
          boundaryIpAddress: boundaryIpAddress
          firewallRules:
          - ruleEnabled: true
            ruleAction: ALLOW
            protocol: ANY
            ruleSource: ruleSource
            ruleDestPort: ruleDestPort
            ruleOrder: 5
            ruleSourcePort: ruleSourcePort
            id: 1
            ruleDestination: ruleDestination
          - ruleEnabled: true
            ruleAction: ALLOW
            protocol: ANY
            ruleSource: ruleSource
            ruleDestPort: ruleDestPort
            ruleOrder: 5
            ruleSourcePort: ruleSourcePort
            id: 1
            ruleDestination: ruleDestination
          dnatRules:
          - dnatProtocol: ANY
            dnatEnabled: true
            dnatTargetIp: dnatTargetIp
            id: 6
            dnatTargetPort: dnatTargetPort
            dnatPort: dnatPort
          - dnatProtocol: ANY
            dnatEnabled: true
            dnatTargetIp: dnatTargetIp
            id: 6
            dnatTargetPort: dnatTargetPort
            dnatPort: dnatPort
        features:
          gpuAvailable: true
          storageServiceEnabled: true
          allocationCapable: true
          bypassScanningEnabled: true
          deallocationCapable: true
        externalIpAddresses:
        - externalIpAddresses
        - externalIpAddresses
        templateVirtualizationRealm:
          name: name
          virtualizationRealmType: Amazon
          id: 2
          state: ACTIVE
        subtype: subtype
        cloudType: AwsCloud
        virtualizationRealms:
        - name: name
          virtualizationRealmType: Amazon
          id: 2
          state: ACTIVE
        - name: name
          virtualizationRealmType: Amazon
          id: 2
          state: ACTIVE
        name: name
        id: 0
        state: ACTIVE
        maximumImpactLevel: NONE
        linuxRepositoryUrl: linuxRepositoryUrl
        gpuTypes:
        - K80
        - K80
      properties:
        cloudType:
          enum:
          - AwsCloud
          - AzureCloud
          - OpenStackCloud
          - VCloudRestCloud
          type: string
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        name:
          type: string
        state:
          enum:
          - ACTIVE
          - ENTERING_MAINTENANCE
          - MAINTENANCE
          type: string
        description:
          type: string
        externalIpAddresses:
          items:
            type: string
            xml:
              name: externalIpAddress
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        externalIpSource:
          enum:
          - ON_DEMAND
          - POOL
          type: string
        features:
          $ref: '#/components/schemas/CloudFeatures'
        gpuTypes:
          items:
            enum:
            - K80
            - M10
            - M60
            - P40
            - T4
            - V100D
            type: string
            xml:
              name: gpuType
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        linuxRepositoryUrl:
          type: string
        maximumImpactLevel:
          enum:
          - NONE
          - FEDRAMP_LOW
          - FEDRAMP_MODERATE_DOD_LEVEL_2
          - FEDRAMP_HIGH_DOD_LEVEL_4
          - DOD_LEVEL_5
          - DOD_LEVEL_6
          type: string
        networks:
          items:
            $ref: '#/components/schemas/Network'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        owningTeam:
          $ref: '#/components/schemas/MinimalTeam'
        templateVirtualizationRealm:
          $ref: '#/components/schemas/MinimalVirtualizationRealm'
        virtualizationRealms:
          items:
            $ref: '#/components/schemas/MinimalVirtualizationRealm'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        subtype:
          type: string
      required:
      - externalIpSource
      - maximumImpactLevel
      - name
      - subtype
      type: object
      xml:
        name: cloud
    FullOpenStackCloud:
      allOf:
      - $ref: '#/components/schemas/FullCloud'
      - $ref: '#/components/schemas/FullOpenStackCloud_allOf'
      required:
      - externalIpSource
      - maximumImpactLevel
      - name
      - natImageId
      - natInstanceType
      - tenant
      - tenantId
      type: object
      xml:
        name: openStackCloud
    FullVCloudRestCloud:
      allOf:
      - $ref: '#/components/schemas/FullCloud'
      - $ref: '#/components/schemas/FullVCloudRestCloud_allOf'
      required:
      - externalIpSource
      - maximumImpactLevel
      - name
      type: object
      xml:
        name: vCloudRestCloud
    MinimalTeam:
      example:
        private: true
        contactInfo:
          firstname: firstname
          phone: phone
          organization: organization
          email: email
          lastname: lastname
        name: name
        validUtil: 1
        id: 6
        state: ACTIVE
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        name:
          type: string
        private:
          type: boolean
        state:
          enum:
          - ACTIVE
          - INACTIVE
          - REQUESTED
          - RETIRED
          - UNFUNDED
          type: string
        validUtil:
          format: int32
          type: integer
        contactInfo:
          $ref: '#/components/schemas/PocInfo'
      required:
      - contactInfo
      - name
      - state
      type: object
      xml:
        name: team
    AbstractRegisterCloudSpaceRequest:
      discriminator:
        propertyName: virtualizationRealmType
      example:
        cons3rtNetworkName: cons3rtNetworkName
        description: description
        additionalNetworkNames:
        - additionalNetworkNames
        - additionalNetworkNames
        accessPoint: accessPoint
        maximumRamInMegabytes: 0
        maximumNumGpus: 0
        activeAfterRegistration: true
        maximumNumCpus: 0
        password: password
        maximumStorageInMegabytes: 0
        name: name
        maximumVirtualMachines: 0
        powerOnMaximumDelay: 0
        remoteAccessConfig:
          remoteAccessIpAddress: remoteAccessIpAddress
          templateName: templateName
          remoteAccessPort: 7
          instanceType: LARGE
          id: 4
        virtualizationRealmType: Amazon
        powerOnInitialDelayBase: 0
        primaryNetworkName: primaryNetworkName
        powerOnMinimumDelay: 0
        username: username
      properties:
        virtualizationRealmType:
          enum:
          - Amazon
          - Azure
          - Mock
          - OpenStack
          - VCloudRest
          type: string
        name:
          maxLength: 25
          minLength: 3
          type: string
        description:
          type: string
        accessPoint:
          maxLength: 18
          minLength: 7
          type: string
        activeAfterRegistration:
          type: boolean
        additionalNetworkNames:
          items:
            type: string
            xml:
              name: name
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        cons3rtNetworkName:
          type: string
        maximumNumCpus:
          format: int32
          minimum: 0
          type: integer
        maximumNumGpus:
          format: int32
          minimum: 0
          type: integer
        maximumRamInMegabytes:
          format: int32
          minimum: 0
          type: integer
        maximumStorageInMegabytes:
          format: int32
          minimum: 0
          type: integer
        maximumVirtualMachines:
          format: int32
          minimum: 0
          type: integer
        powerOnMinimumDelay:
          format: int32
          minimum: 0
          type: integer
        powerOnMaximumDelay:
          format: int32
          minimum: 0
          type: integer
        password:
          type: string
        powerOnInitialDelayBase:
          format: int32
          minimum: 0
          type: integer
        primaryNetworkName:
          type: string
        remoteAccessConfig:
          $ref: '#/components/schemas/RemoteAccessConfig'
        username:
          type: string
      required:
      - cons3rtNetworkName
      - name
      - password
      - primaryNetworkName
      - username
      - virtualizationRealmType
      type: object
      xml:
        name: registerCloudSpaceRequest
    AwsRegisterCloudSpaceRequest:
      allOf:
      - $ref: '#/components/schemas/AbstractRegisterCloudSpaceRequest'
      - $ref: '#/components/schemas/AwsRegisterCloudSpaceRequest_allOf'
      required:
      - accountId
      - cons3rtNetworkName
      - name
      - networkSecurityGroupMap
      - password
      - primaryNetworkName
      - region
      - username
      - virtualizationRealmType
      - vpcId
      type: object
      xml:
        name: registerCloudSpaceRequest
    AzureRegisterCloudSpaceRequest:
      allOf:
      - $ref: '#/components/schemas/AbstractRegisterCloudSpaceRequest'
      - $ref: '#/components/schemas/AzureRegisterCloudSpaceRequest_allOf'
      required:
      - accountId
      - cons3rtNetworkName
      - environment
      - name
      - password
      - primaryNetworkName
      - region
      - resourceGroupName
      - tenantId
      - username
      - virtualNetworkName
      - virtualizationRealmType
      type: object
      xml:
        name: registerCloudSpaceRequest
    VCloudRestRegisterCloudSpaceRequest:
      allOf:
      - $ref: '#/components/schemas/AbstractRegisterCloudSpaceRequest'
      - $ref: '#/components/schemas/VCloudRestRegisterCloudSpaceRequest_allOf'
      required:
      - cons3rtNetworkName
      - name
      - organization
      - organizationVdc
      - password
      - primaryNetworkName
      - username
      - virtualizationRealmType
      type: object
      xml:
        name: registerCloudSpaceRequest
    InputAwsVirtualizationRealm:
      allOf:
      - $ref: '#/components/schemas/InputVirtualizationRealm'
      - $ref: '#/components/schemas/InputAwsVirtualizationRealm_allOf'
      required:
      - accountId
      - cidr
      - description
      - name
      - password
      - region
      - username
      - vpcId
      type: object
      xml:
        name: virtualizationRealm
    InputAzureVirtualizationRealm:
      allOf:
      - $ref: '#/components/schemas/InputVirtualizationRealm'
      - $ref: '#/components/schemas/InputAzureVirtualizationRealm_allOf'
      required:
      - accountId
      - cidr
      - description
      - name
      - password
      - resourceGroupName
      - tenantId
      - username
      - virtualNetworkName
      type: object
      xml:
        name: virtualizationRealm
    InputOpenStackVirtualizationRealm:
      allOf:
      - $ref: '#/components/schemas/InputVirtualizationRealm'
      required:
      - accountId
      - cidr
      - description
      - name
      - password
      - username
      type: object
      xml:
        name: virtualizationRealm
    InputVCloudRestVirtualizationRealm:
      allOf:
      - $ref: '#/components/schemas/InputVirtualizationRealm'
      - $ref: '#/components/schemas/VCloudRestVirtualizationRealm_allOf'
      required:
      - accountId
      - cidr
      - description
      - name
      - organization
      - organizationVdc
      - password
      - username
      - vdcNetworkQuota
      type: object
      xml:
        name: virtualizationRealm
    InputVirtualizationRealm:
      discriminator:
        propertyName: virtualizationRealmType
      example:
        localStorageName: localStorageName
        description: description
        zoneCount: 1
        accessPoint: accessPoint
        maximumRamInMegabytes: 0
        maximumNumGpus: 0
        accountId: accountId
        defaultWindowsDomainName: defaultWindowsDomainName
        maximumNumCpus: 0
        password: password
        maximumStorageInMegabytes: 0
        name: name
        maximumVirtualMachines: 0
        powerOnMaximumDelay: 0
        remoteAccessConfig:
          remoteAccessIpAddress: remoteAccessIpAddress
          templateName: templateName
          remoteAccessPort: 7
          instanceType: LARGE
          id: 4
        cidr: cidr
        virtualizationRealmType: Amazon
        id: 0
        powerOnInitialDelayBase: 9
        state: ACTIVE
        powerOnMinimumDelay: 0
        powerOnDelayBase: 7
        username: username
      properties:
        virtualizationRealmType:
          enum:
          - Amazon
          - Azure
          - Mock
          - OpenStack
          - VCloudRest
          type: string
        accessPoint:
          type: string
        accountId:
          type: string
        cidr:
          maxLength: 16
          minLength: 10
          type: string
        defaultWindowsDomainName:
          type: string
        description:
          type: string
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        localStorageName:
          type: string
        maximumNumCpus:
          format: int32
          minimum: 0
          type: integer
        maximumNumGpus:
          format: int32
          minimum: 0
          type: integer
        maximumRamInMegabytes:
          format: int32
          minimum: 0
          type: integer
        maximumStorageInMegabytes:
          format: int32
          minimum: 0
          type: integer
        maximumVirtualMachines:
          format: int32
          minimum: 0
          type: integer
        name:
          type: string
        password:
          type: string
        powerOnDelayBase:
          format: int64
          type: integer
        powerOnInitialDelayBase:
          format: int32
          type: integer
        powerOnMaximumDelay:
          format: int32
          minimum: 0
          type: integer
        powerOnMinimumDelay:
          format: int32
          minimum: 0
          type: integer
        remoteAccessConfig:
          $ref: '#/components/schemas/RemoteAccessConfig'
        state:
          enum:
          - ACTIVE
          - ENTERING_MAINTENANCE
          - INACTIVE
          - MAINTENANCE
          - PENDING
          - REQUESTED
          - RETIRED
          type: string
        username:
          type: string
        zoneCount:
          format: int32
          type: integer
      required:
      - accountId
      - cidr
      - description
      - name
      - password
      - username
      type: object
      xml:
        name: virtualizationRealm
    AbstractCloudSpaceRequest:
      discriminator:
        propertyName: subtype
      example:
        cloudSpaceName: cloudSpaceName
        subtype: subtype
        numAvailabilityZones: 6
        maximumVirtualMachines: 0
        powerOnMaximumDelay: 0
        cidr: cidr
        powerOnMinimumDelay: 0
      properties:
        cloudSpaceName:
          maxLength: 25
          minLength: 1
          type: string
        maximumVirtualMachines:
          format: int32
          type: integer
        cidr:
          maxLength: 16
          minLength: 10
          type: string
        numAvailabilityZones:
          format: int32
          type: integer
        powerOnMaximumDelay:
          format: int32
          minimum: 0
          type: integer
        powerOnMinimumDelay:
          format: int32
          minimum: 0
          type: integer
        subtype:
          type: string
      required:
      - cidr
      - cloudSpaceName
      - subtype
      type: object
      xml:
        name: abstractCloudSpaceRequest
    AwsCloudSpaceRequest:
      allOf:
      - $ref: '#/components/schemas/AbstractCloudSpaceRequest'
      - $ref: '#/components/schemas/AwsCloudSpaceRequest_allOf'
      required:
      - cidr
      - cloudSpaceName
      - natImageId
      - natInstanceType
      type: object
      xml:
        name: awsCloudSpaceRequest
    AzureCloudSpaceRequest:
      allOf:
      - $ref: '#/components/schemas/AbstractCloudSpaceRequest'
      - $ref: '#/components/schemas/AzureCloudSpaceRequest_allOf'
      required:
      - cidr
      - cloudSpaceName
      - natImageReference
      - natInstanceType
      type: object
      xml:
        name: azureCloudSpaceRequest
    ImageReferenceDTO:
      properties:
        publisher:
          maxLength: 255
          minLength: 0
          type: string
        type:
          maxLength: 255
          minLength: 0
          type: string
        imageVersion:
          maxLength: 255
          minLength: 0
          type: string
      required:
      - imageVersion
      - publisher
      - type
      type: object
    OpenStackCloudSpaceRequest:
      allOf:
      - $ref: '#/components/schemas/AbstractCloudSpaceRequest'
      - $ref: '#/components/schemas/OpenStackCloudSpaceRequest_allOf'
      required:
      - cidr
      - cloudSpaceName
      - externalNetworkName
      - natFlavorType
      - natImageId
      type: object
      xml:
        name: openStackCloudSpaceRequest
    VCloudRestCloudSpaceRequest:
      allOf:
      - $ref: '#/components/schemas/AbstractCloudSpaceRequest'
      - $ref: '#/components/schemas/VCloudRestCloudSpaceRequest_allOf'
      required:
      - cidr
      - cloudSpaceName
      - emailAddress
      - externalNetworkName
      - password
      - providerVdcName
      - username
      - vdcNetworkPoolName
      - vdcNetworkQuota
      type: object
      xml:
        name: vCloudRestCloudSpaceRequest
    AbstractCloudResources:
      discriminator:
        propertyName: subtype
      example:
        subtype: subtype
        natInstanceTypes:
        - family: family
          type: type
        - family: family
          type: type
      properties:
        natInstanceTypes:
          items:
            $ref: '#/components/schemas/InstanceType'
          type: array
          uniqueItems: true
        subtype:
          type: string
      required:
      - subtype
      type: object
      xml:
        name: abstractCloudResources
    AwsCloudResources:
      allOf:
      - $ref: '#/components/schemas/AbstractCloudResources'
      - $ref: '#/components/schemas/AwsCloudResources_allOf'
      type: object
      xml:
        name: awsCloudResources
    AzureCloudResources:
      allOf:
      - $ref: '#/components/schemas/AbstractCloudResources'
      - $ref: '#/components/schemas/AzureCloudResources_allOf'
      type: object
      xml:
        name: azureCloudResources
    InstanceType:
      example:
        family: family
        type: type
      properties:
        family:
          type: string
        type:
          type: string
      type: object
    OpenStackCloudResources:
      allOf:
      - $ref: '#/components/schemas/AbstractCloudResources'
      - $ref: '#/components/schemas/OpenStackCloudResources_allOf'
      type: object
      xml:
        name: awsCloudResources
    VCloudCloudResources:
      allOf:
      - $ref: '#/components/schemas/AbstractCloudResources'
      - $ref: '#/components/schemas/VCloudCloudResources_allOf'
      type: object
      xml:
        name: vCloudCloudResources
    MaintenanceModeRequest:
      example:
        endDate: 0
        message: message
        timeout: 6
      properties:
        endDate:
          format: int32
          type: integer
        message:
          type: string
        timeout:
          format: int32
          type: integer
      type: object
      xml:
        name: maintenceModeRequest
    FullComposition:
      example:
        scenario:
          offline: true
          visibility: OWNER
          name: name
          description: description
          id: id
          state: IN_DEVELOPMENT
        name: name
        description: description
        project:
          name: name
          id: 6
          itarRestricted: true
        id: 0
        deploymentRunOptions:
          creator:
            id: 0
            email: email
            username: username
          debug: true
          endState: UNKNOWN_STATE
          description: description
          virtualizationRealmId: 4
          duration: 1
          deploymentRunName: deploymentRunName
          earliestStartTime: 5
          hostOptions:
          - gpuProfile: M10_0Q
            batchSoftwareInstall: true
            networkInterfaces:
            - macAddress: macAddress
              externalIpAddress: externalIpAddress
              networkName: networkName
              interfaceName: interfaceName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            - macAddress: macAddress
              externalIpAddress: externalIpAddress
              networkName: networkName
              interfaceName: interfaceName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            systemRole: systemRole
            cpus: 5
            additionalDisks:
            - createOrder: 9
              isBootDisk: true
              capacityInMegabytes: 7
              isAdditionalDisk: true
              id: 3
              bootDisk: true
              additionalDisk: true
            - createOrder: 9
              isBootDisk: true
              capacityInMegabytes: 7
              isAdditionalDisk: true
              id: 3
              bootDisk: true
              additionalDisk: true
            ram: 2
            gpuType: K80
          - gpuProfile: M10_0Q
            batchSoftwareInstall: true
            networkInterfaces:
            - macAddress: macAddress
              externalIpAddress: externalIpAddress
              networkName: networkName
              interfaceName: interfaceName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            - macAddress: macAddress
              externalIpAddress: externalIpAddress
              networkName: networkName
              interfaceName: interfaceName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            systemRole: systemRole
            cpus: 5
            additionalDisks:
            - createOrder: 9
              isBootDisk: true
              capacityInMegabytes: 7
              isAdditionalDisk: true
              id: 3
              bootDisk: true
              additionalDisk: true
            - createOrder: 9
              isBootDisk: true
              capacityInMegabytes: 7
              isAdditionalDisk: true
              id: 3
              bootDisk: true
              additionalDisk: true
            ram: 2
            gpuType: K80
          deploymentToSubmit: 6
          id: 2
          locked: true
          properties:
          - id: 7
            value: value
            key: key
          - id: 7
            value: value
            key: key
          retainOnError: true
          rootPassword: rootPassword
          endExisting: true
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        deploymentRunOptions:
          $ref: '#/components/schemas/MinimalDeploymentRunOptions'
        project:
          $ref: '#/components/schemas/MinimalProject'
        scenario:
          $ref: '#/components/schemas/MinimalScenario'
      type: object
      xml:
        name: composition
    HostOption:
      example:
        gpuProfile: M10_0Q
        batchSoftwareInstall: true
        networkInterfaces:
        - macAddress: macAddress
          externalIpAddress: externalIpAddress
          networkName: networkName
          interfaceName: interfaceName
          networkFunction: CONS3RT
          networkIdentifier: networkIdentifier
          internalIpAddress: internalIpAddress
        - macAddress: macAddress
          externalIpAddress: externalIpAddress
          networkName: networkName
          interfaceName: interfaceName
          networkFunction: CONS3RT
          networkIdentifier: networkIdentifier
          internalIpAddress: internalIpAddress
        systemRole: systemRole
        cpus: 5
        additionalDisks:
        - createOrder: 9
          isBootDisk: true
          capacityInMegabytes: 7
          isAdditionalDisk: true
          id: 3
          bootDisk: true
          additionalDisk: true
        - createOrder: 9
          isBootDisk: true
          capacityInMegabytes: 7
          isAdditionalDisk: true
          id: 3
          bootDisk: true
          additionalDisk: true
        ram: 2
        gpuType: K80
      properties:
        systemRole:
          type: string
        cpus:
          format: int32
          type: integer
        ram:
          format: int32
          type: integer
        additionalDisks:
          items:
            $ref: '#/components/schemas/Disk'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        networkInterfaces:
          items:
            $ref: '#/components/schemas/NetworkInterface'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        batchSoftwareInstall:
          type: boolean
        gpuProfile:
          enum:
          - M10_0Q
          - M10_1Q
          - M10_2Q
          - M10_4Q
          - V100D_2Q
          - V100D_4Q
          type: string
        gpuType:
          enum:
          - K80
          - M10
          - M60
          - P40
          - T4
          - V100D
          type: string
      required:
      - systemRole
      type: object
      xml:
        name: hostOption
    MinimalDeploymentRunOptions:
      example:
        creator:
          id: 0
          email: email
          username: username
        debug: true
        endState: UNKNOWN_STATE
        description: description
        virtualizationRealmId: 4
        duration: 1
        deploymentRunName: deploymentRunName
        earliestStartTime: 5
        hostOptions:
        - gpuProfile: M10_0Q
          batchSoftwareInstall: true
          networkInterfaces:
          - macAddress: macAddress
            externalIpAddress: externalIpAddress
            networkName: networkName
            interfaceName: interfaceName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          - macAddress: macAddress
            externalIpAddress: externalIpAddress
            networkName: networkName
            interfaceName: interfaceName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          systemRole: systemRole
          cpus: 5
          additionalDisks:
          - createOrder: 9
            isBootDisk: true
            capacityInMegabytes: 7
            isAdditionalDisk: true
            id: 3
            bootDisk: true
            additionalDisk: true
          - createOrder: 9
            isBootDisk: true
            capacityInMegabytes: 7
            isAdditionalDisk: true
            id: 3
            bootDisk: true
            additionalDisk: true
          ram: 2
          gpuType: K80
        - gpuProfile: M10_0Q
          batchSoftwareInstall: true
          networkInterfaces:
          - macAddress: macAddress
            externalIpAddress: externalIpAddress
            networkName: networkName
            interfaceName: interfaceName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          - macAddress: macAddress
            externalIpAddress: externalIpAddress
            networkName: networkName
            interfaceName: interfaceName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          systemRole: systemRole
          cpus: 5
          additionalDisks:
          - createOrder: 9
            isBootDisk: true
            capacityInMegabytes: 7
            isAdditionalDisk: true
            id: 3
            bootDisk: true
            additionalDisk: true
          - createOrder: 9
            isBootDisk: true
            capacityInMegabytes: 7
            isAdditionalDisk: true
            id: 3
            bootDisk: true
            additionalDisk: true
          ram: 2
          gpuType: K80
        deploymentToSubmit: 6
        id: 2
        locked: true
        properties:
        - id: 7
          value: value
          key: key
        - id: 7
          value: value
          key: key
        retainOnError: true
        rootPassword: rootPassword
        endExisting: true
      properties:
        debug:
          type: boolean
        deploymentRunName:
          type: string
        deploymentToSubmit:
          format: int32
          type: integer
        description:
          type: string
        endState:
          enum:
          - UNKNOWN_STATE
          - SYSTEMS_BUILT
          - SCENARIO_BUILT
          - TESTS_EXECUTED_RESOURCES_RELEASED
          - TESTS_EXECUTED_RESOURCES_RESERVED
          type: string
        duration:
          format: int64
          type: integer
        earliestStartTime:
          format: int32
          type: integer
        endExisting:
          type: boolean
        hostOptions:
          items:
            $ref: '#/components/schemas/HostOption'
          type: array
          uniqueItems: true
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        locked:
          type: boolean
        virtualizationRealmId:
          format: int32
          type: integer
        properties:
          items:
            $ref: '#/components/schemas/Property'
          type: array
          uniqueItems: true
        retainOnError:
          type: boolean
        rootPassword:
          type: string
        creator:
          $ref: '#/components/schemas/MinimalUser'
      type: object
      xml:
        name: deploymentRunOptions
    MinimalScenario:
      example:
        offline: true
        visibility: OWNER
        name: name
        description: description
        id: id
        state: IN_DEVELOPMENT
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        offline:
          type: boolean
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
      type: object
      xml:
        name: scenario
    NetworkInterface:
      example:
        macAddress: macAddress
        externalIpAddress: externalIpAddress
        networkName: networkName
        interfaceName: interfaceName
        networkFunction: CONS3RT
        networkIdentifier: networkIdentifier
        internalIpAddress: internalIpAddress
      properties:
        externalIpAddress:
          type: string
        interfaceName:
          type: string
        internalIpAddress:
          type: string
        networkFunction:
          enum:
          - CONS3RT
          - ADDITIONAL
          - PRIMARY
          type: string
        macAddress:
          type: string
        networkName:
          type: string
        networkIdentifier:
          type: string
      type: object
      xml:
        name: networkInterface
    MinimalComposition:
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        deploymentRunOptions:
          $ref: '#/components/schemas/MinimalDeploymentRunOptions'
        project:
          $ref: '#/components/schemas/MinimalProject'
        scenario:
          $ref: '#/components/schemas/MinimalScenario'
      type: object
      xml:
        name: composition
    AbstractComponent:
      discriminator:
        propertyName: subtype
      properties:
        asset:
          $ref: '#/components/schemas/Asset'
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        loadOrder:
          format: int32
          minimum: 0
          type: integer
        subtype:
          type: string
      required:
      - asset
      - subtype
      type: object
      xml:
        name: abstractComponent
    Appliance:
      allOf:
      - $ref: '#/components/schemas/SystemModule'
      type: object
      xml:
        name: appliance
    Composition:
      properties:
        deploymentRunOptions:
          $ref: '#/components/schemas/CompositionRunOptions'
        description:
          type: string
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        name:
          type: string
        project:
          $ref: '#/components/schemas/Project'
        scenario:
          $ref: '#/components/schemas/Scenario'
      required:
      - name
      type: object
      xml:
        name: composition
    CompositionHostOption:
      properties:
        additionalDisks:
          items:
            $ref: '#/components/schemas/Disk'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        batchSoftwareInstall:
          type: boolean
        instanceTypeName:
          type: string
        networkInterfaces:
          items:
            $ref: '#/components/schemas/NetworkInterface'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        cpus:
          format: int32
          type: integer
        ram:
          format: int32
          type: integer
        systemRole:
          type: string
        templateName:
          type: string
      required:
      - systemRole
      type: object
      xml:
        name: hostOption
    CompositionRunOptions:
      properties:
        description:
          type: string
        hostOptions:
          items:
            $ref: '#/components/schemas/CompositionHostOption'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
        virtualizationRealmId:
          format: int32
          minimum: 1
          type: integer
        properties:
          items:
            $ref: '#/components/schemas/Property'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
        windowsDomainName:
          type: string
      required:
      - virtualizationRealmId
      type: object
      xml:
        name: CompositionRunOptions
    Configuration:
      properties:
        idConfiguration:
          format: int32
          type: integer
        configurationScriptType:
          enum:
          - HOST_INIT
          - CONFIGURE_SCENARIO_HOST
          - CUSTOMIZE_OS_HOST
          - CONFIGURE_SCENARIO_MASTER
          - TEARDOWN_SCENARIO_HOST
          - TEARDOWN_SCENARIO_MASTER
          type: string
        script:
          type: string
        scriptName:
          type: string
      required:
      - script
      type: object
      xml:
        name: configuration
    ContainerComponent:
      allOf:
      - $ref: '#/components/schemas/AbstractComponent'
      - $ref: '#/components/schemas/ContainerComponent_allOf'
      required:
      - asset
      - configuration
      type: object
      xml:
        name: containerComponent
    ContainerConfiguration:
      properties:
        id:
          format: int32
          type: integer
        containerName:
          type: string
        containerRuntime:
          enum:
          - DOCKER
          - PODMAN
          type: string
        environmentMap:
          additionalProperties:
            type: string
            xml:
              name: externalIpAddress
          type: object
        mounts:
          items:
            $ref: '#/components/schemas/ContainerMount'
          type: array
          uniqueItems: true
        portMappings:
          items:
            $ref: '#/components/schemas/ContainerPortMapping'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        runArguments:
          type: string
        runDisabled:
          type: boolean
      required:
      - containerName
      type: object
      xml:
        name: containerConfiguration
    ContainerMount:
      properties:
        id:
          format: int32
          type: integer
        type:
          enum:
          - BIND_MOUNT
          - TMPFS_MOUNT
          - VOLUME_MOUNT
          type: string
        source:
          type: string
        target:
          type: string
        options:
          type: string
      required:
      - source
      - target
      - type
      type: object
      xml:
        name: containerMount
    ContainerPortMapping:
      properties:
        externalIp:
          type: string
        externalPort:
          format: int32
          type: integer
        internalPort:
          format: int32
          type: integer
        protocol:
          enum:
          - ANY
          - ICMP
          - TCP
          - UDP
          type: string
      required:
      - externalIp
      - externalPort
      - internalPort
      - protocol
      type: object
      xml:
        name: containerPortMapping
    Device:
      allOf:
      - $ref: '#/components/schemas/SystemModule'
      - $ref: '#/components/schemas/Device_allOf'
      type: object
      xml:
        name: device
    PhysicalHost:
      allOf:
      - $ref: '#/components/schemas/SystemModule'
      - $ref: '#/components/schemas/PhysicalHost_allOf'
      type: object
      xml:
        name: physicalHost
    PhysicalMachine:
      properties:
        id:
          type: string
          xml:
            attribute: true
        trustedProjects:
          items:
            $ref: '#/components/schemas/Project'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        creator:
          $ref: '#/components/schemas/User'
        dependentAssetCount:
          format: int32
          type: integer
        description:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        name:
          type: string
        offline:
          type: boolean
        owningProject:
          $ref: '#/components/schemas/Project'
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        impactLevel:
          enum:
          - NONE
          - FEDRAMP_LOW
          - FEDRAMP_MODERATE_DOD_LEVEL_2
          - FEDRAMP_HIGH_DOD_LEVEL_4
          - DOD_LEVEL_5
          - DOD_LEVEL_6
          type: string
        categories:
          items:
            $ref: '#/components/schemas/Category'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        architecture:
          enum:
          - X86
          - X64
          - ARM
          - SPARC
          - PPCLE
          type: string
        bits:
          enum:
          - BITS32
          - BITS64
          type: string
        operatingSystem:
          enum:
          - AMAZON_LINUX_2_LATEST_X64
          - AMAZON_LINUX_LATEST_X64
          - CENTOS_6_X64
          - CENTOS_6_X86
          - CENTOS_7_X64
          - CENTOS_8_X64
          - CORE_OS_1221_X64
          - F5_BIGIP_X64
          - FEDORA_23_X64
          - FORTISIEM
          - GENERIC_LINUX_X64
          - GENERIC_WINDOWS_X64
          - KALI_ROLLING_X64
          - ORACLE_LINUX_6_X64
          - ORACLE_LINUX_7_X64
          - ORACLE_LINUX_8_X64
          - OS_X_10
          - OS_X_11
          - PALO_ALTO_NETWORKS_PAN_OS_X64
          - RASPBIAN
          - RHEL_5_X64
          - RHEL_5_X86
          - RHEL_6_X64
          - RHEL_6_X86
          - RHEL_7_ATOMIC_HOST
          - RHEL_7_PPCLE
          - RHEL_7_X64
          - RHEL_8_X64
          - SOLARIS_11_X64
          - UBUNTU_12_X64
          - UBUNTU_14_X64
          - UBUNTU_16_X64
          - UBUNTU_18_X64
          - UBUNTU_20_X64
          - UBUNTU_CORE
          - VYOS_1_1_X64
          - VYOS_1_2_X64
          - VYOS_1_3_X64
          - VYOS_ROLLING_X64
          - WINDOWS_10_X64
          - WINDOWS_7_X64
          - WINDOWS_7_X86
          - WINDOWS_8_X64
          - WINDOWS_SERVER_2008_R2_X64
          - WINDOWS_SERVER_2008_X64
          - WINDOWS_SERVER_2012_R2_X64
          - WINDOWS_SERVER_2012_X64
          - WINDOWS_SERVER_2016_X64
          - WINDOWS_SERVER_2019_X64
          - WINDOWS_SERVER_2019_CORE_X64
          - WINDOWS_XP_X86
          type: string
          xml:
            name: opertatingSystem
        baseDisks:
          items:
            $ref: '#/components/schemas/Disk'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        remoteAccessTemplates:
          items:
            $ref: '#/components/schemas/RemoteAccessTemplate'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        hostName:
          type: string
          xml:
            name: hostname
        ipAddress:
          type: string
        macAddress:
          type: string
        cpuCount:
          format: int32
          minimum: 1
          type: integer
        ram:
          format: int32
          minimum: 1
          type: integer
      type: object
      xml:
        name: physicalMachine
    Scenario:
      properties:
        id:
          type: string
          xml:
            attribute: true
        trustedProjects:
          items:
            $ref: '#/components/schemas/Project'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        creator:
          $ref: '#/components/schemas/User'
        dependentAssetCount:
          format: int32
          type: integer
        description:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        name:
          type: string
        offline:
          type: boolean
        owningProject:
          $ref: '#/components/schemas/Project'
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        impactLevel:
          enum:
          - NONE
          - FEDRAMP_LOW
          - FEDRAMP_MODERATE_DOD_LEVEL_2
          - FEDRAMP_HIGH_DOD_LEVEL_4
          - DOD_LEVEL_5
          - DOD_LEVEL_6
          type: string
        categories:
          items:
            $ref: '#/components/schemas/Category'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        scenarioHosts:
          items:
            $ref: '#/components/schemas/ScenarioHost'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        prepareScenarioConfiguration:
          $ref: '#/components/schemas/Configuration'
        teardownScenarioConfiguration:
          $ref: '#/components/schemas/Configuration'
      type: object
      xml:
        name: scenario
    ScenarioHost:
      properties:
        buildOrder:
          format: int32
          type: integer
        configureScenarioConfiguration:
          $ref: '#/components/schemas/Configuration'
        teardownScenarioConfiguration:
          $ref: '#/components/schemas/Configuration'
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        master:
          type: boolean
        systemModule:
          $ref: '#/components/schemas/SystemModule'
        systemRole:
          type: string
      required:
      - systemModule
      - systemRole
      type: object
      xml:
        name: scenarioHost
    SoftwareComponent:
      properties:
        asset:
          $ref: '#/components/schemas/Asset'
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        loadOrder:
          format: int32
          minimum: 0
          type: integer
        rebootDelay:
          format: int32
          type: integer
        rebootRequired:
          type: boolean
      required:
      - asset
      type: object
      xml:
        name: softwareComponent
    SystemModule:
      discriminator:
        propertyName: subtype
      properties:
        components:
          items:
            $ref: '#/components/schemas/AbstractComponent'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        id:
          type: string
          xml:
            attribute: true
        trustedProjects:
          items:
            $ref: '#/components/schemas/Project'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        creator:
          $ref: '#/components/schemas/User'
        dependentAssetCount:
          format: int32
          type: integer
        description:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        name:
          type: string
        offline:
          type: boolean
        owningProject:
          $ref: '#/components/schemas/Project'
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        impactLevel:
          enum:
          - NONE
          - FEDRAMP_LOW
          - FEDRAMP_MODERATE_DOD_LEVEL_2
          - FEDRAMP_HIGH_DOD_LEVEL_4
          - DOD_LEVEL_5
          - DOD_LEVEL_6
          type: string
        categories:
          items:
            $ref: '#/components/schemas/Category'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        physicalMachineUuid:
          format: uuid
          type: string
        templateProfile:
          $ref: '#/components/schemas/TemplateProfile'
        subtype:
          type: string
      required:
      - subtype
      type: object
      xml:
        name: systemModule
    TemplateProfile:
      properties:
        additionalDisks:
          items:
            $ref: '#/components/schemas/Disk'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        cons3rtAgentRequired:
          type: boolean
        vgpuRequired:
          type: boolean
        gpuType:
          enum:
          - K80
          - M10
          - M60
          - P40
          - T4
          - V100D
          type: string
        requiresNestedVirtualization:
          type: boolean
        minBootDiskCapacity:
          format: int32
          type: integer
        minNumCpus:
          format: int32
          type: integer
        operatingSystem:
          enum:
          - AMAZON_LINUX_2_LATEST_X64
          - AMAZON_LINUX_LATEST_X64
          - CENTOS_6_X64
          - CENTOS_6_X86
          - CENTOS_7_X64
          - CENTOS_8_X64
          - CORE_OS_1221_X64
          - F5_BIGIP_X64
          - FEDORA_23_X64
          - FORTISIEM
          - GENERIC_LINUX_X64
          - GENERIC_WINDOWS_X64
          - KALI_ROLLING_X64
          - ORACLE_LINUX_6_X64
          - ORACLE_LINUX_7_X64
          - ORACLE_LINUX_8_X64
          - OS_X_10
          - OS_X_11
          - PALO_ALTO_NETWORKS_PAN_OS_X64
          - RASPBIAN
          - RHEL_5_X64
          - RHEL_5_X86
          - RHEL_6_X64
          - RHEL_6_X86
          - RHEL_7_ATOMIC_HOST
          - RHEL_7_PPCLE
          - RHEL_7_X64
          - RHEL_8_X64
          - SOLARIS_11_X64
          - UBUNTU_12_X64
          - UBUNTU_14_X64
          - UBUNTU_16_X64
          - UBUNTU_18_X64
          - UBUNTU_20_X64
          - UBUNTU_CORE
          - VYOS_1_1_X64
          - VYOS_1_2_X64
          - VYOS_1_3_X64
          - VYOS_ROLLING_X64
          - WINDOWS_10_X64
          - WINDOWS_7_X64
          - WINDOWS_7_X86
          - WINDOWS_8_X64
          - WINDOWS_SERVER_2008_R2_X64
          - WINDOWS_SERVER_2008_X64
          - WINDOWS_SERVER_2012_R2_X64
          - WINDOWS_SERVER_2012_X64
          - WINDOWS_SERVER_2016_X64
          - WINDOWS_SERVER_2019_X64
          - WINDOWS_SERVER_2019_CORE_X64
          - WINDOWS_XP_X86
          type: string
        remoteAccessRequired:
          type: boolean
        minRam:
          format: int32
          type: integer
        virtRealmId:
          format: int32
          type: integer
        virtRealmTemplateName:
          type: string
      required:
      - minNumCpus
      - minRam
      type: object
      xml:
        name: templateProfile
    VirtualHost:
      allOf:
      - $ref: '#/components/schemas/SystemModule'
      type: object
      xml:
        name: virtualHost
    InputComposition:
      example:
        name: name
        description: description
        deploymentRunOptions:
          hostOptions:
          - networkInterfaces:
            - macAddress: macAddress
              networkName: networkName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            - macAddress: macAddress
              networkName: networkName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            instanceTypeName: instanceTypeName
            systemRole: systemRole
            cpus: 6
            templateName: templateName
            additionalDisks:
            - createOrder: 5
              capacityInMegabytes: 5
            - createOrder: 5
              capacityInMegabytes: 5
            ram: 1
          - networkInterfaces:
            - macAddress: macAddress
              networkName: networkName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            - macAddress: macAddress
              networkName: networkName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            instanceTypeName: instanceTypeName
            systemRole: systemRole
            cpus: 6
            templateName: templateName
            additionalDisks:
            - createOrder: 5
              capacityInMegabytes: 5
            - createOrder: 5
              capacityInMegabytes: 5
            ram: 1
          - networkInterfaces:
            - macAddress: macAddress
              networkName: networkName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            - macAddress: macAddress
              networkName: networkName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            instanceTypeName: instanceTypeName
            systemRole: systemRole
            cpus: 6
            templateName: templateName
            additionalDisks:
            - createOrder: 5
              capacityInMegabytes: 5
            - createOrder: 5
              capacityInMegabytes: 5
            ram: 1
          - networkInterfaces:
            - macAddress: macAddress
              networkName: networkName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            - macAddress: macAddress
              networkName: networkName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            instanceTypeName: instanceTypeName
            systemRole: systemRole
            cpus: 6
            templateName: templateName
            additionalDisks:
            - createOrder: 5
              capacityInMegabytes: 5
            - createOrder: 5
              capacityInMegabytes: 5
            ram: 1
          - networkInterfaces:
            - macAddress: macAddress
              networkName: networkName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            - macAddress: macAddress
              networkName: networkName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            instanceTypeName: instanceTypeName
            systemRole: systemRole
            cpus: 6
            templateName: templateName
            additionalDisks:
            - createOrder: 5
              capacityInMegabytes: 5
            - createOrder: 5
              capacityInMegabytes: 5
            ram: 1
          description: description
          virtualizationRealmId: 1
          windowsDomainName: windowsDomainName
          properties:
          - value: value
            key: key
          - value: value
            key: key
          - value: value
            key: key
          - value: value
            key: key
          - value: value
            key: key
      properties:
        name:
          type: string
        description:
          type: string
        deploymentRunOptions:
          $ref: '#/components/schemas/InputCompositionRunOptions'
      required:
      - deploymentRunOptions
      - name
      type: object
      xml:
        name: composition
    InputCompositionHostOption:
      example:
        networkInterfaces:
        - macAddress: macAddress
          networkName: networkName
          networkFunction: CONS3RT
          networkIdentifier: networkIdentifier
          internalIpAddress: internalIpAddress
        - macAddress: macAddress
          networkName: networkName
          networkFunction: CONS3RT
          networkIdentifier: networkIdentifier
          internalIpAddress: internalIpAddress
        instanceTypeName: instanceTypeName
        systemRole: systemRole
        cpus: 6
        templateName: templateName
        additionalDisks:
        - createOrder: 5
          capacityInMegabytes: 5
        - createOrder: 5
          capacityInMegabytes: 5
        ram: 1
      properties:
        systemRole:
          type: string
        cpus:
          format: int32
          type: integer
        ram:
          format: int32
          type: integer
        additionalDisks:
          items:
            $ref: '#/components/schemas/InputDisk'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        instanceTypeName:
          description: Required for Azure and AWS EC2 Cloudspaces
          type: string
        networkInterfaces:
          items:
            $ref: '#/components/schemas/InputNetworkInterface'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        templateName:
          type: string
      required:
      - systemRole
      - templateName
      type: object
      xml:
        name: HostOption
    InputCompositionRunOptions:
      example:
        hostOptions:
        - networkInterfaces:
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          instanceTypeName: instanceTypeName
          systemRole: systemRole
          cpus: 6
          templateName: templateName
          additionalDisks:
          - createOrder: 5
            capacityInMegabytes: 5
          - createOrder: 5
            capacityInMegabytes: 5
          ram: 1
        - networkInterfaces:
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          instanceTypeName: instanceTypeName
          systemRole: systemRole
          cpus: 6
          templateName: templateName
          additionalDisks:
          - createOrder: 5
            capacityInMegabytes: 5
          - createOrder: 5
            capacityInMegabytes: 5
          ram: 1
        - networkInterfaces:
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          instanceTypeName: instanceTypeName
          systemRole: systemRole
          cpus: 6
          templateName: templateName
          additionalDisks:
          - createOrder: 5
            capacityInMegabytes: 5
          - createOrder: 5
            capacityInMegabytes: 5
          ram: 1
        - networkInterfaces:
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          instanceTypeName: instanceTypeName
          systemRole: systemRole
          cpus: 6
          templateName: templateName
          additionalDisks:
          - createOrder: 5
            capacityInMegabytes: 5
          - createOrder: 5
            capacityInMegabytes: 5
          ram: 1
        - networkInterfaces:
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          instanceTypeName: instanceTypeName
          systemRole: systemRole
          cpus: 6
          templateName: templateName
          additionalDisks:
          - createOrder: 5
            capacityInMegabytes: 5
          - createOrder: 5
            capacityInMegabytes: 5
          ram: 1
        description: description
        virtualizationRealmId: 1
        windowsDomainName: windowsDomainName
        properties:
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
        - value: value
          key: key
      properties:
        description:
          type: string
        virtualizationRealmId:
          format: int32
          minimum: 1
          type: integer
        properties:
          items:
            $ref: '#/components/schemas/InputProperty'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
        hostOptions:
          items:
            $ref: '#/components/schemas/InputCompositionHostOption'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
        windowsDomainName:
          type: string
      required:
      - virtualizationRealmId
      type: object
      xml:
        name: CompositionRunOptions
    InputDisk:
      example:
        createOrder: 5
        capacityInMegabytes: 5
      properties:
        capacityInMegabytes:
          format: int32
          type: integer
        createOrder:
          format: int32
          type: integer
      required:
      - capacityInMegabytes
      - createOrder
      type: object
      xml:
        name: disk
    InputNetworkInterface:
      example:
        macAddress: macAddress
        networkName: networkName
        networkFunction: CONS3RT
        networkIdentifier: networkIdentifier
        internalIpAddress: internalIpAddress
      properties:
        internalIpAddress:
          type: string
        macAddress:
          type: string
        networkFunction:
          enum:
          - CONS3RT
          - ADDITIONAL
          - PRIMARY
          type: string
        networkName:
          type: string
        networkIdentifier:
          type: string
      required:
      - networkFunction
      - networkIdentifier
      - networkName
      type: object
      xml:
        name: networkInterface
    InputProperty:
      example:
        value: value
        key: key
      properties:
        key:
          type: string
        value:
          type: string
      required:
      - key
      - value
      type: object
      xml:
        name: property
    FullContainerAsset:
      example:
        creator:
          id: 0
          email: email
          username: username
        metadata:
          documentation: documentation
          modifier:
            id: 0
            email: email
            username: username
          itarRestricted: true
          creationDate: 1
          version: 6
          uri: uri
          instanceLimit: 5
          cloud:
            cloudType: AwsCloud
            name: name
            id: 0
            state: ACTIVE
          modifierDate: 2
          license: license
          validated: true
          sizeInMegabytes: 7
          assetDirectory: assetDirectory
          id: 5
          properties:
          - id: 7
            value: value
            key: key
          - id: 7
            value: value
            key: key
        visibility: OWNER
        description: description
        owningProject:
          name: name
          id: 6
          itarRestricted: true
        type: DOCKER
        impactLevel: NONE
        offline: true
        ImageName: ImageName
        imageFile: imageFile
        name: name
        trustedProjects:
        - name: name
          id: 6
          itarRestricted: true
        - name: name
          id: 6
          itarRestricted: true
        id: id
        state: IN_DEVELOPMENT
        categories:
        - disruptive: true
          name: name
          id: 0
        - disruptive: true
          name: name
          id: 0
        dependentAssetCount: 0
        imageTag: imageTag
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        offline:
          type: boolean
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        creator:
          $ref: '#/components/schemas/MinimalUser'
        owningProject:
          $ref: '#/components/schemas/MinimalProject'
        trustedProjects:
          items:
            $ref: '#/components/schemas/MinimalProject'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        dependentAssetCount:
          format: int32
          type: integer
        metadata:
          $ref: '#/components/schemas/FullMetadata'
        impactLevel:
          enum:
          - NONE
          - FEDRAMP_LOW
          - FEDRAMP_MODERATE_DOD_LEVEL_2
          - FEDRAMP_HIGH_DOD_LEVEL_4
          - DOD_LEVEL_5
          - DOD_LEVEL_6
          type: string
        categories:
          items:
            $ref: '#/components/schemas/MinimalCategory'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        type:
          enum:
          - DOCKER
          - OCI
          type: string
        imageFile:
          type: string
        ImageName:
          type: string
          xml:
            name: imageName
        imageTag:
          type: string
      type: object
      xml:
        name: asset
    FullMetadata:
      example:
        documentation: documentation
        modifier:
          id: 0
          email: email
          username: username
        itarRestricted: true
        creationDate: 1
        version: 6
        uri: uri
        instanceLimit: 5
        cloud:
          cloudType: AwsCloud
          name: name
          id: 0
          state: ACTIVE
        modifierDate: 2
        license: license
        validated: true
        sizeInMegabytes: 7
        assetDirectory: assetDirectory
        id: 5
        properties:
        - id: 7
          value: value
          key: key
        - id: 7
          value: value
          key: key
      properties:
        assetDirectory:
          type: string
        version:
          format: int32
          type: integer
        cloud:
          $ref: '#/components/schemas/MinimalCloud'
        creationDate:
          format: int32
          type: integer
        documentation:
          type: string
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        instanceLimit:
          format: int32
          type: integer
        itarRestricted:
          type: boolean
        license:
          type: string
        modifier:
          $ref: '#/components/schemas/MinimalUser'
        modifierDate:
          format: int32
          type: integer
        properties:
          items:
            $ref: '#/components/schemas/Property'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        uri:
          type: string
        validated:
          type: boolean
        sizeInMegabytes:
          format: int32
          type: integer
      type: object
      xml:
        name: metadata
    MinimalContainerAsset:
      example:
        offline: true
        visibility: OWNER
        name: name
        description: description
        id: id
        state: IN_DEVELOPMENT
        type: DOCKER
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        offline:
          type: boolean
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        type:
          enum:
          - DOCKER
          - OCI
          type: string
      type: object
      xml:
        name: asset
    BasicContainerAsset:
      example:
        offline: true
        creator:
          id: 0
          email: email
          username: username
        visibility: OWNER
        name: name
        description: description
        id: id
        state: IN_DEVELOPMENT
        owningProject:
          name: name
          id: 6
          itarRestricted: true
        type: DOCKER
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        offline:
          type: boolean
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        creator:
          $ref: '#/components/schemas/MinimalUser'
        owningProject:
          $ref: '#/components/schemas/MinimalProject'
        type:
          enum:
          - DOCKER
          - OCI
          type: string
      type: object
      xml:
        name: asset
    MinimalRecurringSchedule:
      example:
        schedule: schedule
        maxIterations: 0
        endDate: 6
        timezone: timezone
        id: 0
        complete: true
        deploymentRunOptions:
          creator:
            id: 0
            email: email
            username: username
          debug: true
          endState: UNKNOWN_STATE
          description: description
          virtualizationRealmId: 4
          duration: 1
          deploymentRunName: deploymentRunName
          earliestStartTime: 5
          hostOptions:
          - gpuProfile: M10_0Q
            batchSoftwareInstall: true
            networkInterfaces:
            - macAddress: macAddress
              externalIpAddress: externalIpAddress
              networkName: networkName
              interfaceName: interfaceName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            - macAddress: macAddress
              externalIpAddress: externalIpAddress
              networkName: networkName
              interfaceName: interfaceName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            systemRole: systemRole
            cpus: 5
            additionalDisks:
            - createOrder: 9
              isBootDisk: true
              capacityInMegabytes: 7
              isAdditionalDisk: true
              id: 3
              bootDisk: true
              additionalDisk: true
            - createOrder: 9
              isBootDisk: true
              capacityInMegabytes: 7
              isAdditionalDisk: true
              id: 3
              bootDisk: true
              additionalDisk: true
            ram: 2
            gpuType: K80
          - gpuProfile: M10_0Q
            batchSoftwareInstall: true
            networkInterfaces:
            - macAddress: macAddress
              externalIpAddress: externalIpAddress
              networkName: networkName
              interfaceName: interfaceName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            - macAddress: macAddress
              externalIpAddress: externalIpAddress
              networkName: networkName
              interfaceName: interfaceName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            systemRole: systemRole
            cpus: 5
            additionalDisks:
            - createOrder: 9
              isBootDisk: true
              capacityInMegabytes: 7
              isAdditionalDisk: true
              id: 3
              bootDisk: true
              additionalDisk: true
            - createOrder: 9
              isBootDisk: true
              capacityInMegabytes: 7
              isAdditionalDisk: true
              id: 3
              bootDisk: true
              additionalDisk: true
            ram: 2
            gpuType: K80
          deploymentToSubmit: 6
          id: 2
          locked: true
          properties:
          - id: 7
            value: value
            key: key
          - id: 7
            value: value
            key: key
          retainOnError: true
          rootPassword: rootPassword
          endExisting: true
        remainingIterations: 5
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        complete:
          type: boolean
        endDate:
          format: int32
          type: integer
        maxIterations:
          format: int32
          minimum: 0
          type: integer
        deploymentRunOptions:
          $ref: '#/components/schemas/MinimalDeploymentRunOptions'
        remainingIterations:
          format: int32
          type: integer
        schedule:
          type: string
        timezone:
          type: string
      required:
      - deploymentRunOptions
      - schedule
      - timezone
      type: object
      xml:
        name: recurringSchedule
    DeploymentRunOptions:
      properties:
        debug:
          type: boolean
        deploymentRunName:
          type: string
        deploymentToSubmit:
          format: int32
          type: integer
        description:
          type: string
        endState:
          enum:
          - UNKNOWN_STATE
          - SYSTEMS_BUILT
          - SCENARIO_BUILT
          - TESTS_EXECUTED_RESOURCES_RELEASED
          - TESTS_EXECUTED_RESOURCES_RESERVED
          type: string
        earliestStartTime:
          format: int32
          type: integer
        endExisting:
          type: boolean
        hostOptions:
          items:
            $ref: '#/components/schemas/HostOption'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        locked:
          type: boolean
        password:
          type: string
        powerSchedule:
          $ref: '#/components/schemas/PowerSchedule'
        virtualizationRealmId:
          format: int32
          minimum: 1
          type: integer
        properties:
          items:
            $ref: '#/components/schemas/Property'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
        quickBuildCleanupOverridden:
          type: boolean
        duration:
          format: int64
          maximum: 153722867280912
          type: integer
        endDate:
          format: int32
          type: integer
        retainOnError:
          type: boolean
        taskGroup:
          type: string
        username:
          type: string
        virtRealmBinding:
          $ref: '#/components/schemas/InputVirtualizationRealmBinding'
        windowsDomainName:
          type: string
      required:
      - password
      - username
      type: object
      xml:
        name: deploymentRunOptions
    InputHostBinding:
      example:
        systemRole: systemRole
        templateName: templateName
        instanceType: instanceType
      properties:
        systemRole:
          type: string
        templateName:
          type: string
        instanceType:
          description: Required for Azure and AWS EC2 Cloudspaces
          type: string
      required:
      - systemRole
      - templateName
      type: object
      xml:
        name: TemplateBinding
    InputMinimalVirtualizationRealm:
      example:
        id: 6
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
      required:
      - id
      type: object
      xml:
        name: virtualizationRealm
    InputVirtualizationRealmBinding:
      example:
        templateBindings:
        - systemRole: systemRole
          templateName: templateName
          instanceType: instanceType
        - systemRole: systemRole
          templateName: templateName
          instanceType: instanceType
        - systemRole: systemRole
          templateName: templateName
          instanceType: instanceType
        - systemRole: systemRole
          templateName: templateName
          instanceType: instanceType
        - systemRole: systemRole
          templateName: templateName
          instanceType: instanceType
        virtualizationRealm:
          id: 6
      properties:
        virtualizationRealm:
          $ref: '#/components/schemas/InputMinimalVirtualizationRealm'
        templateBindings:
          items:
            $ref: '#/components/schemas/InputHostBinding'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      required:
      - templateBindings
      - virtualizationRealm
      type: object
    RecurringSchedule:
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        complete:
          type: boolean
        endDate:
          format: int32
          type: integer
        maxIterations:
          format: int32
          minimum: 0
          type: integer
        deploymentRunOptions:
          $ref: '#/components/schemas/DeploymentRunOptions'
        remainingIterations:
          format: int32
          type: integer
        schedule:
          type: string
        timezone:
          type: string
      required:
      - deploymentRunOptions
      - schedule
      - timezone
      type: object
      xml:
        name: recurringSchedule
    InputDeploymentRunOptions:
      example:
        powerSchedule:
          mode: NONE
          weekdayEndTimeHour: 21
          weekdayStartTimeMinutes: 24
          weekdayStartTimeHour: 4
          weekendEndTimeMinutes: 7
          weekdayEndTimeMinutes: 21
          weekendStartTimeMinutes: 8
          weekendEndTimeHour: 16
          weekendStartTimeHour: 2
        debug: true
        endDate: 1
        endState: UNKNOWN_STATE
        description: description
        virtualizationRealmId: 1
        windowsDomainName: windowsDomainName
        duration: 5
        deploymentRunName: deploymentRunName
        password: password
        earliestStartTime: 5
        hostOptions:
        - networkInterfaces:
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          systemRole: systemRole
          cpus: 2
          additionalDisks:
          - createOrder: 5
            capacityInMegabytes: 5
          - createOrder: 5
            capacityInMegabytes: 5
          ram: 7
        - networkInterfaces:
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          systemRole: systemRole
          cpus: 2
          additionalDisks:
          - createOrder: 5
            capacityInMegabytes: 5
          - createOrder: 5
            capacityInMegabytes: 5
          ram: 7
        id: 7
        locked: true
        virtRealmBinding:
          templateBindings:
          - systemRole: systemRole
            templateName: templateName
            instanceType: instanceType
          - systemRole: systemRole
            templateName: templateName
            instanceType: instanceType
          - systemRole: systemRole
            templateName: templateName
            instanceType: instanceType
          - systemRole: systemRole
            templateName: templateName
            instanceType: instanceType
          - systemRole: systemRole
            templateName: templateName
            instanceType: instanceType
          virtualizationRealm:
            id: 6
        retainOnError: true
        properties:
        - value: value
          key: key
        - value: value
          key: key
        username: username
        endExisting: true
      properties:
        deploymentRunName:
          type: string
        endState:
          enum:
          - UNKNOWN_STATE
          - SYSTEMS_BUILT
          - SCENARIO_BUILT
          - TESTS_EXECUTED_RESOURCES_RELEASED
          - TESTS_EXECUTED_RESOURCES_RESERVED
          type: string
        description:
          type: string
        virtualizationRealmId:
          format: int32
          type: integer
        locked:
          type: boolean
        retainOnError:
          type: boolean
        username:
          type: string
        password:
          type: string
        earliestStartTime:
          format: int32
          type: integer
        endExisting:
          type: boolean
        duration:
          format: int64
          type: integer
        properties:
          items:
            $ref: '#/components/schemas/InputProperty'
          type: array
          uniqueItems: true
        hostOptions:
          items:
            $ref: '#/components/schemas/InputHostOption'
          type: array
          uniqueItems: true
        powerSchedule:
          $ref: '#/components/schemas/PowerSchedule'
        virtRealmBinding:
          $ref: '#/components/schemas/InputVirtualizationRealmBinding'
        id:
          format: int32
          type: integer
        debug:
          type: boolean
        endDate:
          format: int32
          type: integer
        windowsDomainName:
          type: string
      required:
      - endState
      - password
      - username
      type: object
      xml:
        name: deploymentRunOptions
    InputHostOption:
      example:
        networkInterfaces:
        - macAddress: macAddress
          networkName: networkName
          networkFunction: CONS3RT
          networkIdentifier: networkIdentifier
          internalIpAddress: internalIpAddress
        - macAddress: macAddress
          networkName: networkName
          networkFunction: CONS3RT
          networkIdentifier: networkIdentifier
          internalIpAddress: internalIpAddress
        systemRole: systemRole
        cpus: 2
        additionalDisks:
        - createOrder: 5
          capacityInMegabytes: 5
        - createOrder: 5
          capacityInMegabytes: 5
        ram: 7
      properties:
        systemRole:
          type: string
        cpus:
          format: int32
          type: integer
        ram:
          format: int32
          type: integer
        additionalDisks:
          items:
            $ref: '#/components/schemas/InputDisk'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        networkInterfaces:
          items:
            $ref: '#/components/schemas/InputNetworkInterface'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      required:
      - systemRole
      type: object
      xml:
        name: HostOption
    InputRecurringSchedule:
      example:
        schedule: schedule
        maxIterations: 0
        endDate: 6
        timezone: timezone
        deploymentRunOptions:
          powerSchedule:
            mode: NONE
            weekdayEndTimeHour: 21
            weekdayStartTimeMinutes: 24
            weekdayStartTimeHour: 4
            weekendEndTimeMinutes: 7
            weekdayEndTimeMinutes: 21
            weekendStartTimeMinutes: 8
            weekendEndTimeHour: 16
            weekendStartTimeHour: 2
          debug: true
          endDate: 1
          endState: UNKNOWN_STATE
          description: description
          virtualizationRealmId: 1
          windowsDomainName: windowsDomainName
          duration: 5
          deploymentRunName: deploymentRunName
          password: password
          earliestStartTime: 5
          hostOptions:
          - networkInterfaces:
            - macAddress: macAddress
              networkName: networkName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            - macAddress: macAddress
              networkName: networkName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            systemRole: systemRole
            cpus: 2
            additionalDisks:
            - createOrder: 5
              capacityInMegabytes: 5
            - createOrder: 5
              capacityInMegabytes: 5
            ram: 7
          - networkInterfaces:
            - macAddress: macAddress
              networkName: networkName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            - macAddress: macAddress
              networkName: networkName
              networkFunction: CONS3RT
              networkIdentifier: networkIdentifier
              internalIpAddress: internalIpAddress
            systemRole: systemRole
            cpus: 2
            additionalDisks:
            - createOrder: 5
              capacityInMegabytes: 5
            - createOrder: 5
              capacityInMegabytes: 5
            ram: 7
          id: 7
          locked: true
          virtRealmBinding:
            templateBindings:
            - systemRole: systemRole
              templateName: templateName
              instanceType: instanceType
            - systemRole: systemRole
              templateName: templateName
              instanceType: instanceType
            - systemRole: systemRole
              templateName: templateName
              instanceType: instanceType
            - systemRole: systemRole
              templateName: templateName
              instanceType: instanceType
            - systemRole: systemRole
              templateName: templateName
              instanceType: instanceType
            virtualizationRealm:
              id: 6
          retainOnError: true
          properties:
          - value: value
            key: key
          - value: value
            key: key
          username: username
          endExisting: true
      properties:
        timezone:
          type: string
        schedule:
          type: string
        maxIterations:
          format: int32
          minimum: 0
          type: integer
        endDate:
          format: int32
          type: integer
        deploymentRunOptions:
          $ref: '#/components/schemas/InputDeploymentRunOptions'
      required:
      - deploymentRunOptions
      - schedule
      - timezone
      type: object
    Deployment:
      properties:
        recurringSchedules:
          items:
            $ref: '#/components/schemas/RecurringSchedule'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        id:
          type: string
          xml:
            attribute: true
        trustedProjects:
          items:
            $ref: '#/components/schemas/Project'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        creator:
          $ref: '#/components/schemas/User'
        dependentAssetCount:
          format: int32
          type: integer
        description:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        name:
          type: string
        offline:
          type: boolean
        owningProject:
          $ref: '#/components/schemas/Project'
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        impactLevel:
          enum:
          - NONE
          - FEDRAMP_LOW
          - FEDRAMP_MODERATE_DOD_LEVEL_2
          - FEDRAMP_HIGH_DOD_LEVEL_4
          - DOD_LEVEL_5
          - DOD_LEVEL_6
          type: string
        categories:
          items:
            $ref: '#/components/schemas/Category'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        scenarios:
          items:
            $ref: '#/components/schemas/DeploymentScenario'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        testBundles:
          items:
            $ref: '#/components/schemas/TestBundle'
          maxItems: 1
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        deploymentHosts:
          items:
            $ref: '#/components/schemas/DeploymentHost'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      type: object
      xml:
        name: deployment
    DeploymentHost:
      properties:
        deployment:
          $ref: '#/components/schemas/Deployment'
        scenario:
          $ref: '#/components/schemas/Scenario'
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        buildOrder:
          format: int32
          type: integer
        systemModule:
          $ref: '#/components/schemas/SystemModule'
        systemRole:
          type: string
      required:
      - systemRole
      type: object
      xml:
        name: deploymentHost
    DeploymentScenario:
      properties:
        id:
          type: string
          xml:
            attribute: true
        trustedProjects:
          items:
            $ref: '#/components/schemas/Project'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        creator:
          $ref: '#/components/schemas/User'
        dependentAssetCount:
          format: int32
          type: integer
        description:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        name:
          type: string
        offline:
          type: boolean
        owningProject:
          $ref: '#/components/schemas/Project'
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        impactLevel:
          enum:
          - NONE
          - FEDRAMP_LOW
          - FEDRAMP_MODERATE_DOD_LEVEL_2
          - FEDRAMP_HIGH_DOD_LEVEL_4
          - DOD_LEVEL_5
          - DOD_LEVEL_6
          type: string
        categories:
          items:
            $ref: '#/components/schemas/Category'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        scenarioHosts:
          items:
            $ref: '#/components/schemas/ScenarioHost'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        prepareScenarioConfiguration:
          $ref: '#/components/schemas/Configuration'
        teardownScenarioConfiguration:
          $ref: '#/components/schemas/Configuration'
        scenarioBuildOrder:
          format: int32
          type: integer
      type: object
      xml:
        name: deploymentScenario
    TestAsset:
      properties:
        id:
          type: string
          xml:
            attribute: true
        trustedProjects:
          items:
            $ref: '#/components/schemas/Project'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        creator:
          $ref: '#/components/schemas/User'
        dependentAssetCount:
          format: int32
          type: integer
        description:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        name:
          type: string
        offline:
          type: boolean
        owningProject:
          $ref: '#/components/schemas/Project'
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        impactLevel:
          enum:
          - NONE
          - FEDRAMP_LOW
          - FEDRAMP_MODERATE_DOD_LEVEL_2
          - FEDRAMP_HIGH_DOD_LEVEL_4
          - DOD_LEVEL_5
          - DOD_LEVEL_6
          type: string
        categories:
          items:
            $ref: '#/components/schemas/Category'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        type:
          enum:
          - UNKNOWN
          - LISA
          - SOAPUI
          - SELENIUM
          - RETINA
          - NESSUS
          - CERTIFY
          - SCRIPT
          - WEBEXPLOITSUITE
          - FORTIFY
          - SONAR
          - POWERSHELL
          - MOCK
          type: string
      type: object
      xml:
        name: testAsset
    TestBundle:
      properties:
        id:
          type: string
          xml:
            attribute: true
        trustedProjects:
          items:
            $ref: '#/components/schemas/Project'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        creator:
          $ref: '#/components/schemas/User'
        dependentAssetCount:
          format: int32
          type: integer
        description:
          type: string
        metadata:
          $ref: '#/components/schemas/Metadata'
        name:
          type: string
        offline:
          type: boolean
        owningProject:
          $ref: '#/components/schemas/Project'
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        impactLevel:
          enum:
          - NONE
          - FEDRAMP_LOW
          - FEDRAMP_MODERATE_DOD_LEVEL_2
          - FEDRAMP_HIGH_DOD_LEVEL_4
          - DOD_LEVEL_5
          - DOD_LEVEL_6
          type: string
        categories:
          items:
            $ref: '#/components/schemas/Category'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        testAsset:
          $ref: '#/components/schemas/TestAsset'
        testToolPoolType:
          enum:
          - COMMUNITY_POOL
          - PROJECT_POOL
          - DEPLOYMENT_RUN_ON_DEMAND
          type: string
      required:
      - testAsset
      - testToolPoolType
      type: object
      xml:
        name: testBundle
    InputAbstractComponent:
      discriminator:
        propertyName: subtype
      properties:
        asset:
          $ref: '#/components/schemas/InputAsset'
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        loadOrder:
          format: int32
          minimum: 0
          type: integer
        subtype:
          type: string
      required:
      - asset
      - subtype
      type: object
      xml:
        name: abstractComponent
    InputAsset:
      example:
        id: 0
      properties:
        id:
          format: int32
          type: integer
      required:
      - id
      type: object
      xml:
        name: asset
    InputConfiguration:
      example:
        script: script
      properties:
        script:
          type: string
      required:
      - script
      type: object
      xml:
        name: configuration
    InputContainerComponent:
      allOf:
      - $ref: '#/components/schemas/InputAbstractComponent'
      - $ref: '#/components/schemas/InputContainerComponent_allOf'
      required:
      - asset
      - configuration
      type: object
      xml:
        name: containerComponent
    InputContainerConfiguration:
      properties:
        id:
          format: int32
          type: integer
        containerName:
          type: string
        containerRuntime:
          enum:
          - DOCKER
          - PODMAN
          type: string
        environmentMap:
          additionalProperties:
            type: string
          type: object
        mounts:
          items:
            $ref: '#/components/schemas/ContainerMount'
          type: array
          uniqueItems: true
        portMappings:
          items:
            $ref: '#/components/schemas/ContainerPortMapping'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        runArguments:
          type: string
        runDisabled:
          type: boolean
      required:
      - containerName
      type: object
      xml:
        name: containerConfiguration
    InputDeployment:
      example:
        metadata:
          properties:
          - value: value
            key: key
          - value: value
            key: key
        name: name
        scenarios:
        - prepareScenarioConfiguration:
            script: script
          scenarioHosts:
          - buildOrder: 6
            systemRole: systemRole
            configureScenarioConfiguration:
              script: script
            teardownScenarioConfiguration:
              script: script
            systemModule:
              subtype: subtype
            master: true
          - buildOrder: 6
            systemRole: systemRole
            configureScenarioConfiguration:
              script: script
            teardownScenarioConfiguration:
              script: script
            systemModule:
              subtype: subtype
            master: true
          name: name
          id: 0
          scenarioBuildOrder: 1
          teardownScenarioConfiguration:
            script: script
        - prepareScenarioConfiguration:
            script: script
          scenarioHosts:
          - buildOrder: 6
            systemRole: systemRole
            configureScenarioConfiguration:
              script: script
            teardownScenarioConfiguration:
              script: script
            systemModule:
              subtype: subtype
            master: true
          - buildOrder: 6
            systemRole: systemRole
            configureScenarioConfiguration:
              script: script
            teardownScenarioConfiguration:
              script: script
            systemModule:
              subtype: subtype
            master: true
          name: name
          id: 0
          scenarioBuildOrder: 1
          teardownScenarioConfiguration:
            script: script
        testBundles:
        - testToolPoolType: DEPLOYMENT_RUN_ON_DEMAND
          testAsset:
            id: 5
        - testToolPoolType: DEPLOYMENT_RUN_ON_DEMAND
          testAsset:
            id: 5
      properties:
        name:
          type: string
        metadata:
          $ref: '#/components/schemas/InputMetadata'
        scenarios:
          items:
            $ref: '#/components/schemas/InputScenarioFull'
          type: array
          uniqueItems: true
        testBundles:
          items:
            $ref: '#/components/schemas/InputTestBundle'
          type: array
          uniqueItems: true
      type: object
      xml:
        name: deployment
    InputDevice:
      allOf:
      - $ref: '#/components/schemas/InputSystemModuleFull'
      - $ref: '#/components/schemas/InputDevice_allOf'
      required:
      - id
      type: object
      xml:
        name: systemModule
    InputMetadata:
      example:
        properties:
        - value: value
          key: key
        - value: value
          key: key
      properties:
        properties:
          items:
            $ref: '#/components/schemas/InputProperty'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      required:
      - properties
      type: object
      xml:
        name: metadata
    InputPhysicalHostFull:
      allOf:
      - $ref: '#/components/schemas/InputSystemModuleFull'
      - $ref: '#/components/schemas/InputPhysicalHostFull_allOf'
      type: object
      xml:
        name: physicalHost
    InputPhysicalMachine:
      properties:
        id:
          format: int32
          type: integer
      type: object
      xml:
        name: physicalMachine
    InputScenarioFull:
      example:
        prepareScenarioConfiguration:
          script: script
        scenarioHosts:
        - buildOrder: 6
          systemRole: systemRole
          configureScenarioConfiguration:
            script: script
          teardownScenarioConfiguration:
            script: script
          systemModule:
            subtype: subtype
          master: true
        - buildOrder: 6
          systemRole: systemRole
          configureScenarioConfiguration:
            script: script
          teardownScenarioConfiguration:
            script: script
          systemModule:
            subtype: subtype
          master: true
        name: name
        id: 0
        scenarioBuildOrder: 1
        teardownScenarioConfiguration:
          script: script
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        scenarioHosts:
          items:
            $ref: '#/components/schemas/InputScenarioHost'
          type: array
          uniqueItems: true
        scenarioBuildOrder:
          format: int32
          type: integer
        prepareScenarioConfiguration:
          $ref: '#/components/schemas/InputConfiguration'
        teardownScenarioConfiguration:
          $ref: '#/components/schemas/InputConfiguration'
      type: object
      xml:
        name: scenario
    InputScenarioHost:
      example:
        buildOrder: 6
        systemRole: systemRole
        configureScenarioConfiguration:
          script: script
        teardownScenarioConfiguration:
          script: script
        systemModule:
          subtype: subtype
        master: true
      properties:
        buildOrder:
          format: int32
          type: integer
        systemRole:
          type: string
        systemModule:
          $ref: '#/components/schemas/InputSystemModuleFull'
        master:
          type: boolean
        configureScenarioConfiguration:
          $ref: '#/components/schemas/InputConfiguration'
        teardownScenarioConfiguration:
          $ref: '#/components/schemas/InputConfiguration'
      required:
      - systemRole
      type: object
      xml:
        name: scenarioHost
    InputSoftwareComponent:
      example:
        rebootRequired: true
        rebootDelay: 6
        loadOrder: 0
        id: 1
        asset:
          id: 0
      properties:
        asset:
          $ref: '#/components/schemas/InputAsset'
        rebootDelay:
          format: int32
          type: integer
        rebootRequired:
          type: boolean
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        loadOrder:
          format: int32
          minimum: 0
          type: integer
      required:
      - asset
      type: object
      xml:
        name: softwareComponent
    InputSystemModuleFull:
      discriminator:
        propertyName: subtype
      example:
        subtype: subtype
      properties:
        subtype:
          type: string
      required:
      - subtype
      type: object
      xml:
        name: systemModule
    InputTemplateProfile:
      example:
        minBootDiskCapacity: 155115
        remoteAccessRequired: true
        virtRealmTemplateName: virtRealmTemplateName
        minRam: 6
        virtRealmId: 5
        additionalDisks:
        - createOrder: 5
          capacityInMegabytes: 5
        - createOrder: 5
          capacityInMegabytes: 5
        minNumCpus: 0
        requiresNestedVirtualization: true
        vgpuRequired: true
        operatingSystem: AMAZON_LINUX_2_LATEST_X64
      properties:
        virtRealmTemplateName:
          type: string
        operatingSystem:
          enum:
          - AMAZON_LINUX_2_LATEST_X64
          - AMAZON_LINUX_LATEST_X64
          - CENTOS_6_X64
          - CENTOS_6_X86
          - CENTOS_7_X64
          - CENTOS_8_X64
          - CORE_OS_1221_X64
          - F5_BIGIP_X64
          - FEDORA_23_X64
          - FORTISIEM
          - GENERIC_LINUX_X64
          - GENERIC_WINDOWS_X64
          - KALI_ROLLING_X64
          - ORACLE_LINUX_6_X64
          - ORACLE_LINUX_7_X64
          - ORACLE_LINUX_8_X64
          - OS_X_10
          - OS_X_11
          - PALO_ALTO_NETWORKS_PAN_OS_X64
          - RASPBIAN
          - RHEL_5_X64
          - RHEL_5_X86
          - RHEL_6_X64
          - RHEL_6_X86
          - RHEL_7_ATOMIC_HOST
          - RHEL_7_PPCLE
          - RHEL_7_X64
          - RHEL_8_X64
          - SOLARIS_11_X64
          - UBUNTU_12_X64
          - UBUNTU_14_X64
          - UBUNTU_16_X64
          - UBUNTU_18_X64
          - UBUNTU_20_X64
          - UBUNTU_CORE
          - VYOS_1_1_X64
          - VYOS_1_2_X64
          - VYOS_1_3_X64
          - VYOS_ROLLING_X64
          - WINDOWS_10_X64
          - WINDOWS_7_X64
          - WINDOWS_7_X86
          - WINDOWS_8_X64
          - WINDOWS_SERVER_2008_R2_X64
          - WINDOWS_SERVER_2008_X64
          - WINDOWS_SERVER_2012_R2_X64
          - WINDOWS_SERVER_2012_X64
          - WINDOWS_SERVER_2016_X64
          - WINDOWS_SERVER_2019_X64
          - WINDOWS_SERVER_2019_CORE_X64
          - WINDOWS_XP_X86
          type: string
        minNumCpus:
          format: int32
          type: integer
        minRam:
          format: int32
          type: integer
        vgpuRequired:
          type: boolean
        requiresNestedVirtualization:
          type: boolean
        additionalDisks:
          items:
            $ref: '#/components/schemas/InputDisk'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        minBootDiskCapacity:
          format: int32
          maximum: 1000000
          minimum: 10000
          type: integer
        remoteAccessRequired:
          type: boolean
        virtRealmId:
          format: int32
          type: integer
      required:
      - minNumCpus
      - minRam
      type: object
      xml:
        name: templateProfile
    InputTestAsset:
      example:
        id: 5
      properties:
        id:
          format: int32
          type: integer
      type: object
      xml:
        name: testAsset
    InputTestBundle:
      example:
        testToolPoolType: DEPLOYMENT_RUN_ON_DEMAND
        testAsset:
          id: 5
      properties:
        testAsset:
          $ref: '#/components/schemas/InputTestAsset'
        testToolPoolType:
          enum:
          - DEPLOYMENT_RUN_ON_DEMAND
          type: string
      required:
      - testToolPoolType
      type: object
      xml:
        name: testBundle
    InputVirtualHostFull:
      allOf:
      - $ref: '#/components/schemas/InputSystemModuleFull'
      - $ref: '#/components/schemas/InputVirtualHostFull_allOf'
      type: object
      xml:
        name: virtualHost
    MinimalNetwork:
      example:
        identifier: identifier
        isolated: true
        name: name
        cidr: cidr
        id: 0
        networkFunction: CONS3RT
        boundaryIpAddress: boundaryIpAddress
        gateway: gateway
      properties:
        id:
          format: int32
          type: integer
        isolated:
          type: boolean
        boundaryIpAddress:
          type: string
        cidr:
          type: string
        gateway:
          type: string
        identifier:
          type: string
        networkFunction:
          enum:
          - CONS3RT
          - ADDITIONAL
          - PRIMARY
          type: string
        name:
          type: string
      type: object
      xml:
        name: network
    HostBinding:
      example:
        systemRole: systemRole
        virtualizationRealmTemplates:
        - template:
            virtRealmTemplateName: virtRealmTemplateName
            displayName: displayName
            virtRealmId: 6
            templateRegistration:
              templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
              offline: true
              id: 1
            id: 0
            operatingSystem: AMAZON_LINUX_2_LATEST_X64
          bestMatches:
          - family: family
            type: type
          - family: family
            type: type
          matches:
          - instanceTypes:
            - family: family
              type: type
            - family: family
              type: type
            family: family
          - instanceTypes:
            - family: family
              type: type
            - family: family
              type: type
            family: family
      properties:
        virtualizationRealmTemplates:
          items:
            $ref: '#/components/schemas/TemplateBinding'
          maxItems: 1
          minItems: 1
          type: array
          uniqueItems: true
        systemRole:
          type: string
      required:
      - systemRole
      - virtualizationRealmTemplates
      type: object
      xml:
        name: TemplateBinding
    InstanceTypeFamily:
      example:
        instanceTypes:
        - family: family
          type: type
        - family: family
          type: type
        family: family
      properties:
        family:
          type: string
        instanceTypes:
          items:
            $ref: '#/components/schemas/InstanceType'
          type: array
      type: object
    MinimalCons3rtTemplateData:
      example:
        virtRealmTemplateName: virtRealmTemplateName
        displayName: displayName
        virtRealmId: 6
        templateRegistration:
          templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          offline: true
          id: 1
        id: 0
        operatingSystem: AMAZON_LINUX_2_LATEST_X64
      properties:
        id:
          format: int32
          type: integer
        displayName:
          type: string
        operatingSystem:
          enum:
          - AMAZON_LINUX_2_LATEST_X64
          - AMAZON_LINUX_LATEST_X64
          - CENTOS_6_X64
          - CENTOS_6_X86
          - CENTOS_7_X64
          - CENTOS_8_X64
          - CORE_OS_1221_X64
          - F5_BIGIP_X64
          - FEDORA_23_X64
          - FORTISIEM
          - GENERIC_LINUX_X64
          - GENERIC_WINDOWS_X64
          - KALI_ROLLING_X64
          - ORACLE_LINUX_6_X64
          - ORACLE_LINUX_7_X64
          - ORACLE_LINUX_8_X64
          - OS_X_10
          - OS_X_11
          - PALO_ALTO_NETWORKS_PAN_OS_X64
          - RASPBIAN
          - RHEL_5_X64
          - RHEL_5_X86
          - RHEL_6_X64
          - RHEL_6_X86
          - RHEL_7_ATOMIC_HOST
          - RHEL_7_PPCLE
          - RHEL_7_X64
          - RHEL_8_X64
          - SOLARIS_11_X64
          - UBUNTU_12_X64
          - UBUNTU_14_X64
          - UBUNTU_16_X64
          - UBUNTU_18_X64
          - UBUNTU_20_X64
          - UBUNTU_CORE
          - VYOS_1_1_X64
          - VYOS_1_2_X64
          - VYOS_1_3_X64
          - VYOS_ROLLING_X64
          - WINDOWS_10_X64
          - WINDOWS_7_X64
          - WINDOWS_7_X86
          - WINDOWS_8_X64
          - WINDOWS_SERVER_2008_R2_X64
          - WINDOWS_SERVER_2008_X64
          - WINDOWS_SERVER_2012_R2_X64
          - WINDOWS_SERVER_2012_X64
          - WINDOWS_SERVER_2016_X64
          - WINDOWS_SERVER_2019_X64
          - WINDOWS_SERVER_2019_CORE_X64
          - WINDOWS_XP_X86
          type: string
        virtRealmId:
          format: int32
          type: integer
        virtRealmTemplateName:
          type: string
        templateRegistration:
          $ref: '#/components/schemas/MinimalTemplateRegistration'
      required:
      - virtRealmTemplateName
      type: object
      xml:
        name: cons3rtTemplateData
    MinimalTemplateRegistration:
      example:
        templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        offline: true
        id: 1
      properties:
        id:
          format: int32
          type: integer
        templateUuid:
          format: uuid
          type: string
        templateData:
          $ref: '#/components/schemas/MinimalCons3rtTemplateData'
        offline:
          type: boolean
      type: object
      xml:
        name: templateRegistration
    TemplateBinding:
      example:
        template:
          virtRealmTemplateName: virtRealmTemplateName
          displayName: displayName
          virtRealmId: 6
          templateRegistration:
            templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            offline: true
            id: 1
          id: 0
          operatingSystem: AMAZON_LINUX_2_LATEST_X64
        bestMatches:
        - family: family
          type: type
        - family: family
          type: type
        matches:
        - instanceTypes:
          - family: family
            type: type
          - family: family
            type: type
          family: family
        - instanceTypes:
          - family: family
            type: type
          - family: family
            type: type
          family: family
      properties:
        template:
          $ref: '#/components/schemas/MinimalCons3rtTemplateData'
        bestMatches:
          items:
            $ref: '#/components/schemas/InstanceType'
          type: array
        matches:
          items:
            $ref: '#/components/schemas/InstanceTypeFamily'
          type: array
      type: object
    VirtualizationRealmBinding:
      example:
        templateBindings:
        - systemRole: systemRole
          virtualizationRealmTemplates:
          - template:
              virtRealmTemplateName: virtRealmTemplateName
              displayName: displayName
              virtRealmId: 6
              templateRegistration:
                templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                offline: true
                id: 1
              id: 0
              operatingSystem: AMAZON_LINUX_2_LATEST_X64
            bestMatches:
            - family: family
              type: type
            - family: family
              type: type
            matches:
            - instanceTypes:
              - family: family
                type: type
              - family: family
                type: type
              family: family
            - instanceTypes:
              - family: family
                type: type
              - family: family
                type: type
              family: family
        - systemRole: systemRole
          virtualizationRealmTemplates:
          - template:
              virtRealmTemplateName: virtRealmTemplateName
              displayName: displayName
              virtRealmId: 6
              templateRegistration:
                templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                offline: true
                id: 1
              id: 0
              operatingSystem: AMAZON_LINUX_2_LATEST_X64
            bestMatches:
            - family: family
              type: type
            - family: family
              type: type
            matches:
            - instanceTypes:
              - family: family
                type: type
              - family: family
                type: type
              family: family
            - instanceTypes:
              - family: family
                type: type
              - family: family
                type: type
              family: family
        - systemRole: systemRole
          virtualizationRealmTemplates:
          - template:
              virtRealmTemplateName: virtRealmTemplateName
              displayName: displayName
              virtRealmId: 6
              templateRegistration:
                templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                offline: true
                id: 1
              id: 0
              operatingSystem: AMAZON_LINUX_2_LATEST_X64
            bestMatches:
            - family: family
              type: type
            - family: family
              type: type
            matches:
            - instanceTypes:
              - family: family
                type: type
              - family: family
                type: type
              family: family
            - instanceTypes:
              - family: family
                type: type
              - family: family
                type: type
              family: family
        - systemRole: systemRole
          virtualizationRealmTemplates:
          - template:
              virtRealmTemplateName: virtRealmTemplateName
              displayName: displayName
              virtRealmId: 6
              templateRegistration:
                templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                offline: true
                id: 1
              id: 0
              operatingSystem: AMAZON_LINUX_2_LATEST_X64
            bestMatches:
            - family: family
              type: type
            - family: family
              type: type
            matches:
            - instanceTypes:
              - family: family
                type: type
              - family: family
                type: type
              family: family
            - instanceTypes:
              - family: family
                type: type
              - family: family
                type: type
              family: family
        - systemRole: systemRole
          virtualizationRealmTemplates:
          - template:
              virtRealmTemplateName: virtRealmTemplateName
              displayName: displayName
              virtRealmId: 6
              templateRegistration:
                templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
                offline: true
                id: 1
              id: 0
              operatingSystem: AMAZON_LINUX_2_LATEST_X64
            bestMatches:
            - family: family
              type: type
            - family: family
              type: type
            matches:
            - instanceTypes:
              - family: family
                type: type
              - family: family
                type: type
              family: family
            - instanceTypes:
              - family: family
                type: type
              - family: family
                type: type
              family: family
        virtualizationRealm:
          name: name
          virtualizationRealmType: Amazon
          id: 2
          state: ACTIVE
      properties:
        virtualizationRealm:
          $ref: '#/components/schemas/MinimalVirtualizationRealm'
        templateBindings:
          items:
            $ref: '#/components/schemas/HostBinding'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      required:
      - templateBindings
      - virtualizationRealm
      type: object
      xml:
        name: VirtualizationRealmBinding
    DeploymentRunOptionsForBindings:
      properties:
        deploymentToSubmit:
          format: int32
          type: integer
        hostOptions:
          items:
            $ref: '#/components/schemas/HostOption'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
        virtualizationRealmId:
          format: int32
          minimum: 1
          type: integer
      type: object
      xml:
        name: deploymentRunOptionsForBindings
    InputDeploymentRunOptionsForBindings:
      example:
        hostOptions:
        - networkInterfaces:
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          systemRole: systemRole
          cpus: 2
          additionalDisks:
          - createOrder: 5
            capacityInMegabytes: 5
          - createOrder: 5
            capacityInMegabytes: 5
          ram: 7
        - networkInterfaces:
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          systemRole: systemRole
          cpus: 2
          additionalDisks:
          - createOrder: 5
            capacityInMegabytes: 5
          - createOrder: 5
            capacityInMegabytes: 5
          ram: 7
        - networkInterfaces:
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          systemRole: systemRole
          cpus: 2
          additionalDisks:
          - createOrder: 5
            capacityInMegabytes: 5
          - createOrder: 5
            capacityInMegabytes: 5
          ram: 7
        - networkInterfaces:
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          systemRole: systemRole
          cpus: 2
          additionalDisks:
          - createOrder: 5
            capacityInMegabytes: 5
          - createOrder: 5
            capacityInMegabytes: 5
          ram: 7
        - networkInterfaces:
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          - macAddress: macAddress
            networkName: networkName
            networkFunction: CONS3RT
            networkIdentifier: networkIdentifier
            internalIpAddress: internalIpAddress
          systemRole: systemRole
          cpus: 2
          additionalDisks:
          - createOrder: 5
            capacityInMegabytes: 5
          - createOrder: 5
            capacityInMegabytes: 5
          ram: 7
        virtualizationRealmId: virtualizationRealmId
      properties:
        virtualizationRealmId:
          type: string
        hostOptions:
          items:
            $ref: '#/components/schemas/InputHostOption'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      type: object
      xml:
        name: deploymentRunOptions
    SubmitDeploymentRunRequestReturnType:
      example:
        message: message
        deploymentRunId: 0
      properties:
        deploymentRunId:
          format: int32
          type: integer
        message:
          type: string
      type: object
      xml:
        name: SubmitDeploymentRunRequestReturnType
    FullDeployment:
      allOf:
      - $ref: '#/components/schemas/FullAsset'
      - $ref: '#/components/schemas/FullDeployment_allOf'
      type: object
      xml:
        name: deployment
    FullDisk:
      properties:
        createOrder:
          format: int32
          type: integer
        capacityInMegabytes:
          format: int32
          type: integer
        fileSystemType:
          type: string
        mountPoint:
          type: string
        name:
          type: string
        id:
          format: int32
          type: integer
        isAdditionalDisk:
          type: boolean
        isBootDisk:
          type: boolean
      type: object
      xml:
        name: disk
    GeneralScenario:
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        offline:
          type: boolean
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        scenarioBuildOrder:
          format: int32
          type: integer
        scenarioHosts:
          items:
            $ref: '#/components/schemas/MinimalScenarioHost'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        prepareScenarioConfiguration:
          $ref: '#/components/schemas/MinimalConfiguration'
        teardownScenarioConfiguration:
          $ref: '#/components/schemas/MinimalConfiguration'
      type: object
      xml:
        name: scenario
    MinimalAppliance:
      allOf:
      - $ref: '#/components/schemas/MinimalSystemModule'
      type: object
      xml:
        name: appliance
    MinimalConfiguration:
      properties:
        configurationScriptType:
          enum:
          - HOST_INIT
          - CONFIGURE_SCENARIO_HOST
          - CUSTOMIZE_OS_HOST
          - CONFIGURE_SCENARIO_MASTER
          - TEARDOWN_SCENARIO_HOST
          - TEARDOWN_SCENARIO_MASTER
          type: string
        scriptName:
          type: string
        script:
          type: string
      type: object
      xml:
        name: configuration
    MinimalDeploymentHost:
      properties:
        additionalDisks:
          items:
            $ref: '#/components/schemas/FullDisk'
          type: array
          uniqueItems: true
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        numCpus:
          format: int32
          type: integer
        ram:
          format: int32
          type: integer
        buildOrder:
          format: int32
          type: integer
        systemModule:
          $ref: '#/components/schemas/MinimalSystemModule'
        systemRole:
          type: string
      type: object
      xml:
        name: deploymentHost
    MinimalDevice:
      allOf:
      - $ref: '#/components/schemas/MinimalSystemModule'
      type: object
      xml:
        name: device
    MinimalPhysicalHost:
      allOf:
      - $ref: '#/components/schemas/MinimalSystemModule'
      type: object
      xml:
        name: physicalHost
    MinimalScenarioHost:
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        buildOrder:
          format: int32
          type: integer
        master:
          type: boolean
        systemRole:
          type: string
        systemModule:
          $ref: '#/components/schemas/MinimalSystemModule'
        configureScenarioConfiguration:
          $ref: '#/components/schemas/MinimalConfiguration'
        teardownScenarioConfiguration:
          $ref: '#/components/schemas/MinimalConfiguration'
      type: object
      xml:
        name: scenarioHost
    MinimalSystemModule:
      discriminator:
        propertyName: subtype
      example:
        offline: true
        visibility: OWNER
        subtype: subtype
        name: name
        description: description
        id: id
        state: IN_DEVELOPMENT
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        offline:
          type: boolean
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        subtype:
          type: string
      required:
      - subtype
      type: object
      xml:
        name: systemModule
    MinimalTestAsset:
      example:
        offline: true
        visibility: OWNER
        name: name
        description: description
        id: id
        state: IN_DEVELOPMENT
        type: UNKNOWN
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        offline:
          type: boolean
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        type:
          enum:
          - UNKNOWN
          - LISA
          - SOAPUI
          - SELENIUM
          - RETINA
          - NESSUS
          - CERTIFY
          - SCRIPT
          - WEBEXPLOITSUITE
          - FORTIFY
          - SONAR
          - POWERSHELL
          - MOCK
          type: string
      type: object
      xml:
        name: testAsset
    MinimalTestBundle:
      example:
        offline: true
        visibility: OWNER
        name: name
        description: description
        testToolPoolType: COMMUNITY_POOL
        id: id
        state: IN_DEVELOPMENT
        testAsset:
          offline: true
          visibility: OWNER
          name: name
          description: description
          id: id
          state: IN_DEVELOPMENT
          type: UNKNOWN
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        offline:
          type: boolean
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        testAsset:
          $ref: '#/components/schemas/MinimalTestAsset'
        testToolPoolType:
          enum:
          - COMMUNITY_POOL
          - PROJECT_POOL
          - DEPLOYMENT_RUN_ON_DEMAND
          type: string
      type: object
      xml:
        name: testBundle
    MinimalVirtualHost:
      allOf:
      - $ref: '#/components/schemas/MinimalSystemModule'
      type: object
      xml:
        name: virtualHost
    DeploymentAssetMetric:
      example:
        totalDeploymentRunError: 9
        totalDeploymentRunSuccess: 7
        totalDeploymentRunDuration: 0
        totalDeploymentRuns: 2
        totalDeploymentRunCancel: 3
        totalVirtualMachines: 4
        deploymentId: deploymentId
        averageDeploymentRunDuration: 6
        shortestDeploymentRunDuration: 5
        longestDeploymentRunDuration: 5
        totalDeploymentRunUnknown: 2
        medianDeploymentRunDuration: 1
      properties:
        deploymentId:
          type: string
        totalDeploymentRunDuration:
          format: int64
          type: integer
        averageDeploymentRunDuration:
          format: int64
          type: integer
        medianDeploymentRunDuration:
          format: int64
          type: integer
        longestDeploymentRunDuration:
          format: int64
          type: integer
        shortestDeploymentRunDuration:
          format: int64
          type: integer
        totalDeploymentRuns:
          format: int32
          type: integer
        totalDeploymentRunSuccess:
          format: int32
          type: integer
        totalDeploymentRunError:
          format: int32
          type: integer
        totalDeploymentRunCancel:
          format: int32
          type: integer
        totalDeploymentRunUnknown:
          format: int32
          type: integer
        totalVirtualMachines:
          format: int32
          type: integer
      type: object
      xml:
        name: deploymentMetric
    MinimalDeploymentRun:
      example:
        result: result
        canceled: true
        creator:
          id: 0
          email: email
          username: username
        deploymentRunResultType: ERROR
        fapStatus: REQUESTED
        deploymentRunStatus: UNKNOWN
        name: name
        project:
          name: name
          id: 6
          itarRestricted: true
        description: description
        startTime: 6
        id: 0
        locked: true
      properties:
        creator:
          $ref: '#/components/schemas/MinimalUser'
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        project:
          $ref: '#/components/schemas/MinimalProject'
        result:
          type: string
        startTime:
          format: int32
          type: integer
        canceled:
          type: boolean
        deploymentRunStatus:
          enum:
          - UNKNOWN
          - SCHEDULED
          - SUBMITTED
          - PROVISIONING_HOSTS
          - HOSTS_PROVISIONED
          - RESERVED
          - RELEASE_REQUESTED
          - RELEASING
          - TESTING
          - TESTED
          - REDEPLOYING_HOSTS
          - COMPLETED
          - CANCELED
          type: string
        description:
          type: string
        fapStatus:
          enum:
          - REQUESTED
          - BUILDING_HOSTSET
          - BUILDING_HOSTSET_ERROR
          - HOSTSET_BUILT_POWERED_OFF
          - POWERING_ON
          - POWERING_ON_ERROR
          - POWERED_ON
          - AWAITING_AGENT_CHECK_IN
          - AGENT_CHECK_IN_ERROR
          - AGENT_CHECK_IN_SUCCESS
          - BUILDING_SOURCE
          - SOURCE_BUILT
          - BUILDING_SOURCE_ERROR
          - BUILDING_SYSTEMS
          - BUILDING_SYSTEMS_ERROR
          - SYSTEMS_BUILT
          - BUILDING_SCENARIO
          - BUILDING_SCENARIO_ERROR
          - SCENARIO_BUILT
          - REBOOTING
          - REBOOTING_ERROR
          - RESERVED
          - RELEASE_REQUESTED
          - RELEASING
          - RELEASING_SCENARIO_ERROR
          - COMPLETE
          - UNKNOWN
          - CANCELED
          - INVALID_STATE_ERROR
          - FAP_SERVICE_COMMUNICATIONS_ERROR
          - INVALID_REQUEST_ERROR
          - REDEPLOYING_HOSTS
          - REDEPLOYING_HOSTS_ERROR
          type: string
        locked:
          type: boolean
        name:
          type: string
        deploymentRunResultType:
          enum:
          - ERROR
          - SUCCESS
          - CANCELED
          - UNKNOWN
          type: string
      type: object
      xml:
        name: deploymentRun
    MinimalDeployment:
      example:
        offline: true
        visibility: OWNER
        name: name
        description: description
        id: id
        state: IN_DEVELOPMENT
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        offline:
          type: boolean
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
      type: object
      xml:
        name: deployment
    AbstractInstallation:
      discriminator:
        propertyName: subtype
      example:
        endDate: 5
        subtype: subtype
        assetId: 1
        loadOrder: 7
        assetName: assetName
        id: 2
        error: error
        averageInstallationTime: 5
        startDate: 9
        status: NONE
      properties:
        assetId:
          format: int32
          type: integer
        assetName:
          type: string
        averageInstallationTime:
          format: int64
          type: integer
        endDate:
          format: int32
          type: integer
        error:
          type: string
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        loadOrder:
          format: int32
          type: integer
        startDate:
          format: int32
          type: integer
        status:
          enum:
          - NONE
          - PENDING
          - PREPARING
          - DOWNLOADING
          - EXPANDING
          - INSTALLING
          - INSTALLED
          - REBOOTING
          - ERROR
          - COMPLETE
          - STARTING
          - STARTED
          type: string
        subtype:
          type: string
      required:
      - subtype
      type: object
      xml:
        name: installation
    ContainerInstallation:
      allOf:
      - $ref: '#/components/schemas/AbstractInstallation'
      - $ref: '#/components/schemas/ContainerInstallation_allOf'
      type: object
      xml:
        name: containerInstallation
    FullDeploymentRunHost:
      example:
        virtual: true
        disks:
        - createOrder: 9
          isBootDisk: true
          capacityInMegabytes: 7
          isAdditionalDisk: true
          id: 3
          bootDisk: true
          additionalDisk: true
        - createOrder: 9
          isBootDisk: true
          capacityInMegabytes: 7
          isAdditionalDisk: true
          id: 3
          bootDisk: true
          additionalDisk: true
        instanceTypeName: instanceTypeName
        physicalMachineOrTemplateName: physicalMachineOrTemplateName
        numCpus: 3
        physicalMachineDataOrTemplateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        systemModuleId: 7
        installations:
        - endDate: 5
          subtype: subtype
          assetId: 1
          loadOrder: 7
          assetName: assetName
          id: 2
          error: error
          averageInstallationTime: 5
          startDate: 9
          status: NONE
        - endDate: 5
          subtype: subtype
          assetId: 1
          loadOrder: 7
          assetName: assetName
          id: 2
          error: error
          averageInstallationTime: 5
          startDate: 9
          status: NONE
        provisionable: true
        hostname: hostname
        buildOrder: 0
        systemRole: systemRole
        id: 6
        defaultPassword: defaultPassword
        gpuType: K80
        ram: 2
        snapshotDate: 4
        fapStatus: REQUESTED
        createdUsername: createdUsername
        VirtualizationRealmStatus: UNKNOWN
        published: true
        gpuProfile: M10_0Q
        systemModuleType: Appliance
        networkInterfaces:
        - macAddress: macAddress
          externalIpAddress: externalIpAddress
          networkName: networkName
          interfaceName: interfaceName
          networkFunction: CONS3RT
          networkIdentifier: networkIdentifier
          internalIpAddress: internalIpAddress
        - macAddress: macAddress
          externalIpAddress: externalIpAddress
          networkName: networkName
          interfaceName: interfaceName
          networkFunction: CONS3RT
          networkIdentifier: networkIdentifier
          internalIpAddress: internalIpAddress
        hostActionInProcess: true
        defaultUsername: defaultUsername
        hasGpu: true
        snapshotAvailable: true
        createdPassword: createdPassword
        nestedVirtualization: true
      properties:
        buildOrder:
          format: int32
          type: integer
        createdPassword:
          type: string
        createdUsername:
          type: string
        defaultPassword:
          type: string
        defaultUsername:
          type: string
        disks:
          items:
            $ref: '#/components/schemas/Disk'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        fapStatus:
          enum:
          - REQUESTED
          - BUILDING_HOSTSET
          - BUILDING_HOSTSET_ERROR
          - HOSTSET_BUILT_POWERED_OFF
          - POWERING_ON
          - POWERING_ON_ERROR
          - POWERED_ON
          - AWAITING_AGENT_CHECK_IN
          - AGENT_CHECK_IN_ERROR
          - AGENT_CHECK_IN_SUCCESS
          - BUILDING_SOURCE
          - SOURCE_BUILT
          - BUILDING_SOURCE_ERROR
          - BUILDING_SYSTEMS
          - BUILDING_SYSTEMS_ERROR
          - SYSTEMS_BUILT
          - BUILDING_SCENARIO
          - BUILDING_SCENARIO_ERROR
          - SCENARIO_BUILT
          - REBOOTING
          - REBOOTING_ERROR
          - RESERVED
          - RELEASE_REQUESTED
          - RELEASING
          - RELEASING_SCENARIO_ERROR
          - COMPLETE
          - UNKNOWN
          - CANCELED
          - INVALID_STATE_ERROR
          - FAP_SERVICE_COMMUNICATIONS_ERROR
          - INVALID_REQUEST_ERROR
          - REDEPLOYING_HOSTS
          - REDEPLOYING_HOSTS_ERROR
          type: string
        gpuProfile:
          enum:
          - M10_0Q
          - M10_1Q
          - M10_2Q
          - M10_4Q
          - V100D_2Q
          - V100D_4Q
          type: string
        gpuType:
          enum:
          - K80
          - M10
          - M60
          - P40
          - T4
          - V100D
          type: string
        hasGpu:
          type: boolean
        hostActionInProcess:
          type: boolean
        hostname:
          type: string
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        installations:
          items:
            $ref: '#/components/schemas/AbstractInstallation'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        instanceTypeName:
          type: string
        nestedVirtualization:
          type: boolean
        networkInterfaces:
          items:
            $ref: '#/components/schemas/NetworkInterface'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        numCpus:
          format: int32
          type: integer
        physicalMachineDataOrTemplateUuid:
          format: uuid
          type: string
        physicalMachineOrTemplateName:
          type: string
        published:
          type: boolean
        ram:
          format: int32
          type: integer
        snapshotAvailable:
          type: boolean
        snapshotDate:
          format: int32
          type: integer
        systemModuleId:
          format: int32
          type: integer
        systemModuleType:
          enum:
          - Appliance
          - ContainerApplication
          - ContainerAsset
          - Deployment
          - Device
          - PhysicalHost
          - Scenario
          - SoftwareAsset
          - SoftwareAssetBundle
          - TestAsset
          - TestBundle
          - VirtualHost
          type: string
        systemRole:
          type: string
        VirtualizationRealmStatus:
          enum:
          - UNKNOWN
          - STOPPED
          - RUNNING
          - SUSPENDED
          type: string
        virtual:
          type: boolean
        provisionable:
          type: boolean
      type: object
      xml:
        name: deploymentRunHost
    SoftwareInstallation:
      allOf:
      - $ref: '#/components/schemas/AbstractInstallation'
      - $ref: '#/components/schemas/SoftwareInstallation_allOf'
      type: object
      xml:
        name: softwareInstallation
    FullDeploymentRun:
      example:
        deploymentRunHosts:
        - hostname: hostname
          id: 7
        - hostname: hostname
          id: 7
        hostSetName: hostSetName
        project:
          name: name
          id: 6
          itarRestricted: true
        description: description
        estimatedStartTime: 5
        result: result
        estimatedReadyTime: 5
        readyTime: 3
        earliestStartTime: 0
        schedulerStatusMessage: schedulerStatusMessage
        recurringSchedule:
          schedule: schedule
          maxIterations: 0
          endDate: 6
          timezone: timezone
          id: 0
          complete: true
          deploymentRunOptions:
            creator:
              id: 0
              email: email
              username: username
            debug: true
            endState: UNKNOWN_STATE
            description: description
            virtualizationRealmId: 4
            duration: 1
            deploymentRunName: deploymentRunName
            earliestStartTime: 5
            hostOptions:
            - gpuProfile: M10_0Q
              batchSoftwareInstall: true
              networkInterfaces:
              - macAddress: macAddress
                externalIpAddress: externalIpAddress
                networkName: networkName
                interfaceName: interfaceName
                networkFunction: CONS3RT
                networkIdentifier: networkIdentifier
                internalIpAddress: internalIpAddress
              - macAddress: macAddress
                externalIpAddress: externalIpAddress
                networkName: networkName
                interfaceName: interfaceName
                networkFunction: CONS3RT
                networkIdentifier: networkIdentifier
                internalIpAddress: internalIpAddress
              systemRole: systemRole
              cpus: 5
              additionalDisks:
              - createOrder: 9
                isBootDisk: true
                capacityInMegabytes: 7
                isAdditionalDisk: true
                id: 3
                bootDisk: true
                additionalDisk: true
              - createOrder: 9
                isBootDisk: true
                capacityInMegabytes: 7
                isAdditionalDisk: true
                id: 3
                bootDisk: true
                additionalDisk: true
              ram: 2
              gpuType: K80
            - gpuProfile: M10_0Q
              batchSoftwareInstall: true
              networkInterfaces:
              - macAddress: macAddress
                externalIpAddress: externalIpAddress
                networkName: networkName
                interfaceName: interfaceName
                networkFunction: CONS3RT
                networkIdentifier: networkIdentifier
                internalIpAddress: internalIpAddress
              - macAddress: macAddress
                externalIpAddress: externalIpAddress
                networkName: networkName
                interfaceName: interfaceName
                networkFunction: CONS3RT
                networkIdentifier: networkIdentifier
                internalIpAddress: internalIpAddress
              systemRole: systemRole
              cpus: 5
              additionalDisks:
              - createOrder: 9
                isBootDisk: true
                capacityInMegabytes: 7
                isAdditionalDisk: true
                id: 3
                bootDisk: true
                additionalDisk: true
              - createOrder: 9
                isBootDisk: true
                capacityInMegabytes: 7
                isAdditionalDisk: true
                id: 3
                bootDisk: true
                additionalDisk: true
              ram: 2
              gpuType: K80
            deploymentToSubmit: 6
            id: 2
            locked: true
            properties:
            - id: 7
              value: value
              key: key
            - id: 7
              value: value
              key: key
            retainOnError: true
            rootPassword: rootPassword
            endExisting: true
          remainingIterations: 5
        targetState: UNKNOWN_STATE
        deploymentRunStatus: UNKNOWN
        timeOfRequest: 4
        startTime: 2
        categories:
        - disruptive: true
          name: name
          id: 0
        - disruptive: true
          name: name
          id: 0
        id: 2
        locked: true
        retainedOnError: true
        testRuns:
        - result: result
          testBundle:
            offline: true
            visibility: OWNER
            name: name
            description: description
            testToolPoolType: COMMUNITY_POOL
            id: id
            state: IN_DEVELOPMENT
            testAsset:
              offline: true
              visibility: OWNER
              name: name
              description: description
              id: id
              state: IN_DEVELOPMENT
              type: UNKNOWN
          creator:
            id: 0
            email: email
            username: username
          testManagerStatus: UNKNOWN
          reportUri: reportUri
          project:
            name: name
            id: 6
            itarRestricted: true
          startTime: 1
          id: 1
          testResult: TEST_PASS
        - result: result
          testBundle:
            offline: true
            visibility: OWNER
            name: name
            description: description
            testToolPoolType: COMMUNITY_POOL
            id: id
            state: IN_DEVELOPMENT
            testAsset:
              offline: true
              visibility: OWNER
              name: name
              description: description
              id: id
              state: IN_DEVELOPMENT
              type: UNKNOWN
          creator:
            id: 0
            email: email
            username: username
          testManagerStatus: UNKNOWN
          reportUri: reportUri
          project:
            name: name
            id: 6
            itarRestricted: true
          startTime: 1
          id: 1
          testResult: TEST_PASS
        deployment:
          offline: true
          visibility: OWNER
          name: name
          description: description
          id: id
          state: IN_DEVELOPMENT
        powerSchedule:
          mode: NONE
          weekdayEndTimeHour: 21
          weekdayStartTimeMinutes: 24
          weekdayStartTimeHour: 4
          weekendEndTimeMinutes: 7
          weekdayEndTimeMinutes: 21
          weekendStartTimeMinutes: 8
          weekendEndTimeHour: 16
          weekendStartTimeHour: 2
        leaseTime: 1
        creator:
          id: 0
          email: email
          username: username
        deploymentRunResultType: ERROR
        fapStatus: REQUESTED
        message: message
        virtualizationRealm:
          name: name
          virtualizationRealmType: Amazon
          id: 2
          state: ACTIVE
        testError: true
        logEntries:
        - severity: DEBUG
          id: 7
          source: source
          time: 9
          message: message
          projectName: projectName
          username: username
        - severity: DEBUG
          id: 7
          source: source
          time: 9
          message: message
          projectName: projectName
          username: username
        canceled: true
        name: name
        endTime: 6
        properties:
        - id: 7
          value: value
          key: key
        - id: 7
          value: value
          key: key
      properties:
        categories:
          items:
            $ref: '#/components/schemas/MinimalCategory'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        creator:
          $ref: '#/components/schemas/MinimalUser'
        earliestStartTime:
          format: int32
          type: integer
        endTime:
          format: int32
          type: integer
        leaseTime:
          format: int32
          type: integer
        estimatedReadyTime:
          format: int32
          type: integer
        estimatedStartTime:
          format: int32
          type: integer
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        logEntries:
          items:
            $ref: '#/components/schemas/MinimalLogEntry'
          type: array
          xml:
            wrapped: true
        message:
          type: string
        project:
          $ref: '#/components/schemas/MinimalProject'
        readyTime:
          format: int32
          type: integer
        result:
          type: string
        startTime:
          format: int32
          type: integer
        timeOfRequest:
          format: int32
          type: integer
        canceled:
          type: boolean
        deployment:
          $ref: '#/components/schemas/MinimalDeployment'
        deploymentRunHosts:
          items:
            $ref: '#/components/schemas/MinimalDeploymentRunHost'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        properties:
          items:
            $ref: '#/components/schemas/Property'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        deploymentRunStatus:
          enum:
          - UNKNOWN
          - SCHEDULED
          - SUBMITTED
          - PROVISIONING_HOSTS
          - HOSTS_PROVISIONED
          - RESERVED
          - RELEASE_REQUESTED
          - RELEASING
          - TESTING
          - TESTED
          - REDEPLOYING_HOSTS
          - COMPLETED
          - CANCELED
          type: string
        description:
          type: string
        fapStatus:
          enum:
          - REQUESTED
          - BUILDING_HOSTSET
          - BUILDING_HOSTSET_ERROR
          - HOSTSET_BUILT_POWERED_OFF
          - POWERING_ON
          - POWERING_ON_ERROR
          - POWERED_ON
          - AWAITING_AGENT_CHECK_IN
          - AGENT_CHECK_IN_ERROR
          - AGENT_CHECK_IN_SUCCESS
          - BUILDING_SOURCE
          - SOURCE_BUILT
          - BUILDING_SOURCE_ERROR
          - BUILDING_SYSTEMS
          - BUILDING_SYSTEMS_ERROR
          - SYSTEMS_BUILT
          - BUILDING_SCENARIO
          - BUILDING_SCENARIO_ERROR
          - SCENARIO_BUILT
          - REBOOTING
          - REBOOTING_ERROR
          - RESERVED
          - RELEASE_REQUESTED
          - RELEASING
          - RELEASING_SCENARIO_ERROR
          - COMPLETE
          - UNKNOWN
          - CANCELED
          - INVALID_STATE_ERROR
          - FAP_SERVICE_COMMUNICATIONS_ERROR
          - INVALID_REQUEST_ERROR
          - REDEPLOYING_HOSTS
          - REDEPLOYING_HOSTS_ERROR
          type: string
        hostSetName:
          type: string
        locked:
          type: boolean
        name:
          type: string
        powerSchedule:
          $ref: '#/components/schemas/PowerSchedule'
        recurringSchedule:
          $ref: '#/components/schemas/MinimalRecurringSchedule'
        schedulerStatusMessage:
          type: string
        targetState:
          enum:
          - UNKNOWN_STATE
          - SYSTEMS_BUILT
          - SCENARIO_BUILT
          - TESTS_EXECUTED_RESOURCES_RELEASED
          - TESTS_EXECUTED_RESOURCES_RESERVED
          type: string
        testError:
          type: boolean
        testRuns:
          items:
            $ref: '#/components/schemas/MinimalTestRunTask'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        retainedOnError:
          type: boolean
        virtualizationRealm:
          $ref: '#/components/schemas/MinimalVirtualizationRealm'
        deploymentRunResultType:
          enum:
          - ERROR
          - SUCCESS
          - CANCELED
          - UNKNOWN
          type: string
      type: object
      xml:
        name: deploymentRun
    MinimalDeploymentRunHost:
      example:
        hostname: hostname
        id: 7
      properties:
        hostname:
          type: string
        id:
          format: int32
          type: integer
          xml:
            attribute: true
      type: object
      xml:
        name: deploymentRunHost
    MinimalLogEntry:
      example:
        severity: DEBUG
        id: 7
        source: source
        time: 9
        message: message
        projectName: projectName
        username: username
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        message:
          type: string
        projectName:
          type: string
        severity:
          enum:
          - DEBUG
          - INFO
          - WARNING
          - ERROR
          type: string
        source:
          type: string
        time:
          format: int32
          type: integer
        username:
          type: string
      type: object
      xml:
        name: logEntry
    MinimalTestRunTask:
      example:
        result: result
        testBundle:
          offline: true
          visibility: OWNER
          name: name
          description: description
          testToolPoolType: COMMUNITY_POOL
          id: id
          state: IN_DEVELOPMENT
          testAsset:
            offline: true
            visibility: OWNER
            name: name
            description: description
            id: id
            state: IN_DEVELOPMENT
            type: UNKNOWN
        creator:
          id: 0
          email: email
          username: username
        testManagerStatus: UNKNOWN
        reportUri: reportUri
        project:
          name: name
          id: 6
          itarRestricted: true
        startTime: 1
        id: 1
        testResult: TEST_PASS
      properties:
        creator:
          $ref: '#/components/schemas/MinimalUser'
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        project:
          $ref: '#/components/schemas/MinimalProject'
        result:
          type: string
        startTime:
          format: int32
          type: integer
        reportUri:
          type: string
        testBundle:
          $ref: '#/components/schemas/MinimalTestBundle'
        testManagerStatus:
          enum:
          - UNKNOWN
          - SCHEDULED
          - SUBMITTED
          - TESTING
          - COMPLETED_WITH_ERROR
          - COMPLETED_WITH_SUCCESS
          - CANCELED
          - ERROR
          - TIMED_OUT
          type: string
        testResult:
          enum:
          - TEST_PASS
          - TEST_FAIL
          - TEST_CANCELED
          - VERIFY_AGENT_PROXY_ERROR
          - TEST_SETUP_ERROR
          - TEST_RESULTS_CLEANUP_ERROR
          - TEST_REPORT_UPLOAD_ERROR
          - TEST_TEARDOWN_ERROR
          - TEST_ENVIRONMENT_ERROR
          - RETINA_ERROR
          - SOAPUI_ERROR
          - LISA_ERROR
          - NESSUS_ERROR
          - CERTIFY_ERROR
          - SELENIUM_ERROR
          - SCRIPT_ERROR
          - WEBEXPLOITSUITE_ERROR
          - SONAR_ERROR
          - FORTIFY_ERROR
          - TEST_TIMEOUT_ERROR
          type: string
      type: object
      xml:
        name: testRun
    RestIdObject:
      example:
        idAsInteger: 0
        id: id
      properties:
        idAsInteger:
          format: int32
          type: integer
        id:
          type: string
      required:
      - id
      type: object
      xml:
        name: idObject
    TargetInstanceTypes:
      example:
        bestMatches:
        - family: family
          type: type
        - family: family
          type: type
        matches:
        - instanceTypes:
          - family: family
            type: type
          - family: family
            type: type
          family: family
        - instanceTypes:
          - family: family
            type: type
          - family: family
            type: type
          family: family
      properties:
        bestMatches:
          items:
            $ref: '#/components/schemas/InstanceType'
          type: array
        matches:
          items:
            $ref: '#/components/schemas/InstanceTypeFamily'
          type: array
      type: object
    RemoteAccessSession:
      example:
        endDate: 0
        lowBandwidth: true
        id: 6
        type: NONE
        startDate: 1
        username: username
      properties:
        endDate:
          format: int32
          type: integer
        id:
          format: int32
          type: integer
        lowBandwidth:
          type: boolean
        startDate:
          format: int32
          type: integer
        username:
          type: string
        type:
          enum:
          - NONE
          - SSH
          - VNC
          - RDP
          type: string
      type: object
      xml:
        name: remoteAccessSession
    CloudResourceAccessListing:
      example:
        access: OWNER
        resource:
          identifier: identifier
          name: name
          type: BUCKET
      properties:
        resource:
          $ref: '#/components/schemas/CloudResourceObject'
        access:
          enum:
          - OWNER
          - OWNING_PROJECT_READ
          - OWNING_PROJECT_WRITE
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
      type: object
      xml:
        name: CloudResourceAccessListing
    CloudResourceObject:
      example:
        identifier: identifier
        name: name
        type: BUCKET
      properties:
        type:
          enum:
          - BUCKET
          type: string
        name:
          type: string
        identifier:
          type: string
      required:
      - identifier
      - type
      type: object
      xml:
        name: CloudResource
    BaseIdentity:
      example:
        identifier: identifier
        project:
          name: name
          id: 6
          itarRestricted: true
        accessListing:
        - access: OWNER
          resource:
            identifier: identifier
            name: name
            type: BUCKET
        - access: OWNER
          resource:
            identifier: identifier
            name: name
            type: BUCKET
        user:
          id: 0
          email: email
          username: username
      properties:
        identifier:
          type: string
        user:
          $ref: '#/components/schemas/MinimalUser'
        project:
          $ref: '#/components/schemas/MinimalProject'
        accessListing:
          items:
            $ref: '#/components/schemas/CloudResourceAccessListing'
          type: array
          uniqueItems: true
      type: object
      xml:
        name: baseIdentity
    BaseCredentials:
      properties:
        credentials:
          additionalProperties:
            type: string
          type: object
        context:
          additionalProperties:
            type: string
          type: object
        resources:
          items:
            $ref: '#/components/schemas/CloudResourceAccessListing'
          type: array
          uniqueItems: true
      type: object
      xml:
        name: BaseCredentials
    FullProject:
      example:
        submissionServices:
        - hostLoggingString: hostLoggingString
          credentials:
            password: password
            username: username
          name: name
          id: 7
          submissionEndpoint:
            port: 4
            subtype: subtype
            host: host
            id: 1
            type: DockerRegistryEndpoint
          enabled: true
        - hostLoggingString: hostLoggingString
          credentials:
            password: password
            username: username
          name: name
          id: 7
          submissionEndpoint:
            port: 4
            subtype: subtype
            host: host
            id: 1
            type: DockerRegistryEndpoint
          enabled: true
        defaultRole: ADMINISTRATOR
        itarComment: itarComment
        resourceUsage:
          ramInMegabytes: 1
          numCpus: 7
          numGpus: 1
          virtualMachines: 6
          storageInMegabytes: 1
        owningTeam:
          private: true
          contactInfo:
            firstname: firstname
            phone: phone
            organization: organization
            email: email
            lastname: lastname
          name: name
          validUtil: 1
          id: 6
          state: ACTIVE
        description: description
        itarRestricted: true
        isPrivate: true
        activeMemberCount: 6
        createdAt: 1
        features:
          remoteAccessFileDownloadEnabled: true
          assetBypassScanningEnabled: true
          remoteAccessFileUploadEnabled: true
          remoteAccessPasteEnabled: true
          remoteAccessCopyEnabled: true
        defaultVirtualizationRealm:
          name: name
          virtualizationRealmType: Amazon
          id: 2
          state: ACTIVE
        members:
        - id: 0
          email: email
          username: username
        - id: 0
          email: email
          username: username
        virtualizationRealms:
        - name: name
          virtualizationRealmType: Amazon
          id: 2
          state: ACTIVE
        - name: name
          virtualizationRealmType: Amazon
          id: 2
          state: ACTIVE
        name: name
        defaultPowerSchedule:
          mode: NONE
          weekdayEndTimeHour: 21
          weekdayStartTimeMinutes: 24
          weekdayStartTimeHour: 4
          weekendEndTimeMinutes: 7
          weekdayEndTimeMinutes: 21
          weekendStartTimeMinutes: 8
          weekendEndTimeHour: 16
          weekendStartTimeHour: 2
        trustedProjects:
        - name: name
          id: 6
          itarRestricted: true
        - name: name
          id: 6
          itarRestricted: true
        id: 0
        limits:
          maxNumCpus: 0
          gpuTypeMaximums:
            key: 5
          maxStorageInMegabytes: 0
          maxNumGpus: 0
          maxRamInMegabytes: 0
          validUntil: 2
          maxVirtualMachines: 0
        totalMemberCount: 4
        updatedAt: 5
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        name:
          type: string
        itarRestricted:
          type: boolean
        activeMemberCount:
          format: int32
          type: integer
        createdAt:
          format: int32
          type: integer
        defaultPowerSchedule:
          $ref: '#/components/schemas/PowerSchedule'
        defaultRole:
          enum:
          - ADMINISTRATOR
          - ASSET_RESTORER
          - STATUS_READER
          - UI_MACHINE
          - TEST_TOOL
          - MEMBER
          - CONSUMER
          - STANDARD
          - SOFTWARE_DEVELOPER
          - TEST_DEVELOPER
          - ASSET_SHARER
          - ASSET_PROMOTER
          - POWER_SCHEDULE_UPDATER
          - PROJECT_OWNER
          - PROJECT_MANAGER
          - PROJECT_MODERATOR
          - REMOTE_ACCESS
          - MAESTRO_MACHINE
          - FAP_MACHINE
          - SCHEDULER_MACHINE
          - CONS3RT_MACHINE
          - SOURCEBUILDER_MACHINE
          - SYSTEM_ASSET_IMPORTER
          - ASSET_CERTIFIER
          - ASSET_UPLOADER
          type: string
        defaultVirtualizationRealm:
          $ref: '#/components/schemas/MinimalVirtualizationRealm'
        description:
          type: string
        features:
          $ref: '#/components/schemas/ProjectFeatures'
        itarComment:
          type: string
        limits:
          $ref: '#/components/schemas/ProjectLimits'
        totalMemberCount:
          format: int32
          type: integer
        owningTeam:
          $ref: '#/components/schemas/MinimalTeam'
        isPrivate:
          type: boolean
        trustedProjects:
          items:
            $ref: '#/components/schemas/MinimalProject'
          type: array
          uniqueItems: true
        resourceUsage:
          $ref: '#/components/schemas/ResourceUsage'
        submissionServices:
          items:
            $ref: '#/components/schemas/SubmissionService'
          type: array
          uniqueItems: true
        updatedAt:
          format: int32
          type: integer
        members:
          items:
            $ref: '#/components/schemas/MinimalUser'
          type: array
          uniqueItems: true
        virtualizationRealms:
          items:
            $ref: '#/components/schemas/MinimalVirtualizationRealm'
          type: array
          uniqueItems: true
      required:
      - id
      type: object
      xml:
        name: project
    InputProjectFull:
      example:
        features:
          remoteAccessFileDownloadEnabled: true
          assetBypassScanningEnabled: true
          remoteAccessFileUploadEnabled: true
          remoteAccessPasteEnabled: true
          remoteAccessCopyEnabled: true
        defaultRole: ADMINISTRATOR
        owningTeam:
          id: 5
        name: name
        description: description
        itarRestricted: true
        isPrivate: true
        limits:
          maxNumCpus: 0
          gpuTypeMaximums:
            key: 5
          maxStorageInMegabytes: 0
          maxNumGpus: 0
          maxRamInMegabytes: 0
          validUntil: 2
          maxVirtualMachines: 0
      properties:
        name:
          type: string
        description:
          type: string
        itarRestricted:
          type: boolean
        owningTeam:
          $ref: '#/components/schemas/InputTeam'
        limits:
          $ref: '#/components/schemas/ProjectLimits'
        defaultRole:
          enum:
          - ADMINISTRATOR
          - ASSET_RESTORER
          - STATUS_READER
          - UI_MACHINE
          - TEST_TOOL
          - MEMBER
          - CONSUMER
          - STANDARD
          - SOFTWARE_DEVELOPER
          - TEST_DEVELOPER
          - ASSET_SHARER
          - ASSET_PROMOTER
          - POWER_SCHEDULE_UPDATER
          - PROJECT_OWNER
          - PROJECT_MANAGER
          - PROJECT_MODERATOR
          - REMOTE_ACCESS
          - MAESTRO_MACHINE
          - FAP_MACHINE
          - SCHEDULER_MACHINE
          - CONS3RT_MACHINE
          - SOURCEBUILDER_MACHINE
          - SYSTEM_ASSET_IMPORTER
          - ASSET_CERTIFIER
          - ASSET_UPLOADER
          type: string
        features:
          $ref: '#/components/schemas/ProjectFeatures'
        isPrivate:
          type: boolean
      required:
      - limits
      - name
      type: object
      xml:
        name: project
    InputProjectUpdate:
      example:
        defaultRole: ADMINISTRATOR
        name: name
        description: description
        isPrivate: true
      properties:
        name:
          type: string
        description:
          type: string
        defaultRole:
          enum:
          - ADMINISTRATOR
          - ASSET_RESTORER
          - STATUS_READER
          - UI_MACHINE
          - TEST_TOOL
          - MEMBER
          - CONSUMER
          - STANDARD
          - SOFTWARE_DEVELOPER
          - TEST_DEVELOPER
          - ASSET_SHARER
          - ASSET_PROMOTER
          - POWER_SCHEDULE_UPDATER
          - PROJECT_OWNER
          - PROJECT_MANAGER
          - PROJECT_MODERATOR
          - REMOTE_ACCESS
          - MAESTRO_MACHINE
          - FAP_MACHINE
          - SCHEDULER_MACHINE
          - CONS3RT_MACHINE
          - SOURCEBUILDER_MACHINE
          - SYSTEM_ASSET_IMPORTER
          - ASSET_CERTIFIER
          - ASSET_UPLOADER
          type: string
        isPrivate:
          type: boolean
      required:
      - name
      type: object
      xml:
        name: project
    UserProject:
      example:
        roles:
        - ADMINISTRATOR
        - ADMINISTRATOR
        membershipState: REQUESTED
        id: 0
        email: email
        username: username
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        username:
          type: string
        email:
          type: string
        membershipState:
          enum:
          - REQUESTED
          - ACTIVE
          - BLOCKED
          - DELETED
          type: string
        roles:
          items:
            enum:
            - ADMINISTRATOR
            - ASSET_RESTORER
            - STATUS_READER
            - UI_MACHINE
            - TEST_TOOL
            - MEMBER
            - CONSUMER
            - STANDARD
            - SOFTWARE_DEVELOPER
            - TEST_DEVELOPER
            - ASSET_SHARER
            - ASSET_PROMOTER
            - POWER_SCHEDULE_UPDATER
            - PROJECT_OWNER
            - PROJECT_MANAGER
            - PROJECT_MODERATOR
            - REMOTE_ACCESS
            - MAESTRO_MACHINE
            - FAP_MACHINE
            - SCHEDULER_MACHINE
            - CONS3RT_MACHINE
            - SOURCEBUILDER_MACHINE
            - SYSTEM_ASSET_IMPORTER
            - ASSET_CERTIFIER
            - ASSET_UPLOADER
            type: string
            xml:
              name: role
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      type: object
      xml:
        name: user
    ResourceUsageDTO:
      properties:
        gpuTypeUsage:
          additionalProperties:
            format: int32
            type: integer
          type: object
        numCpus:
          format: int32
          type: integer
        ramInMegabytes:
          format: int32
          type: integer
        storageInMegabytes:
          format: int32
          type: integer
        virtualMachines:
          format: int32
          type: integer
      type: object
    InputDockerRegistrySubmissionEndpointForProject:
      allOf:
      - $ref: '#/components/schemas/InputSubmissionEndpointForProject'
      required:
      - host
      type: object
      xml:
        name: dockerRegistry
    InputSFTPSubmissionEndpointForProject:
      allOf:
      - $ref: '#/components/schemas/InputSubmissionEndpointForProject'
      - $ref: '#/components/schemas/InputSFTPSubmissionEndpointForAssetSubmission_allOf'
      required:
      - host
      type: object
      xml:
        name: sftp
    InputSubmissionEndpointForProject:
      discriminator:
        propertyName: subtype
      example:
        port: 0
        subtype: subtype
        host: host
      properties:
        host:
          type: string
        port:
          format: int32
          type: integer
        subtype:
          type: string
      required:
      - host
      - subtype
      type: object
      xml:
        name: submissionEndpoint
    InputSubmissionServiceForProject:
      example:
        credentials:
          password: password
          username: username
        submissionEndpoint:
          port: 0
          subtype: subtype
          host: host
        enabled: true
      properties:
        enabled:
          type: boolean
        credentials:
          $ref: '#/components/schemas/Credentials'
        submissionEndpoint:
          $ref: '#/components/schemas/InputSubmissionEndpointForProject'
      required:
      - submissionEndpoint
      type: object
      xml:
        name: submissionService
    InputScenario:
      example:
        prepareScenarioConfiguration:
          script: script
        scenarioHosts:
        - buildOrder: 6
          systemRole: systemRole
          configureScenarioConfiguration:
            script: script
          teardownScenarioConfiguration:
            script: script
          systemModule:
            subtype: subtype
          master: true
        - buildOrder: 6
          systemRole: systemRole
          configureScenarioConfiguration:
            script: script
          teardownScenarioConfiguration:
            script: script
          systemModule:
            subtype: subtype
          master: true
        name: name
        teardownScenarioConfiguration:
          script: script
      properties:
        name:
          type: string
        scenarioHosts:
          items:
            $ref: '#/components/schemas/InputScenarioHost'
          type: array
          uniqueItems: true
        prepareScenarioConfiguration:
          $ref: '#/components/schemas/InputConfiguration'
        teardownScenarioConfiguration:
          $ref: '#/components/schemas/InputConfiguration'
      type: object
      xml:
        name: scenario
    FullAppliance:
      allOf:
      - $ref: '#/components/schemas/FullAsset'
      - $ref: '#/components/schemas/FullAppliance_allOf'
      type: object
      xml:
        name: appliance
    FullAsset:
      discriminator:
        propertyName: subtype
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        offline:
          type: boolean
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        creator:
          $ref: '#/components/schemas/MinimalUser'
        owningProject:
          $ref: '#/components/schemas/MinimalProject'
        trustedProjects:
          items:
            $ref: '#/components/schemas/MinimalProject'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        dependentAssetCount:
          format: int32
          type: integer
        metadata:
          $ref: '#/components/schemas/FullMetadata'
        impactLevel:
          enum:
          - NONE
          - FEDRAMP_LOW
          - FEDRAMP_MODERATE_DOD_LEVEL_2
          - FEDRAMP_HIGH_DOD_LEVEL_4
          - DOD_LEVEL_5
          - DOD_LEVEL_6
          type: string
        categories:
          items:
            $ref: '#/components/schemas/MinimalCategory'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        subtype:
          type: string
      required:
      - subtype
      type: object
      xml:
        name: asset
    FullDevice:
      allOf:
      - $ref: '#/components/schemas/FullAsset'
      - $ref: '#/components/schemas/FullDevice_allOf'
      type: object
      xml:
        name: device
    FullPhysicalHost:
      allOf:
      - $ref: '#/components/schemas/FullAsset'
      - $ref: '#/components/schemas/FullPhysicalHost_allOf'
      type: object
      xml:
        name: physicalHost
    FullPhysicalMachine:
      allOf:
      - $ref: '#/components/schemas/FullAsset'
      - $ref: '#/components/schemas/FullPhysicalMachine_allOf'
      type: object
      xml:
        name: physicalMachine
    FullScenario:
      allOf:
      - $ref: '#/components/schemas/FullAsset'
      - $ref: '#/components/schemas/FullScenario_allOf'
      type: object
      xml:
        name: scenario
    FullSoftwareAsset:
      allOf:
      - $ref: '#/components/schemas/FullAsset'
      - $ref: '#/components/schemas/FullSoftwareAsset_allOf'
      type: object
      xml:
        name: software
    FullSoftwareAssetBundle:
      allOf:
      - $ref: '#/components/schemas/FullAsset'
      - $ref: '#/components/schemas/FullSoftwareAssetBundle_allOf'
      type: object
      xml:
        name: softwareBundle
    FullTestAsset:
      allOf:
      - $ref: '#/components/schemas/FullAsset'
      - $ref: '#/components/schemas/BasicTestAsset_allOf'
      type: object
      xml:
        name: testAsset
    FullVirtualHost:
      allOf:
      - $ref: '#/components/schemas/FullAsset'
      - $ref: '#/components/schemas/FullVirtualHost_allOf'
      type: object
      xml:
        name: virtualHost
    FullVirtualService:
      allOf:
      - $ref: '#/components/schemas/FullAsset'
      - $ref: '#/components/schemas/FullVirtualService_allOf'
      type: object
      xml:
        name: virtualService
    GeneralPhysicalMachine:
      properties:
        baseDisks:
          items:
            $ref: '#/components/schemas/FullDisk'
          type: array
          uniqueItems: true
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        offline:
          type: boolean
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        hostName:
          type: string
          xml:
            name: hostname
        ipAddress:
          type: string
        macAddress:
          type: string
        cpuCount:
          format: int32
          minimum: 1
          type: integer
        ram:
          format: int32
          minimum: 1
          type: integer
        architecture:
          enum:
          - X86
          - X64
          - ARM
          - SPARC
          - PPCLE
          type: string
        bits:
          enum:
          - BITS32
          - BITS64
          type: string
        operatingSystem:
          enum:
          - AMAZON_LINUX_2_LATEST_X64
          - AMAZON_LINUX_LATEST_X64
          - CENTOS_6_X64
          - CENTOS_6_X86
          - CENTOS_7_X64
          - CENTOS_8_X64
          - CORE_OS_1221_X64
          - F5_BIGIP_X64
          - FEDORA_23_X64
          - FORTISIEM
          - GENERIC_LINUX_X64
          - GENERIC_WINDOWS_X64
          - KALI_ROLLING_X64
          - ORACLE_LINUX_6_X64
          - ORACLE_LINUX_7_X64
          - ORACLE_LINUX_8_X64
          - OS_X_10
          - OS_X_11
          - PALO_ALTO_NETWORKS_PAN_OS_X64
          - RASPBIAN
          - RHEL_5_X64
          - RHEL_5_X86
          - RHEL_6_X64
          - RHEL_6_X86
          - RHEL_7_ATOMIC_HOST
          - RHEL_7_PPCLE
          - RHEL_7_X64
          - RHEL_8_X64
          - SOLARIS_11_X64
          - UBUNTU_12_X64
          - UBUNTU_14_X64
          - UBUNTU_16_X64
          - UBUNTU_18_X64
          - UBUNTU_20_X64
          - UBUNTU_CORE
          - VYOS_1_1_X64
          - VYOS_1_2_X64
          - VYOS_1_3_X64
          - VYOS_ROLLING_X64
          - WINDOWS_10_X64
          - WINDOWS_7_X64
          - WINDOWS_7_X86
          - WINDOWS_8_X64
          - WINDOWS_SERVER_2008_R2_X64
          - WINDOWS_SERVER_2008_X64
          - WINDOWS_SERVER_2012_R2_X64
          - WINDOWS_SERVER_2012_X64
          - WINDOWS_SERVER_2016_X64
          - WINDOWS_SERVER_2019_X64
          - WINDOWS_SERVER_2019_CORE_X64
          - WINDOWS_XP_X86
          type: string
      type: object
      xml:
        name: physicalMachine
    MinimalAbstractComponent:
      discriminator:
        propertyName: subtype
      example:
        subtype: subtype
        loadOrder: 0
        id: 0
        asset:
          offline: true
          visibility: OWNER
          name: name
          description: description
          id: id
          state: IN_DEVELOPMENT
      properties:
        asset:
          $ref: '#/components/schemas/MinimalAsset'
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        loadOrder:
          format: int32
          minimum: 0
          type: integer
        subtype:
          type: string
      required:
      - asset
      - subtype
      type: object
      xml:
        name: abstractComponent
    MinimalAsset:
      example:
        offline: true
        visibility: OWNER
        name: name
        description: description
        id: id
        state: IN_DEVELOPMENT
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        offline:
          type: boolean
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
      type: object
      xml:
        name: asset
    MinimalContainerComponent:
      allOf:
      - $ref: '#/components/schemas/MinimalAbstractComponent'
      - $ref: '#/components/schemas/MinimalContainerComponent_allOf'
      required:
      - asset
      - configuration
      type: object
      xml:
        name: containerComponent
    MinimalContainerConfiguration:
      properties:
        id:
          format: int32
          type: integer
        portMapping:
          $ref: '#/components/schemas/ContainerPortMapping'
        containerName:
          type: string
        runArguments:
          type: string
      required:
      - containerName
      type: object
      xml:
        name: containerConfiguration
    MinimalDisk:
      example:
        capacityInMegabytes: 5
      properties:
        capacityInMegabytes:
          format: int32
          type: integer
      type: object
      xml:
        name: disk
    MinimalRemoteAccessTemplate:
      example:
        port: 7
        name: name
        id: 2
        type: NONE
        username: username
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        name:
          type: string
        type:
          enum:
          - NONE
          - SSH
          - VNC
          - RDP
          type: string
        port:
          format: int32
          type: integer
        username:
          type: string
      type: object
      xml:
        name: remoteAccessTemplate
    MinimalSoftwareComponent:
      properties:
        asset:
          $ref: '#/components/schemas/MinimalAsset'
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        loadOrder:
          format: int32
          minimum: 0
          type: integer
        rebootDelay:
          format: int32
          type: integer
        rebootRequired:
          type: boolean
      required:
      - asset
      type: object
      xml:
        name: softwareComponent
    MinimalTemplateProfile:
      example:
        minBootDiskCapacity: 6
        remoteAccessRequired: true
        virtRealmTemplateName: virtRealmTemplateName
        minRam: 5
        additionalDisks:
        - capacityInMegabytes: 5
        - capacityInMegabytes: 5
        minNumCpus: 1
        requiresNestedVirtualization: true
        vgpuRequired: true
        operatingSystem: AMAZON_LINUX_2_LATEST_X64
        cons3rtAgentRequired: true
        gpuType: K80
      properties:
        virtRealmTemplateName:
          type: string
        operatingSystem:
          enum:
          - AMAZON_LINUX_2_LATEST_X64
          - AMAZON_LINUX_LATEST_X64
          - CENTOS_6_X64
          - CENTOS_6_X86
          - CENTOS_7_X64
          - CENTOS_8_X64
          - CORE_OS_1221_X64
          - F5_BIGIP_X64
          - FEDORA_23_X64
          - FORTISIEM
          - GENERIC_LINUX_X64
          - GENERIC_WINDOWS_X64
          - KALI_ROLLING_X64
          - ORACLE_LINUX_6_X64
          - ORACLE_LINUX_7_X64
          - ORACLE_LINUX_8_X64
          - OS_X_10
          - OS_X_11
          - PALO_ALTO_NETWORKS_PAN_OS_X64
          - RASPBIAN
          - RHEL_5_X64
          - RHEL_5_X86
          - RHEL_6_X64
          - RHEL_6_X86
          - RHEL_7_ATOMIC_HOST
          - RHEL_7_PPCLE
          - RHEL_7_X64
          - RHEL_8_X64
          - SOLARIS_11_X64
          - UBUNTU_12_X64
          - UBUNTU_14_X64
          - UBUNTU_16_X64
          - UBUNTU_18_X64
          - UBUNTU_20_X64
          - UBUNTU_CORE
          - VYOS_1_1_X64
          - VYOS_1_2_X64
          - VYOS_1_3_X64
          - VYOS_ROLLING_X64
          - WINDOWS_10_X64
          - WINDOWS_7_X64
          - WINDOWS_7_X86
          - WINDOWS_8_X64
          - WINDOWS_SERVER_2008_R2_X64
          - WINDOWS_SERVER_2008_X64
          - WINDOWS_SERVER_2012_R2_X64
          - WINDOWS_SERVER_2012_X64
          - WINDOWS_SERVER_2016_X64
          - WINDOWS_SERVER_2019_X64
          - WINDOWS_SERVER_2019_CORE_X64
          - WINDOWS_XP_X86
          type: string
        minBootDiskCapacity:
          format: int32
          type: integer
        minNumCpus:
          format: int32
          type: integer
        minRam:
          format: int32
          type: integer
        additionalDisks:
          items:
            $ref: '#/components/schemas/MinimalDisk'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        cons3rtAgentRequired:
          type: boolean
        vgpuRequired:
          type: boolean
        gpuType:
          enum:
          - K80
          - M10
          - M60
          - P40
          - T4
          - V100D
          type: string
        requiresNestedVirtualization:
          type: boolean
        remoteAccessRequired:
          type: boolean
      type: object
      xml:
        name: templateProfile
    CompositionLaunchOptions:
      example:
        timeToLive: 0
        password: password
        username: username
      properties:
        username:
          type: string
        password:
          type: string
        timeToLive:
          format: int32
          type: integer
      required:
      - password
      - username
      type: object
      xml:
        name: launchOptions
    AbstractCompositionStatus:
      discriminator:
        propertyName: type
      example:
        connectable: true
        startable: true
        name: name
        stoppable: true
        id: 0
        type: type
        projectId: 6
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        projectId:
          format: int32
          type: integer
        stoppable:
          type: boolean
        connectable:
          type: boolean
        startable:
          type: boolean
        type:
          type: string
      required:
      - type
      type: object
      xml:
        name: AbstractCompositionStatus
    ActiveCompositionStatus:
      allOf:
      - $ref: '#/components/schemas/AbstractCompositionStatus'
      - $ref: '#/components/schemas/ActiveCompositionStatus_allOf'
      type: object
      xml:
        name: ActiveCompositionStatus
    InactiveCompositionStatus:
      allOf:
      - $ref: '#/components/schemas/AbstractCompositionStatus'
      - $ref: '#/components/schemas/InactiveCompositionStatus_allOf'
      type: object
      xml:
        name: InactiveCompositionStatus
    MinimalSoftwareAssetBundle:
      example:
        offline: true
        visibility: OWNER
        name: name
        description: description
        id: id
        state: IN_DEVELOPMENT
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        offline:
          type: boolean
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
      type: object
      xml:
        name: softwareBundle
    BasicSoftwareAssetBundle:
      example:
        offline: true
        creator:
          id: 0
          email: email
          username: username
        visibility: OWNER
        name: name
        description: description
        id: id
        state: IN_DEVELOPMENT
        owningProject:
          name: name
          id: 6
          itarRestricted: true
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        offline:
          type: boolean
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        creator:
          $ref: '#/components/schemas/MinimalUser'
        owningProject:
          $ref: '#/components/schemas/MinimalProject'
      type: object
      xml:
        name: softwareBundle
    MinimalSoftwareAsset:
      example:
        offline: true
        visibility: OWNER
        softwareType: APPLICATION
        name: name
        description: description
        id: id
        state: IN_DEVELOPMENT
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        offline:
          type: boolean
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        softwareType:
          enum:
          - APPLICATION
          - SOURCE_CODE
          - TEST_TOOL
          type: string
      type: object
      xml:
        name: software
    MinimalSystemAsset:
      example:
        assetVersion: assetVersion
        id: 0
        type: REMOTE_ACCESS
        systemAssetVersion: systemAssetVersion
        softwareVersion: softwareVersion
        status: NONE
      properties:
        systemAssetVersion:
          type: string
          writeOnly: true
        status:
          enum:
          - NONE
          - PENDING
          - FETCHING
          - PROCESSING
          - ERROR
          - AVAILABLE
          type: string
        assetVersion:
          type: string
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        type:
          enum:
          - REMOTE_ACCESS
          - ELASTIC_TEST_TOOL
          type: string
        softwareVersion:
          type: string
      required:
      - type
      type: object
      xml:
        name: systemAsset
    FullSystemAsset:
      example:
        currentAsset:
          offline: true
          visibility: OWNER
          name: name
          description: description
          id: id
          state: IN_DEVELOPMENT
        templateProfile:
          minBootDiskCapacity: 6
          remoteAccessRequired: true
          virtRealmTemplateName: virtRealmTemplateName
          minRam: 5
          additionalDisks:
          - capacityInMegabytes: 5
          - capacityInMegabytes: 5
          minNumCpus: 1
          requiresNestedVirtualization: true
          vgpuRequired: true
          operatingSystem: AMAZON_LINUX_2_LATEST_X64
          cons3rtAgentRequired: true
          gpuType: K80
        password: password
        assetVersion: assetVersion
        softwareversion: softwareversion
        id: 0
        error: error
        type: REMOTE_ACCESS
        systemAssetVersion: systemAssetVersion
        url: url
        status: NONE
        username: username
      properties:
        systemAssetVersion:
          type: string
          writeOnly: true
        status:
          enum:
          - NONE
          - PENDING
          - FETCHING
          - PROCESSING
          - ERROR
          - AVAILABLE
          type: string
        assetVersion:
          type: string
        error:
          type: string
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        password:
          type: string
        url:
          type: string
        username:
          type: string
        currentAsset:
          $ref: '#/components/schemas/MinimalAsset'
        templateProfile:
          $ref: '#/components/schemas/MinimalTemplateProfile'
        type:
          enum:
          - REMOTE_ACCESS
          - ELASTIC_TEST_TOOL
          type: string
        softwareversion:
          type: string
          xml:
            name: softwareVersion
      required:
      - type
      type: object
      xml:
        name: systemAsset
    SystemAsset:
      properties:
        systemAssetVersion:
          type: string
          writeOnly: true
        status:
          enum:
          - NONE
          - PENDING
          - FETCHING
          - PROCESSING
          - ERROR
          - AVAILABLE
          type: string
        assetVersion:
          type: string
        error:
          type: string
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        password:
          type: string
        url:
          type: string
        username:
          type: string
        currentAsset:
          $ref: '#/components/schemas/Asset'
        templateProfile:
          $ref: '#/components/schemas/TemplateProfile'
        type:
          enum:
          - REMOTE_ACCESS
          - ELASTIC_TEST_TOOL
          type: string
        softwareversion:
          type: string
          xml:
            name: softwareVersion
      required:
      - password
      - type
      - url
      - username
      type: object
      xml:
        name: systemAsset
    InputSystemAsset:
      example:
        templateProfile:
          minBootDiskCapacity: 155115
          remoteAccessRequired: true
          virtRealmTemplateName: virtRealmTemplateName
          minRam: 6
          virtRealmId: 5
          additionalDisks:
          - createOrder: 5
            capacityInMegabytes: 5
          - createOrder: 5
            capacityInMegabytes: 5
          minNumCpus: 0
          requiresNestedVirtualization: true
          vgpuRequired: true
          operatingSystem: AMAZON_LINUX_2_LATEST_X64
        password: password
        type: REMOTE_ACCESS
        url: url
        username: username
      properties:
        password:
          type: string
        url:
          type: string
        username:
          type: string
        templateProfile:
          $ref: '#/components/schemas/InputTemplateProfile'
        type:
          enum:
          - REMOTE_ACCESS
          - ELASTIC_TEST_TOOL
          type: string
      required:
      - type
      type: object
      xml:
        name: systemAsset
    FullSystemModule:
      discriminator:
        propertyName: subtype
      example:
        components:
        - subtype: subtype
          loadOrder: 0
          id: 0
          asset:
            offline: true
            visibility: OWNER
            name: name
            description: description
            id: id
            state: IN_DEVELOPMENT
        - subtype: subtype
          loadOrder: 0
          id: 0
          asset:
            offline: true
            visibility: OWNER
            name: name
            description: description
            id: id
            state: IN_DEVELOPMENT
        creator:
          id: 0
          email: email
          username: username
        metadata:
          documentation: documentation
          modifier:
            id: 0
            email: email
            username: username
          itarRestricted: true
          creationDate: 1
          version: 6
          uri: uri
          instanceLimit: 5
          cloud:
            cloudType: AwsCloud
            name: name
            id: 0
            state: ACTIVE
          modifierDate: 2
          license: license
          validated: true
          sizeInMegabytes: 7
          assetDirectory: assetDirectory
          id: 5
          properties:
          - id: 7
            value: value
            key: key
          - id: 7
            value: value
            key: key
        visibility: OWNER
        description: description
        owningProject:
          name: name
          id: 6
          itarRestricted: true
        impactLevel: NONE
        offline: true
        subtype: subtype
        name: name
        trustedProjects:
        - name: name
          id: 6
          itarRestricted: true
        - name: name
          id: 6
          itarRestricted: true
        id: id
        state: IN_DEVELOPMENT
        categories:
        - disruptive: true
          name: name
          id: 0
        - disruptive: true
          name: name
          id: 0
        dependentAssetCount: 1
      properties:
        components:
          items:
            $ref: '#/components/schemas/MinimalAbstractComponent'
          type: array
          uniqueItems: true
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        offline:
          type: boolean
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        creator:
          $ref: '#/components/schemas/MinimalUser'
        owningProject:
          $ref: '#/components/schemas/MinimalProject'
        trustedProjects:
          items:
            $ref: '#/components/schemas/MinimalProject'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        dependentAssetCount:
          format: int32
          type: integer
        metadata:
          $ref: '#/components/schemas/FullMetadata'
        impactLevel:
          enum:
          - NONE
          - FEDRAMP_LOW
          - FEDRAMP_MODERATE_DOD_LEVEL_2
          - FEDRAMP_HIGH_DOD_LEVEL_4
          - DOD_LEVEL_5
          - DOD_LEVEL_6
          type: string
        categories:
          items:
            $ref: '#/components/schemas/MinimalCategory'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        subtype:
          type: string
      required:
      - subtype
      type: object
      xml:
        name: systemModule
    InputAppliance:
      allOf:
      - $ref: '#/components/schemas/InputSystemModule'
      - $ref: '#/components/schemas/InputAppliance_allOf'
      type: object
      xml:
        name: systemModule
    InputPhysicalHost:
      allOf:
      - $ref: '#/components/schemas/InputSystemModule'
      - $ref: '#/components/schemas/InputPhysicalHost_allOf'
      type: object
      xml:
        name: physicalHost
    InputSystemModule:
      discriminator:
        propertyName: subtype
      example:
        subtype: subtype
      properties:
        subtype:
          type: string
      required:
      - subtype
      type: object
      xml:
        name: systemModule
    InputVirtualHost:
      allOf:
      - $ref: '#/components/schemas/InputSystemModule'
      - $ref: '#/components/schemas/InputVirtualHost_allOf'
      type: object
      xml:
        name: virtualHost
    BasicSystemModule:
      discriminator:
        propertyName: subtype
      example:
        offline: true
        creator:
          id: 0
          email: email
          username: username
        visibility: OWNER
        subtype: subtype
        name: name
        description: description
        id: id
        state: IN_DEVELOPMENT
        owningProject:
          name: name
          id: 6
          itarRestricted: true
      properties:
        id:
          type: string
          xml:
            attribute: true
        name:
          type: string
        description:
          type: string
        offline:
          type: boolean
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        visibility:
          enum:
          - OWNER
          - OWNING_PROJECT
          - TRUSTED_PROJECTS
          - COMMUNITY
          type: string
        creator:
          $ref: '#/components/schemas/MinimalUser'
        owningProject:
          $ref: '#/components/schemas/MinimalProject'
        subtype:
          type: string
      required:
      - subtype
      type: object
      xml:
        name: systemModule
    FullTeam:
      example:
        teamManagers:
        - id: 0
          email: email
          username: username
        - id: 0
          email: email
          username: username
        - id: 0
          email: email
          username: username
        - id: 0
          email: email
          username: username
        - id: 0
          email: email
          username: username
        maxNumCpus: 0
        rdpClientSessionDuration: 1
        maxUsers: 4
        private: true
        orderNumber: orderNumber
        leadUser:
          id: 0
          email: email
          username: username
        contactInfo:
          firstname: firstname
          phone: phone
          organization: organization
          email: email
          lastname: lastname
        maxStorageInMegabytes: 0
        maxNumGpus: 0
        managedVirtualizationRealms:
        - name: name
          virtualizationRealmType: Amazon
          id: 2
          state: ACTIVE
        - name: name
          virtualizationRealmType: Amazon
          id: 2
          state: ACTIVE
        icon: icon
        validUtil: 1
        bypassScanningEnabled: true
        ownedProjects:
        - name: name
          id: 6
          itarRestricted: true
        - name: name
          id: 6
          itarRestricted: true
        maxAssets: 0
        gpuTypeMaximums:
          key: 0
        ownedClouds:
        - cloudType: AwsCloud
          name: name
          id: 0
          state: ACTIVE
        - cloudType: AwsCloud
          name: name
          id: 0
          state: ACTIVE
        snapshotEnabled: true
        maxVirtualMachines: 0
        id: 6
        state: ACTIVE
        maxProjects: 0
        maxManagedVirtualizationRealms: 0
        maxRamInMegabytes: 0
        maxSharedRemoteAccessSessions: 0
        assetBundleInstallerEnabled: true
        powerScheduleEnabled: true
        assetBypassScanningEnabled: true
        availabilityZoneEnabled: true
        name: name
        rdpClientProxyEnabled: true
      properties:
        assetBundleInstallerEnabled:
          type: boolean
        assetBypassScanningEnabled:
          type: boolean
        availabilityZoneEnabled:
          type: boolean
        bypassScanningEnabled:
          type: boolean
        leadUser:
          $ref: '#/components/schemas/MinimalUser'
        gpuTypeMaximums:
          additionalProperties:
            format: int32
            type: integer
          type: object
        icon:
          type: string
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        managedVirtualizationRealms:
          items:
            $ref: '#/components/schemas/MinimalVirtualizationRealm'
          type: array
          uniqueItems: true
          xml:
            name: virtualizationRealm
            wrapped: true
        teamManagers:
          items:
            $ref: '#/components/schemas/MinimalUser'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        maxAssets:
          format: int32
          minimum: 0
          type: integer
        maxManagedVirtualizationRealms:
          format: int32
          minimum: 0
          type: integer
        maxNumCpus:
          format: int32
          minimum: 0
          type: integer
        maxNumGpus:
          format: int32
          minimum: 0
          type: integer
        maxProjects:
          format: int32
          minimum: 0
          type: integer
        maxRamInMegabytes:
          format: int32
          minimum: 0
          type: integer
        maxSharedRemoteAccessSessions:
          format: int32
          minimum: 0
          type: integer
        maxStorageInMegabytes:
          format: int32
          minimum: 0
          type: integer
        maxUsers:
          format: int32
          type: integer
        maxVirtualMachines:
          format: int32
          minimum: 0
          type: integer
        name:
          type: string
        orderNumber:
          type: string
        ownedClouds:
          items:
            $ref: '#/components/schemas/MinimalCloud'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        ownedProjects:
          items:
            $ref: '#/components/schemas/MinimalProject'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        contactInfo:
          $ref: '#/components/schemas/PocInfo'
        powerScheduleEnabled:
          type: boolean
        private:
          type: boolean
        rdpClientProxyEnabled:
          type: boolean
        rdpClientSessionDuration:
          format: int32
          type: integer
        snapshotEnabled:
          type: boolean
        state:
          enum:
          - ACTIVE
          - INACTIVE
          - REQUESTED
          - RETIRED
          - UNFUNDED
          type: string
        validUtil:
          format: int32
          type: integer
      required:
      - contactInfo
      - state
      type: object
      xml:
        name: team
    InputTeamFull:
      example:
        teamManagers:
        - firstname: firstname
          email: email
          username: username
          lastname: lastname
        - firstname: firstname
          email: email
          username: username
          lastname: lastname
        - firstname: firstname
          email: email
          username: username
          lastname: lastname
        - firstname: firstname
          email: email
          username: username
          lastname: lastname
        - firstname: firstname
          email: email
          username: username
          lastname: lastname
        maxNumCpus: 0
        rdpClientSessionDuration: 7
        maxUsers: 2
        private: true
        orderNumber: orderNumber
        leadUser:
          firstname: firstname
          email: email
          username: username
          lastname: lastname
        contactInfo:
          firstname: firstname
          phone: phone
          organization: organization
          email: email
          lastname: lastname
        maxStorageInMegabytes: 0
        maxNumGpus: 0
        icon: icon
        bypassScanningEnabled: true
        gpuTypeMaximums:
          key: 0
        snapshotEnabled: true
        maxVirtualMachines: 0
        id: 6
        state: ACTIVE
        maxProjects: 0
        maxManagedVirtualizationRealms: 0
        maxRamInMegabytes: 0
        maxSharedRemoteAccessSessions: 0
        assetBundleInstallerEnabled: true
        powerScheduleEnabled: true
        assetBypassScanningEnabled: true
        availabilityZoneEnabled: true
        name: name
        rdpClientProxyEnabled: true
        validUntil: 1
      properties:
        assetBundleInstallerEnabled:
          type: boolean
        assetBypassScanningEnabled:
          type: boolean
        availabilityZoneEnabled:
          type: boolean
        bypassScanningEnabled:
          type: boolean
        leadUser:
          $ref: '#/components/schemas/InputUser'
        gpuTypeMaximums:
          additionalProperties:
            format: int32
            type: integer
          type: object
        icon:
          type: string
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        teamManagers:
          items:
            $ref: '#/components/schemas/InputUser'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        maxManagedVirtualizationRealms:
          format: int32
          minimum: 0
          type: integer
        maxNumCpus:
          format: int32
          minimum: 0
          type: integer
        maxNumGpus:
          format: int32
          minimum: 0
          type: integer
        maxProjects:
          format: int32
          minimum: 0
          type: integer
        maxRamInMegabytes:
          format: int32
          minimum: 0
          type: integer
        maxSharedRemoteAccessSessions:
          format: int32
          minimum: 0
          type: integer
        maxStorageInMegabytes:
          format: int32
          minimum: 0
          type: integer
        maxUsers:
          format: int32
          type: integer
        maxVirtualMachines:
          format: int32
          minimum: 0
          type: integer
        name:
          type: string
        orderNumber:
          type: string
        contactInfo:
          $ref: '#/components/schemas/PocInfo'
        powerScheduleEnabled:
          type: boolean
        private:
          type: boolean
        rdpClientProxyEnabled:
          type: boolean
        rdpClientSessionDuration:
          format: int32
          type: integer
        snapshotEnabled:
          type: boolean
        state:
          enum:
          - ACTIVE
          - INACTIVE
          - REQUESTED
          - RETIRED
          - UNFUNDED
          type: string
        validUntil:
          format: int32
          type: integer
      required:
      - contactInfo
      - leadUser
      - name
      - state
      - teamManagers
      - validUntil
      type: object
      xml:
        name: team
    InputUser:
      example:
        firstname: firstname
        email: email
        username: username
        lastname: lastname
      properties:
        username:
          type: string
        email:
          type: string
        firstname:
          type: string
        lastname:
          type: string
      required:
      - email
      - firstname
      - lastname
      - username
      type: object
      xml:
        name: user
    TestTool:
      example:
        testRunTasks:
        - 1
        - 1
        autoRegistered: true
        visibility: UNKNOWN
        description: description
        version: version
        instanceLimit: 6
        hostname: hostname
        tmaOnline: true
        tmaServiceName: tmaServiceName
        testToolType: UNKNOWN
        name: name
        testToolVendor: testToolVendor
        testToolAgentInstalled: true
        tmaVersion: tmaVersion
        id: 0
        tmaEnabled: true
        properties:
        - id: 7
          value: value
          key: key
        - id: 7
          value: value
          key: key
      properties:
        testToolType:
          enum:
          - UNKNOWN
          - LISA
          - SOAPUI
          - SELENIUM
          - RETINA
          - NESSUS
          - CERTIFY
          - SCRIPT
          - WEBEXPLOITSUITE
          - FORTIFY
          - SONAR
          - POWERSHELL
          - MOCK
          type: string
          xml:
            name: type
        testToolVendor:
          type: string
          xml:
            name: vendor
        autoRegistered:
          type: boolean
        description:
          type: string
        hostname:
          type: string
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        instanceLimit:
          format: int32
          type: integer
        name:
          type: string
        properties:
          items:
            $ref: '#/components/schemas/Property'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        testRunTasks:
          items:
            format: int32
            type: integer
            xml:
              name: taskId
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        testToolAgentInstalled:
          type: boolean
        version:
          type: string
        tmaEnabled:
          type: boolean
        tmaOnline:
          type: boolean
        tmaServiceName:
          type: string
        tmaVersion:
          type: string
        visibility:
          enum:
          - UNKNOWN
          - OWNER
          - OWNING_PROJECT
          - COMMUNITY
          type: string
      type: object
      xml:
        name: testTool
    BasicUser:
      example:
        firstname: firstname
        id: 0
        state: REQUESTED
        email: email
        username: username
        lastname: lastname
      properties:
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        username:
          type: string
        email:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        state:
          enum:
          - REQUESTED
          - ACTIVE
          - INACTIVE
          type: string
      type: object
      xml:
        name: user
    FullAwsVirtualizationRealm:
      allOf:
      - $ref: '#/components/schemas/FullVirtualizationRealm'
      - $ref: '#/components/schemas/FullAwsVirtualizationRealm_allOf'
      required:
      - accountId
      - description
      - name
      - networks
      - username
      type: object
      xml:
        name: virtualizationRealm
    FullAzureVirtualizationRealm:
      allOf:
      - $ref: '#/components/schemas/FullVirtualizationRealm'
      - $ref: '#/components/schemas/AzureVirtualizationRealm_allOf'
      required:
      - accountId
      - description
      - environment
      - name
      - networks
      - region
      - resourceGroupName
      - tenantId
      - username
      - virtualNetworkName
      type: object
      xml:
        name: virtualizationRealm
    FullOpenStackVirtualizationRealm:
      allOf:
      - $ref: '#/components/schemas/FullVirtualizationRealm'
      required:
      - accountId
      - description
      - name
      - networks
      - username
      type: object
      xml:
        name: virtualizationRealm
    FullVCloudRestVirtualizationRealm:
      allOf:
      - $ref: '#/components/schemas/FullVirtualizationRealm'
      - $ref: '#/components/schemas/VCloudRestVirtualizationRealm_allOf'
      required:
      - accountId
      - description
      - name
      - networks
      - username
      type: object
      xml:
        name: virtualizationRealm
    FullVirtualizationRealm:
      discriminator:
        propertyName: virtualizationRealmType
      example:
        remoteAccessDeploymentId: 1
        projects:
        - name: name
          id: 6
          itarRestricted: true
        - name: name
          id: 6
          itarRestricted: true
        supportedFeatures:
        - USER_PASSWORD_UPDATE
        - USER_PASSWORD_UPDATE
        description: description
        remoteAccessDeploymentRunStatus: UNKNOWN
        networks:
        - isolated: true
          name: name
          description: description
          cidr: cidr
          id: 0
          networkFunction: CONS3RT
          boundaryIpAddress: boundaryIpAddress
          firewallRules:
          - ruleEnabled: true
            ruleAction: ALLOW
            protocol: ANY
            ruleSource: ruleSource
            ruleDestPort: ruleDestPort
            ruleOrder: 5
            ruleSourcePort: ruleSourcePort
            id: 1
            ruleDestination: ruleDestination
          - ruleEnabled: true
            ruleAction: ALLOW
            protocol: ANY
            ruleSource: ruleSource
            ruleDestPort: ruleDestPort
            ruleOrder: 5
            ruleSourcePort: ruleSourcePort
            id: 1
            ruleDestination: ruleDestination
          dnatRules:
          - dnatProtocol: ANY
            dnatEnabled: true
            dnatTargetIp: dnatTargetIp
            id: 6
            dnatTargetPort: dnatTargetPort
            dnatPort: dnatPort
          - dnatProtocol: ANY
            dnatEnabled: true
            dnatTargetIp: dnatTargetIp
            id: 6
            dnatTargetPort: dnatTargetPort
            dnatPort: dnatPort
        maximumRamInMegabytes: 0
        adminUsers:
        - id: 0
          email: email
          username: username
        - id: 0
          email: email
          username: username
        cloud:
          cloudType: AwsCloud
          name: name
          id: 0
          state: ACTIVE
        createdAt: 1
        dateLastReachable: 5
        id: 0
        state: ACTIVE
        powerOnInitialDelayBase: 4
        powerOnMinimumDelay: 0
        allocated: true
        updatedAt: 1
        localStorageName: localStorageName
        templates:
        - virtRealmTemplateName: virtRealmTemplateName
          displayName: displayName
          virtRealmId: 6
          templateRegistration:
            templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            offline: true
            id: 1
          id: 0
          operatingSystem: AMAZON_LINUX_2_LATEST_X64
        - virtRealmTemplateName: virtRealmTemplateName
          displayName: displayName
          virtRealmId: 6
          templateRegistration:
            templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            offline: true
            id: 1
          id: 0
          operatingSystem: AMAZON_LINUX_2_LATEST_X64
        zoneCount: 6
        templateSubscriptions:
        - templateRegistration:
            templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            offline: true
            id: 1
          id: 1
          state: IN_DEVELOPMENT
        - templateRegistration:
            templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            offline: true
            id: 1
          id: 1
          state: IN_DEVELOPMENT
        activeVirtualMachines: 6
        accessPoint: accessPoint
        reachable: true
        maximumNumGpus: 0
        accountId: accountId
        defaultWindowsDomainName: defaultWindowsDomainName
        maximumNumCpus: 0
        maximumStorageInMegabytes: 0
        name: name
        maximumVirtualMachines: 0
        remoteAccessConfig:
          remoteAccessIpAddress: remoteAccessIpAddress
          templateName: templateName
          remoteAccessPort: 7
          instanceType: LARGE
          id: 4
        virtualizationRealmType: Amazon
        maximumImpactLevel: NONE
        templateRegistrations:
        - templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          offline: true
          id: 1
        - templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          offline: true
          id: 1
        powerOnDelayBase: 2
        remoteAccessStatus: ENABLING
        username: username
      properties:
        virtualizationRealmType:
          enum:
          - Amazon
          - Azure
          - Mock
          - OpenStack
          - VCloudRest
          type: string
        id:
          format: int32
          type: integer
          xml:
            attribute: true
        name:
          type: string
        state:
          enum:
          - ACTIVE
          - ENTERING_MAINTENANCE
          - INACTIVE
          - MAINTENANCE
          - PENDING
          - REQUESTED
          - RETIRED
          type: string
        accessPoint:
          type: string
        accountId:
          type: string
        activeVirtualMachines:
          format: int32
          type: integer
        networks:
          items:
            $ref: '#/components/schemas/Network'
          maxItems: 1
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        adminUsers:
          items:
            $ref: '#/components/schemas/MinimalUser'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        allocated:
          type: boolean
        cloud:
          $ref: '#/components/schemas/MinimalCloud'
        createdAt:
          format: int32
          type: integer
        dateLastReachable:
          format: int32
          type: integer
        description:
          type: string
        defaultWindowsDomainName:
          type: string
        localStorageName:
          type: string
        maximumImpactLevel:
          enum:
          - NONE
          - FEDRAMP_LOW
          - FEDRAMP_MODERATE_DOD_LEVEL_2
          - FEDRAMP_HIGH_DOD_LEVEL_4
          - DOD_LEVEL_5
          - DOD_LEVEL_6
          type: string
        maximumNumCpus:
          format: int32
          minimum: 0
          type: integer
        maximumNumGpus:
          format: int32
          minimum: 0
          type: integer
        maximumRamInMegabytes:
          format: int32
          minimum: 0
          type: integer
        maximumStorageInMegabytes:
          format: int32
          minimum: 0
          type: integer
        maximumVirtualMachines:
          format: int32
          minimum: 0
          type: integer
        powerOnDelayBase:
          format: int64
          type: integer
        powerOnInitialDelayBase:
          format: int32
          type: integer
        powerOnMinimumDelay:
          format: int32
          minimum: 0
          type: integer
        projects:
          items:
            $ref: '#/components/schemas/MinimalProject'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        reachable:
          type: boolean
        remoteAccessConfig:
          $ref: '#/components/schemas/RemoteAccessConfig'
        remoteAccessDeploymentId:
          format: int32
          type: integer
        remoteAccessDeploymentRunStatus:
          enum:
          - UNKNOWN
          - SCHEDULED
          - SUBMITTED
          - PROVISIONING_HOSTS
          - HOSTS_PROVISIONED
          - RESERVED
          - RELEASE_REQUESTED
          - RELEASING
          - TESTING
          - TESTED
          - REDEPLOYING_HOSTS
          - COMPLETED
          - CANCELED
          type: string
        remoteAccessStatus:
          enum:
          - ENABLING
          - ENABLED
          - DISABLING
          - DISABLED
          - ERROR
          type: string
        supportedFeatures:
          items:
            enum:
            - USER_PASSWORD_UPDATE
            - VIRT_MACHINE_NESTED_VIRTUALIZATION
            - VIRT_MACHINE_REPROVISIONING
            - VIRT_MACHINE_SNAPSHOT
            - VIRT_MACHINE_SUSPEND
            - VIRT_REALM_ADD_NETWORK
            - VIRT_REALM_ALLOCATION
            - VIRT_REALM_APPLY_SECURITY
            - VIRT_REALM_DEALLOCATION
            - VIRT_REALM_DELETE_NETWORK
            - VIRT_REALM_INSTANCE_TYPE_DRIVEN
            - VIRT_REALM_REDEPLOY_BOUNDARY_PROTECTION
            - VIRT_REALM_REFRESH_BOUNDARY_PROTECTION
            type: string
            xml:
              name: supportedFeatures
          type: array
          uniqueItems: true
        templateRegistrations:
          items:
            $ref: '#/components/schemas/MinimalTemplateRegistration'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        templates:
          items:
            $ref: '#/components/schemas/MinimalCons3rtTemplateData'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        templateSubscriptions:
          items:
            $ref: '#/components/schemas/MinimalTemplateSubscription'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        updatedAt:
          format: int32
          type: integer
        username:
          type: string
        zoneCount:
          format: int32
          type: integer
      required:
      - accountId
      - description
      - name
      - networks
      - username
      type: object
      xml:
        name: virtualizationRealm
    MinimalTemplateSubscription:
      example:
        templateRegistration:
          templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          offline: true
          id: 1
        id: 1
        state: IN_DEVELOPMENT
      properties:
        id:
          format: int32
          type: integer
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        templateRegistration:
          $ref: '#/components/schemas/MinimalTemplateRegistration'
      type: object
      xml:
        name: templateSubscription
    InputVRAdminAwsVirtualizationRealm:
      allOf:
      - $ref: '#/components/schemas/InputVRAdminVirtualizationRealm'
      required:
      - cidr
      - description
      - name
      - virtualizationRealmType
      type: object
      xml:
        name: virtualizationRealm
    InputVRAdminAzureVirtualizationRealm:
      allOf:
      - $ref: '#/components/schemas/InputVRAdminVirtualizationRealm'
      required:
      - cidr
      - description
      - name
      - virtualizationRealmType
      type: object
      xml:
        name: virtualizationRealm
    InputVRAdminOpenStackVirtualizationRealm:
      allOf:
      - $ref: '#/components/schemas/InputVRAdminVirtualizationRealm'
      required:
      - cidr
      - description
      - name
      - virtualizationRealmType
      type: object
      xml:
        name: virtualizationRealm
    InputVRAdminVCloudRestVirtualizationRealm:
      allOf:
      - $ref: '#/components/schemas/InputVRAdminVirtualizationRealm'
      required:
      - cidr
      - description
      - name
      - virtualizationRealmType
      type: object
      xml:
        name: virtualizationRealm
    InputVRAdminVirtualizationRealm:
      discriminator:
        propertyName: virtualizationRealmType
      example:
        defaultWindowsDomainName: defaultWindowsDomainName
        additionalNetworks:
        - name: name
        name: name
        cons3rtNetwork:
          name: name
        description: description
        powerOnMaximumDelay: 0
        cidr: cidr
        virtualizationRealmType: Amazon
        id: 0
        powerOnInitialDelayBase: 1
        powerOnMinimumDelay: 0
        powerOnDelayBase: 6
      properties:
        virtualizationRealmType:
          enum:
          - Amazon
          - Azure
          - Mock
          - OpenStack
          - VCloudRest
          type: string
        id:
          format: int32
          type: integer
        additionalNetworks:
          items:
            $ref: '#/components/schemas/InputVirtualizationRealmNetwork'
          maxItems: 1
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        cidr:
          maxLength: 16
          minLength: 10
          type: string
        cons3rtNetwork:
          $ref: '#/components/schemas/InputVirtualizationRealmNetwork'
        defaultWindowsDomainName:
          type: string
        description:
          type: string
        name:
          type: string
        powerOnDelayBase:
          format: int64
          type: integer
        powerOnInitialDelayBase:
          format: int32
          type: integer
        powerOnMaximumDelay:
          format: int32
          minimum: 0
          type: integer
        powerOnMinimumDelay:
          format: int32
          minimum: 0
          type: integer
      required:
      - cidr
      - description
      - name
      - virtualizationRealmType
      type: object
      xml:
        name: virtualizationRealm
    InputVirtualizationRealmNetwork:
      example:
        name: name
      properties:
        name:
          type: string
      required:
      - name
      type: object
      xml:
        name: network
    NatInstance:
      example:
        identifier: identifier
        sshKeyPem: sshKeyPem
        password: password
        sshKeyName: sshKeyName
        natSecurityGroupIdentifier: natSecurityGroupIdentifier
        externalIp: externalIp
        internalIp: internalIp
        username: username
      properties:
        externalIp:
          maxLength: 15
          minLength: 1
          type: string
        identifier:
          maxLength: 255
          minLength: 1
          type: string
        internalIp:
          maxLength: 15
          minLength: 1
          type: string
        password:
          maxLength: 255
          minLength: 1
          type: string
        natSecurityGroupIdentifier:
          maxLength: 255
          minLength: 1
          type: string
        sshKeyName:
          maxLength: 255
          minLength: 1
          type: string
        sshKeyPem:
          maxLength: 255
          minLength: 1
          type: string
        username:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - externalIp
      type: object
      xml:
        name: natInstance
    SecurityGroup:
      example:
        identifier: identifier
      properties:
        identifier:
          maxLength: 255
          minLength: 1
          type: string
      required:
      - identifier
      type: object
      xml:
        name: securityGroup
    Subnet:
      example:
        identifier: identifier
        name: name
        cidr: cidr
        id: 0
        securityGroup:
          identifier: identifier
        natInstance:
          identifier: identifier
          sshKeyPem: sshKeyPem
          password: password
          sshKeyName: sshKeyName
          natSecurityGroupIdentifier: natSecurityGroupIdentifier
          externalIp: externalIp
          internalIp: internalIp
          username: username
      properties:
        cidr:
          maxLength: 16
          minLength: 10
          type: string
        id:
          format: int32
          type: integer
        identifier:
          maxLength: 255
          minLength: 1
          type: string
        name:
          maxLength: 255
          minLength: 1
          type: string
        natInstance:
          $ref: '#/components/schemas/NatInstance'
        securityGroup:
          $ref: '#/components/schemas/SecurityGroup'
      required:
      - cidr
      - identifier
      - name
      - natInstance
      - securityGroup
      type: object
    AbstractAddNetworkCloudSpaceRequest:
      discriminator:
        propertyName: subtype
      example:
        subtype: subtype
        network:
          isolated: true
          name: name
          description: description
          cidr: cidr
          id: 0
          networkFunction: CONS3RT
          boundaryIpAddress: boundaryIpAddress
          firewallRules:
          - ruleEnabled: true
            ruleAction: ALLOW
            protocol: ANY
            ruleSource: ruleSource
            ruleDestPort: ruleDestPort
            ruleOrder: 5
            ruleSourcePort: ruleSourcePort
            id: 1
            ruleDestination: ruleDestination
          - ruleEnabled: true
            ruleAction: ALLOW
            protocol: ANY
            ruleSource: ruleSource
            ruleDestPort: ruleDestPort
            ruleOrder: 5
            ruleSourcePort: ruleSourcePort
            id: 1
            ruleDestination: ruleDestination
          dnatRules:
          - dnatProtocol: ANY
            dnatEnabled: true
            dnatTargetIp: dnatTargetIp
            id: 6
            dnatTargetPort: dnatTargetPort
            dnatPort: dnatPort
          - dnatProtocol: ANY
            dnatEnabled: true
            dnatTargetIp: dnatTargetIp
            id: 6
            dnatTargetPort: dnatTargetPort
            dnatPort: dnatPort
      properties:
        network:
          $ref: '#/components/schemas/Network'
        subtype:
          type: string
      required:
      - network
      - subtype
      type: object
      xml:
        name: AbstractAddNetworkCloudSpaceRequest
    AddAwsNetworkRequest:
      allOf:
      - $ref: '#/components/schemas/AbstractAddNetworkCloudSpaceRequest'
      - $ref: '#/components/schemas/AddAwsNetworkRequest_allOf'
      required:
      - natImageId
      - natInstanceType
      - network
      type: object
      xml:
        name: addAwsNetworkRequest
    AddAzureNetworkRequest:
      allOf:
      - $ref: '#/components/schemas/AbstractAddNetworkCloudSpaceRequest'
      - $ref: '#/components/schemas/AddAzureNetworkRequest_allOf'
      required:
      - natImageReference
      - natInstanceType
      - network
      type: object
      xml:
        name: addAzureNetworkRequest
    AddOpenStackNetworkRequest:
      allOf:
      - $ref: '#/components/schemas/AbstractAddNetworkCloudSpaceRequest'
      - $ref: '#/components/schemas/AddOpenStackNetworkRequest_allOf'
      required:
      - natImageId
      - natInstanceFlavor
      - network
      type: object
      xml:
        name: addOpenStackNetworkRequest
    AddVcloudNetworkRequest:
      allOf:
      - $ref: '#/components/schemas/AbstractAddNetworkCloudSpaceRequest'
      - $ref: '#/components/schemas/AddVcloudNetworkRequest_allOf'
      required:
      - externalNetworkName
      - network
      type: object
      xml:
        name: addVcloudNetworkRequest
    AddVcloudRestNetworkRequest:
      allOf:
      - $ref: '#/components/schemas/AbstractAddNetworkCloudSpaceRequest'
      - $ref: '#/components/schemas/AddVcloudNetworkRequest_allOf'
      required:
      - externalNetworkName
      - network
      type: object
      xml:
        name: addVcloudRestNetworkRequest
    FullCons3rtTemplateData:
      example:
        note: note
        containerCapable: true
        powerShellVersion: NONE
        disks:
        - capacityInMegabytes: 5
        - capacityInMegabytes: 5
        failCount: 1
        displayName: displayName
        maxRamInMegabytes: 5
        operatingSystem: AMAZON_LINUX_2_LATEST_X64
        license: license
        packageManagementType: APP_STORE
        virtRealmTemplateName: virtRealmTemplateName
        userCount: 9
        cons3rtAgentInstalled: true
        virtRealmId: 3
        id: 6
        HasGpu: true
        powerOnDelayOverride: 5
        serviceManagementType: SYSTEMD
        remoteAccessTemplates:
        - port: 7
          name: name
          id: 2
          type: NONE
          username: username
        - port: 7
          name: name
          id: 2
          type: NONE
          username: username
      properties:
        id:
          format: int32
          type: integer
        cons3rtAgentInstalled:
          type: boolean
        containerCapable:
          type: boolean
        disks:
          items:
            $ref: '#/components/schemas/MinimalDisk'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        displayName:
          type: string
        failCount:
          format: int32
          type: integer
        HasGpu:
          type: boolean
          xml:
            name: hasGpu
        license:
          type: string
        maxRamInMegabytes:
          format: int64
          type: integer
        note:
          type: string
        operatingSystem:
          enum:
          - AMAZON_LINUX_2_LATEST_X64
          - AMAZON_LINUX_LATEST_X64
          - CENTOS_6_X64
          - CENTOS_6_X86
          - CENTOS_7_X64
          - CENTOS_8_X64
          - CORE_OS_1221_X64
          - F5_BIGIP_X64
          - FEDORA_23_X64
          - FORTISIEM
          - GENERIC_LINUX_X64
          - GENERIC_WINDOWS_X64
          - KALI_ROLLING_X64
          - ORACLE_LINUX_6_X64
          - ORACLE_LINUX_7_X64
          - ORACLE_LINUX_8_X64
          - OS_X_10
          - OS_X_11
          - PALO_ALTO_NETWORKS_PAN_OS_X64
          - RASPBIAN
          - RHEL_5_X64
          - RHEL_5_X86
          - RHEL_6_X64
          - RHEL_6_X86
          - RHEL_7_ATOMIC_HOST
          - RHEL_7_PPCLE
          - RHEL_7_X64
          - RHEL_8_X64
          - SOLARIS_11_X64
          - UBUNTU_12_X64
          - UBUNTU_14_X64
          - UBUNTU_16_X64
          - UBUNTU_18_X64
          - UBUNTU_20_X64
          - UBUNTU_CORE
          - VYOS_1_1_X64
          - VYOS_1_2_X64
          - VYOS_1_3_X64
          - VYOS_ROLLING_X64
          - WINDOWS_10_X64
          - WINDOWS_7_X64
          - WINDOWS_7_X86
          - WINDOWS_8_X64
          - WINDOWS_SERVER_2008_R2_X64
          - WINDOWS_SERVER_2008_X64
          - WINDOWS_SERVER_2012_R2_X64
          - WINDOWS_SERVER_2012_X64
          - WINDOWS_SERVER_2016_X64
          - WINDOWS_SERVER_2019_X64
          - WINDOWS_SERVER_2019_CORE_X64
          - WINDOWS_XP_X86
          type: string
        packageManagementType:
          enum:
          - APP_STORE
          - APT_GET
          - DNF
          - DOCKER
          - NONE
          - PKGADD
          - SNAP
          - YUM
          type: string
        powerOnDelayOverride:
          format: int32
          type: integer
        powerShellVersion:
          enum:
          - NONE
          - POWERSHELL_1_0
          - POWERSHELL_2_0
          - POWERSHELL_3_0
          - POWERSHELL_4_0
          - POWERSHELL_5_0
          - POWERSHELL_6_0
          type: string
        serviceManagementType:
          enum:
          - SYSTEMD
          - INITD
          - LAUNCHD
          - UNKNOWN
          - UPDATE_RC
          - UPSTART
          - WINDOWS
          type: string
        remoteAccessTemplates:
          items:
            $ref: '#/components/schemas/MinimalRemoteAccessTemplate'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        userCount:
          format: int32
          type: integer
          xml:
            name: useCount
        virtRealmId:
          format: int32
          type: integer
        virtRealmTemplateName:
          type: string
      required:
      - operatingSystem
      - virtRealmTemplateName
      type: object
      xml:
        name: cons3rtTemplateData
    FullTemplateRegistration:
      example:
        templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        subscriptions:
        - templateRegistration:
            templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            offline: true
            id: 1
          id: 1
          state: IN_DEVELOPMENT
        - templateRegistration:
            templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            offline: true
            id: 1
          id: 1
          state: IN_DEVELOPMENT
        virtRealmsSharedTo:
        - name: name
          virtualizationRealmType: Amazon
          id: 2
          state: ACTIVE
        - name: name
          virtualizationRealmType: Amazon
          id: 2
          state: ACTIVE
        templateData:
          note: note
          containerCapable: true
          powerShellVersion: NONE
          disks:
          - capacityInMegabytes: 5
          - capacityInMegabytes: 5
          failCount: 1
          displayName: displayName
          maxRamInMegabytes: 5
          operatingSystem: AMAZON_LINUX_2_LATEST_X64
          license: license
          packageManagementType: APP_STORE
          virtRealmTemplateName: virtRealmTemplateName
          userCount: 9
          cons3rtAgentInstalled: true
          virtRealmId: 3
          id: 6
          HasGpu: true
          powerOnDelayOverride: 5
          serviceManagementType: SYSTEMD
          remoteAccessTemplates:
          - port: 7
            name: name
            id: 2
            type: NONE
            username: username
          - port: 7
            name: name
            id: 2
            type: NONE
            username: username
        id: 0
        state: IN_DEVELOPMENT
        registeringVirtualizationRealm:
          name: name
          virtualizationRealmType: Amazon
          id: 2
          state: ACTIVE
      properties:
        id:
          format: int32
          type: integer
        registeringVirtualizationRealm:
          $ref: '#/components/schemas/MinimalVirtualizationRealm'
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        subscriptions:
          items:
            $ref: '#/components/schemas/MinimalTemplateSubscription'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        templateData:
          $ref: '#/components/schemas/FullCons3rtTemplateData'
        templateUuid:
          format: uuid
          type: string
        virtRealmsSharedTo:
          items:
            $ref: '#/components/schemas/MinimalVirtualizationRealm'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      type: object
      xml:
        name: templateRegistration
    AwsClient:
      allOf:
      - $ref: '#/components/schemas/VirtualizationRealmClient'
      - $ref: '#/components/schemas/AwsClient_allOf'
      required:
      - password
      - username
      type: object
      xml:
        name: awsClient
    OpenStackClient:
      allOf:
      - $ref: '#/components/schemas/VirtualizationRealmClient'
      - $ref: '#/components/schemas/OpenStackClient_allOf'
      required:
      - password
      - username
      type: object
      xml:
        name: openStackClient
    RegisterTemplateObject:
      properties:
        client:
          $ref: '#/components/schemas/VirtualizationRealmClient'
        templateData:
          $ref: '#/components/schemas/Cons3rtTemplateData'
      required:
      - templateData
      type: object
      xml:
        name: registerTemplateObject
    VCloudClient:
      allOf:
      - $ref: '#/components/schemas/VirtualizationRealmClient'
      - $ref: '#/components/schemas/VCloudClient_allOf'
      required:
      - password
      - username
      type: object
      xml:
        name: vCloudClient
    VirtualizationRealmClient:
      discriminator:
        propertyName: subtype
      properties:
        username:
          type: string
        password:
          type: string
        acceptAllCerts:
          type: boolean
        acceptSelfSignedCerts:
          type: boolean
        host:
          type: string
        port:
          format: int32
          type: integer
        protocol:
          type: string
        subtype:
          type: string
      required:
      - password
      - subtype
      - username
      type: object
      xml:
        name: virtualizationRealmClient
    InputAwsClient:
      allOf:
      - $ref: '#/components/schemas/InputVirtualizationRealmClient'
      required:
      - password
      - username
      type: object
      xml:
        name: awsClient
    InputCons3rtTemplateData:
      example:
        maxNumCpus: 6
        note: note
        containerCapable: true
        powerShellVersion: NONE
        disks:
        - isBootDisk: true
          capacityInMegabytes: 0
          isAdditionalDisk: true
        - isBootDisk: true
          capacityInMegabytes: 0
          isAdditionalDisk: true
        displayName: displayName
        maxRamInMegabytes: 1
        operatingSystem: AMAZON_LINUX_2_LATEST_X64
        license: license
        packageManagementType: APP_STORE
        virtRealmTemplateName: virtRealmTemplateName
        hasGpu: true
        cons3rtAgentInstalled: true
        powerOnDelayOverride: 5
        serviceManagementType: SYSTEMD
        remoteAccessTemplates:
        - password: password
          port: 5
          name: name
          type: NONE
        - password: password
          port: 5
          name: name
          type: NONE
      properties:
        displayName:
          type: string
        virtRealmTemplateName:
          type: string
        operatingSystem:
          enum:
          - AMAZON_LINUX_2_LATEST_X64
          - AMAZON_LINUX_LATEST_X64
          - CENTOS_6_X64
          - CENTOS_6_X86
          - CENTOS_7_X64
          - CENTOS_8_X64
          - CORE_OS_1221_X64
          - F5_BIGIP_X64
          - FEDORA_23_X64
          - FORTISIEM
          - GENERIC_LINUX_X64
          - GENERIC_WINDOWS_X64
          - KALI_ROLLING_X64
          - ORACLE_LINUX_6_X64
          - ORACLE_LINUX_7_X64
          - ORACLE_LINUX_8_X64
          - OS_X_10
          - OS_X_11
          - PALO_ALTO_NETWORKS_PAN_OS_X64
          - RASPBIAN
          - RHEL_5_X64
          - RHEL_5_X86
          - RHEL_6_X64
          - RHEL_6_X86
          - RHEL_7_ATOMIC_HOST
          - RHEL_7_PPCLE
          - RHEL_7_X64
          - RHEL_8_X64
          - SOLARIS_11_X64
          - UBUNTU_12_X64
          - UBUNTU_14_X64
          - UBUNTU_16_X64
          - UBUNTU_18_X64
          - UBUNTU_20_X64
          - UBUNTU_CORE
          - VYOS_1_1_X64
          - VYOS_1_2_X64
          - VYOS_1_3_X64
          - VYOS_ROLLING_X64
          - WINDOWS_10_X64
          - WINDOWS_7_X64
          - WINDOWS_7_X86
          - WINDOWS_8_X64
          - WINDOWS_SERVER_2008_R2_X64
          - WINDOWS_SERVER_2008_X64
          - WINDOWS_SERVER_2012_R2_X64
          - WINDOWS_SERVER_2012_X64
          - WINDOWS_SERVER_2016_X64
          - WINDOWS_SERVER_2019_X64
          - WINDOWS_SERVER_2019_CORE_X64
          - WINDOWS_XP_X86
          type: string
        cons3rtAgentInstalled:
          type: boolean
        containerCapable:
          type: boolean
        disks:
          items:
            $ref: '#/components/schemas/InputDiskForTemplate'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        hasGpu:
          type: boolean
        license:
          type: string
        maxNumCpus:
          format: int32
          type: integer
        maxRamInMegabytes:
          format: int64
          type: integer
        note:
          type: string
        packageManagementType:
          enum:
          - APP_STORE
          - APT_GET
          - DNF
          - DOCKER
          - NONE
          - PKGADD
          - SNAP
          - YUM
          type: string
        powerOnDelayOverride:
          format: int32
          type: integer
        powerShellVersion:
          enum:
          - NONE
          - POWERSHELL_1_0
          - POWERSHELL_2_0
          - POWERSHELL_3_0
          - POWERSHELL_4_0
          - POWERSHELL_5_0
          - POWERSHELL_6_0
          type: string
        serviceManagementType:
          enum:
          - SYSTEMD
          - INITD
          - LAUNCHD
          - UNKNOWN
          - UPDATE_RC
          - UPSTART
          - WINDOWS
          type: string
        remoteAccessTemplates:
          items:
            $ref: '#/components/schemas/InputRemoteAccessTemplate'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      required:
      - operatingSystem
      - virtRealmTemplateName
      type: object
      xml:
        name: cons3rtTemplateData
    InputDiskForTemplate:
      example:
        isBootDisk: true
        capacityInMegabytes: 0
        isAdditionalDisk: true
      properties:
        capacityInMegabytes:
          format: int32
          type: integer
        isAdditionalDisk:
          type: boolean
        isBootDisk:
          type: boolean
      required:
      - capacityInMegabytes
      type: object
      xml:
        name: disk
    InputOpenStackClient:
      allOf:
      - $ref: '#/components/schemas/InputVirtualizationRealmClient'
      required:
      - password
      - username
      type: object
      xml:
        name: openStackClient
    InputRegisterTemplateObject:
      example:
        templateData:
          maxNumCpus: 6
          note: note
          containerCapable: true
          powerShellVersion: NONE
          disks:
          - isBootDisk: true
            capacityInMegabytes: 0
            isAdditionalDisk: true
          - isBootDisk: true
            capacityInMegabytes: 0
            isAdditionalDisk: true
          displayName: displayName
          maxRamInMegabytes: 1
          operatingSystem: AMAZON_LINUX_2_LATEST_X64
          license: license
          packageManagementType: APP_STORE
          virtRealmTemplateName: virtRealmTemplateName
          hasGpu: true
          cons3rtAgentInstalled: true
          powerOnDelayOverride: 5
          serviceManagementType: SYSTEMD
          remoteAccessTemplates:
          - password: password
            port: 5
            name: name
            type: NONE
          - password: password
            port: 5
            name: name
            type: NONE
        client:
          password: password
          subtype: subtype
          username: username
      properties:
        client:
          $ref: '#/components/schemas/InputVirtualizationRealmClient'
        templateData:
          $ref: '#/components/schemas/InputCons3rtTemplateData'
      required:
      - templateData
      type: object
      xml:
        name: registerTemplateObject
    InputRemoteAccessTemplate:
      example:
        password: password
        port: 5
        name: name
        type: NONE
      properties:
        name:
          type: string
        type:
          enum:
          - NONE
          - SSH
          - VNC
          - RDP
          type: string
        port:
          format: int32
          type: integer
        password:
          type: string
      required:
      - name
      - port
      - type
      type: object
      xml:
        name: remoteAccessTemplate
    InputVCloudClient:
      allOf:
      - $ref: '#/components/schemas/InputVirtualizationRealmClient'
      required:
      - password
      - username
      type: object
      xml:
        name: vCloudClient
    InputVirtualizationRealmClient:
      discriminator:
        propertyName: subtype
      example:
        password: password
        subtype: subtype
        username: username
      properties:
        username:
          type: string
        password:
          type: string
        subtype:
          type: string
      required:
      - password
      - subtype
      - username
      type: object
      xml:
        name: virtualizationRealmClient
    Cons3rtTemplateTagData:
      example:
        virtRealmTemplateName: virtRealmTemplateName
        cons3rtSiteId: cons3rtSiteId
        registeredInThisEnvironment: true
        uuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        cons3rtSiteId:
          type: string
        uuid:
          format: uuid
          type: string
        virtRealmTemplateName:
          type: string
        registeredInThisEnvironment:
          type: boolean
      type: object
    UnregisterTemplateObject:
      properties:
        client:
          $ref: '#/components/schemas/VirtualizationRealmClient'
        removeSubscriptions:
          type: boolean
      required:
      - removeSubscriptions
      type: object
      xml:
        name: unregisterTemplateObject
    InputUnregisterTemplateObject:
      example:
        removeSubscriptions: true
        client:
          password: password
          subtype: subtype
          username: username
      properties:
        removeSubscriptions:
          type: boolean
        client:
          $ref: '#/components/schemas/InputVirtualizationRealmClient'
      required:
      - removeSubscriptions
      type: object
      xml:
        name: unregisterTemplateObject
    FullTemplateRegistrationForSubscription:
      example:
        templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        templateData:
          note: note
          containerCapable: true
          powerShellVersion: NONE
          disks:
          - capacityInMegabytes: 5
          - capacityInMegabytes: 5
          failCount: 1
          displayName: displayName
          maxRamInMegabytes: 5
          operatingSystem: AMAZON_LINUX_2_LATEST_X64
          license: license
          packageManagementType: APP_STORE
          virtRealmTemplateName: virtRealmTemplateName
          userCount: 9
          cons3rtAgentInstalled: true
          virtRealmId: 3
          id: 6
          HasGpu: true
          powerOnDelayOverride: 5
          serviceManagementType: SYSTEMD
          remoteAccessTemplates:
          - port: 7
            name: name
            id: 2
            type: NONE
            username: username
          - port: 7
            name: name
            id: 2
            type: NONE
            username: username
        id: 5
        state: IN_DEVELOPMENT
        registeringVirtualizationRealm:
          name: name
          virtualizationRealmType: Amazon
          id: 2
          state: ACTIVE
      properties:
        id:
          format: int32
          type: integer
        registeringVirtualizationRealm:
          $ref: '#/components/schemas/MinimalVirtualizationRealm'
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        templateData:
          $ref: '#/components/schemas/FullCons3rtTemplateData'
        templateUuid:
          format: uuid
          type: string
      type: object
      xml:
        name: templateRegistration
    FullTemplateSubscription:
      example:
        maxNumCpus: 6
        templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        maxRamInMegabytes: 1
        templateRegistration:
          templateUuid: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          templateData:
            note: note
            containerCapable: true
            powerShellVersion: NONE
            disks:
            - capacityInMegabytes: 5
            - capacityInMegabytes: 5
            failCount: 1
            displayName: displayName
            maxRamInMegabytes: 5
            operatingSystem: AMAZON_LINUX_2_LATEST_X64
            license: license
            packageManagementType: APP_STORE
            virtRealmTemplateName: virtRealmTemplateName
            userCount: 9
            cons3rtAgentInstalled: true
            virtRealmId: 3
            id: 6
            HasGpu: true
            powerOnDelayOverride: 5
            serviceManagementType: SYSTEMD
            remoteAccessTemplates:
            - port: 7
              name: name
              id: 2
              type: NONE
              username: username
            - port: 7
              name: name
              id: 2
              type: NONE
              username: username
          id: 5
          state: IN_DEVELOPMENT
          registeringVirtualizationRealm:
            name: name
            virtualizationRealmType: Amazon
            id: 2
            state: ACTIVE
        id: 0
        state: IN_DEVELOPMENT
        subscribingVirtualizationRealm:
          name: name
          virtualizationRealmType: Amazon
          id: 2
          state: ACTIVE
      properties:
        id:
          format: int32
          type: integer
        maxNumCpus:
          format: int32
          type: integer
        maxRamInMegabytes:
          format: int32
          type: integer
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        subscribingVirtualizationRealm:
          $ref: '#/components/schemas/MinimalVirtualizationRealm'
        templateRegistration:
          $ref: '#/components/schemas/FullTemplateRegistrationForSubscription'
        templateUuid:
          format: uuid
          type: string
      type: object
      xml:
        name: templateSubscription
    InputTemplateSubscription:
      example:
        maxNumCpus: 0
        maxRamInMegabytes: 6
        state: IN_DEVELOPMENT
        allowGpuUsage: true
      properties:
        state:
          enum:
          - IN_DEVELOPMENT
          - CERTIFIED
          - DEPRECATED
          - RETIRED
          type: string
        allowGpuUsage:
          type: boolean
        maxNumCpus:
          format: int32
          type: integer
        maxRamInMegabytes:
          format: int32
          type: integer
      type: object
      xml:
        name: templateSubscription
    BasicPhysicalMachine_allOf:
      properties:
        architecture:
          enum:
          - X86
          - X64
          - ARM
          - SPARC
          - PPCLE
          type: string
        bits:
          enum:
          - BITS32
          - BITS64
          type: string
        operatingSystem:
          enum:
          - AMAZON_LINUX_2_LATEST_X64
          - AMAZON_LINUX_LATEST_X64
          - CENTOS_6_X64
          - CENTOS_6_X86
          - CENTOS_7_X64
          - CENTOS_8_X64
          - CORE_OS_1221_X64
          - F5_BIGIP_X64
          - FEDORA_23_X64
          - FORTISIEM
          - GENERIC_LINUX_X64
          - GENERIC_WINDOWS_X64
          - KALI_ROLLING_X64
          - ORACLE_LINUX_6_X64
          - ORACLE_LINUX_7_X64
          - ORACLE_LINUX_8_X64
          - OS_X_10
          - OS_X_11
          - PALO_ALTO_NETWORKS_PAN_OS_X64
          - RASPBIAN
          - RHEL_5_X64
          - RHEL_5_X86
          - RHEL_6_X64
          - RHEL_6_X86
          - RHEL_7_ATOMIC_HOST
          - RHEL_7_PPCLE
          - RHEL_7_X64
          - RHEL_8_X64
          - SOLARIS_11_X64
          - UBUNTU_12_X64
          - UBUNTU_14_X64
          - UBUNTU_16_X64
          - UBUNTU_18_X64
          - UBUNTU_20_X64
          - UBUNTU_CORE
          - VYOS_1_1_X64
          - VYOS_1_2_X64
          - VYOS_1_3_X64
          - VYOS_ROLLING_X64
          - WINDOWS_10_X64
          - WINDOWS_7_X64
          - WINDOWS_7_X86
          - WINDOWS_8_X64
          - WINDOWS_SERVER_2008_R2_X64
          - WINDOWS_SERVER_2008_X64
          - WINDOWS_SERVER_2012_R2_X64
          - WINDOWS_SERVER_2012_X64
          - WINDOWS_SERVER_2016_X64
          - WINDOWS_SERVER_2019_X64
          - WINDOWS_SERVER_2019_CORE_X64
          - WINDOWS_XP_X86
          type: string
      type: object
    BasicSoftwareAsset_allOf:
      properties:
        softwareType:
          enum:
          - APPLICATION
          - SOURCE_CODE
          - TEST_TOOL
          type: string
      type: object
    BasicTestAsset_allOf:
      properties:
        type:
          enum:
          - UNKNOWN
          - LISA
          - SOAPUI
          - SELENIUM
          - RETINA
          - NESSUS
          - CERTIFY
          - SCRIPT
          - WEBEXPLOITSUITE
          - FORTIFY
          - SONAR
          - POWERSHELL
          - MOCK
          type: string
      type: object
    AwsClientConfiguration_allOf:
      properties:
        sessionToken:
          type: string
        regionName:
          maxLength: 15
          minLength: 9
          type: string
      type: object
    AwsCloud_allOf:
      properties:
        accessKey:
          type: string
        ownerId:
          type: string
        regionName:
          type: string
        secretAccessKey:
          type: string
      type: object
    AwsVirtualizationRealm_allOf:
      properties:
        natImageId:
          type: string
        natInstanceType:
          type: string
        natKeyName:
          type: string
        natKeyPem:
          type: string
        region:
          type: string
        securityGroupId:
          type: string
        userKeyName:
          type: string
        userKeyPem:
          type: string
        virtualNetworkName:
          type: string
        vpcId:
          type: string
        vpcSubnetName:
          type: string
      type: object
    AzureCloud_allOf:
      properties:
        clientId:
          type: string
        environment:
          enum:
          - AZURE
          - AZURE_US_GOVERNMENT
          type: string
        regionName:
          enum:
          - US_EAST
          - DOD_US_CENTRAL
          - DOD_US_EAST
          - GOV_US_VIRGINIA
          - GOV_US_TEXAS
          type: string
        secretAccessKey:
          type: string
        subscriptionId:
          type: string
        tenant:
          type: string
        publicContainerUrl:
          type: string
      type: object
    AzureVirtualizationRealm_allOf:
      properties:
        environment:
          enum:
          - AZURE
          - AZURE_US_GOVERNMENT
          type: string
        publicContainerUrl:
          type: string
        region:
          enum:
          - US_EAST
          - DOD_US_CENTRAL
          - DOD_US_EAST
          - GOV_US_VIRGINIA
          - GOV_US_TEXAS
          type: string
        resourceGroupName:
          type: string
        tenantId:
          type: string
        virtualNetworkName:
          type: string
      type: object
    DockerRegistrySubmissionEndpoint_allOf:
      properties:
        imageName:
          type: string
        imageTag:
          type: string
      type: object
    OpenStackCloud_allOf:
      properties:
        domainName:
          type: string
        keystoneHostname:
          type: string
        keystonePassword:
          type: string
        keystonePort:
          format: int32
          type: integer
        keystoneProtocol:
          type: string
        keystoneUsername:
          type: string
        keystoneVersion:
          type: string
        natImageId:
          type: string
        natInstanceType:
          type: string
        storageServiceHostname:
          type: string
        storageServicePort:
          format: int32
          type: integer
        storageServiceProtocol:
          type: string
        storageServiceUsername:
          type: string
        storageServicePassword:
          type: string
        tenant:
          type: string
        tenantId:
          maxLength: 255
          minLength: 1
          type: string
      type: object
    PathBasedSubmissionEndpoint_allOf:
      properties:
        remotePath:
          type: string
        subtype:
          type: string
      type: object
    VCloudRestCloud_allOf:
      properties:
        gpuProfileTypes:
          items:
            enum:
            - M10_0Q
            - M10_1Q
            - M10_2Q
            - M10_4Q
            - V100D_2Q
            - V100D_4Q
            type: string
            xml:
              name: gpuProfileType
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        hostname:
          type: string
        password:
          type: string
        port:
          format: int32
          type: integer
        protocol:
          type: string
        remoteAccessInternalIp:
          type: string
        remoteAccessPort:
          format: int32
          type: integer
        storageServiceHostname:
          type: string
        storageServicePassword:
          type: string
        storageServicePort:
          format: int32
          type: integer
        storageServiceProtocol:
          type: string
        storageServiceUsername:
          type: string
        username:
          type: string
        vsphereApiVersion:
          maxLength: 6
          minLength: 1
          type: string
        vsphereHost:
          type: string
        vspherePort:
          format: int32
          type: integer
      type: object
    VCloudRestVirtualizationRealm_allOf:
      properties:
        organization:
          type: string
        organizationVdc:
          type: string
        vdcNetworkQuota:
          format: int32
          type: integer
      type: object
    InputPart_mediaType:
      properties:
        type:
          type: string
        subtype:
          type: string
        parameters:
          additionalProperties:
            type: string
          type: object
        wildcardSubtype:
          type: boolean
        wildcardType:
          type: boolean
      type: object
    InputSFTPSubmissionEndpointForAssetSubmission_allOf:
      properties:
        remotePath:
          type: string
        useUserDirectoryAsRoot:
          type: boolean
      type: object
    InputOpenStackCloud_allOf:
      properties:
        domainName:
          type: string
        keystoneHostname:
          type: string
        keystonePassword:
          type: string
        keystonePort:
          format: int32
          type: integer
        keystoneProtocol:
          type: string
        keystoneUsername:
          type: string
        keystoneVersion:
          type: string
        natImageId:
          type: string
        natInstanceType:
          type: string
        tenant:
          type: string
        tenantId:
          maxLength: 255
          minLength: 1
          type: string
      type: object
    InputVCloudRestCloud_allOf:
      properties:
        hostname:
          type: string
        password:
          type: string
        port:
          format: int32
          type: integer
        protocol:
          type: string
        remoteAccessInternalIp:
          type: string
        remoteAccessPort:
          format: int32
          type: integer
        username:
          type: string
        gpuProfileTypes:
          items:
            enum:
            - M10_0Q
            - M10_1Q
            - M10_2Q
            - M10_4Q
            - V100D_2Q
            - V100D_4Q
            type: string
            xml:
              name: gpuProfileType
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        vsphereApiVersion:
          maxLength: 6
          minLength: 1
          type: string
        vsphereHost:
          type: string
        vspherePort:
          format: int32
          type: integer
      type: object
    FullAwsCloud_allOf:
      properties:
        accessKey:
          type: string
        natImageId:
          type: string
        natInstanceType:
          type: string
        ownerId:
          type: string
        regionName:
          type: string
      type: object
    FullAzureCloud_allOf:
      properties:
        clientId:
          type: string
        environment:
          enum:
          - AZURE
          - AZURE_US_GOVERNMENT
          type: string
        regionName:
          enum:
          - US_EAST
          - DOD_US_CENTRAL
          - DOD_US_EAST
          - GOV_US_VIRGINIA
          - GOV_US_TEXAS
          type: string
        subscriptionId:
          type: string
        tenant:
          type: string
        publicContainerUrl:
          type: string
      type: object
    FullOpenStackCloud_allOf:
      properties:
        domainName:
          type: string
        keystoneHostname:
          type: string
        keystonePort:
          format: int32
          type: integer
        keystoneProtocol:
          type: string
        keystoneUsername:
          type: string
        keystoneVersion:
          type: string
        natImageId:
          type: string
        natInstanceType:
          type: string
        tenant:
          type: string
        tenantId:
          maxLength: 255
          minLength: 1
          type: string
          xml:
            name: tenant
      type: object
    FullVCloudRestCloud_allOf:
      properties:
        gpuProfileTypes:
          items:
            enum:
            - M10_0Q
            - M10_1Q
            - M10_2Q
            - M10_4Q
            - V100D_2Q
            - V100D_4Q
            type: string
            xml:
              name: gpuProfileType
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        hostname:
          type: string
        port:
          format: int32
          type: integer
        protocol:
          type: string
        remoteAccessInternalIp:
          type: string
        remoteAccessPort:
          format: int32
          type: integer
        username:
          type: string
        vsphereApiVersion:
          maxLength: 6
          minLength: 1
          type: string
        vsphereHost:
          type: string
        vspherePort:
          format: int32
          type: integer
      type: object
    AwsRegisterCloudSpaceRequest_allOf:
      properties:
        accountId:
          type: string
        region:
          type: string
        vpcId:
          type: string
        userKeyName:
          type: string
        networkSecurityGroupMap:
          additionalProperties:
            type: string
            xml:
              name: name
          type: object
      type: object
    AzureRegisterCloudSpaceRequest_allOf:
      properties:
        accountId:
          type: string
        environment:
          enum:
          - AZURE
          - AZURE_US_GOVERNMENT
          type: string
        localStorageResourceGroupName:
          type: string
        localStorageKey:
          type: string
        region:
          enum:
          - US_EAST
          - DOD_US_CENTRAL
          - DOD_US_EAST
          - GOV_US_VIRGINIA
          - GOV_US_TEXAS
          type: string
        resourceGroupName:
          type: string
        tenantId:
          type: string
        virtualNetworkName:
          type: string
        localStorageName:
          type: string
      type: object
    VCloudRestRegisterCloudSpaceRequest_allOf:
      properties:
        localStorageName:
          type: string
        organization:
          type: string
        organizationVdc:
          type: string
      type: object
    InputAwsVirtualizationRealm_allOf:
      properties:
        region:
          type: string
        vpcId:
          type: string
      type: object
    InputAzureVirtualizationRealm_allOf:
      properties:
        publicContainerUrl:
          type: string
        resourceGroupName:
          type: string
        tenantId:
          type: string
        virtualNetworkName:
          type: string
      type: object
    AwsCloudSpaceRequest_allOf:
      properties:
        natImageId:
          type: string
        natInstanceType:
          type: string
      type: object
    AzureCloudSpaceRequest_allOf:
      properties:
        natImageReference:
          $ref: '#/components/schemas/ImageReferenceDTO'
        natInstanceType:
          type: string
      type: object
    OpenStackCloudSpaceRequest_allOf:
      properties:
        natFlavorType:
          maxLength: 255
          minLength: 1
          type: string
        natImageId:
          type: string
        dnsServerIpAddresses:
          type: string
        externalNetworkName:
          maxLength: 255
          minLength: 1
          type: string
      type: object
    VCloudRestCloudSpaceRequest_allOf:
      properties:
        providerVdcName:
          type: string
        vdcNetworkPoolName:
          type: string
        username:
          type: string
        password:
          type: string
        emailAddress:
          type: string
        externalNetworkName:
          type: string
        localCatalogName:
          type: string
        vdcNetworkQuota:
          format: int32
          type: integer
      type: object
    AwsCloudResources_allOf:
      properties:
        availabilityZoneNames:
          items:
            type: string
            xml:
              name: availabilityZoneName
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        natImageNames:
          items:
            type: string
            xml:
              name: natImageName
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        regionNames:
          items:
            type: string
            xml:
              name: regionName
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      type: object
    AzureCloudResources_allOf:
      properties:
        images:
          items:
            $ref: '#/components/schemas/ImageReferenceDTO'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      type: object
    OpenStackCloudResources_allOf:
      properties:
        flavorTypeNames:
          items:
            type: string
            xml:
              name: flavorTypeName
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        natImageNames:
          items:
            type: string
            xml:
              name: flavorTypeName
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      type: object
    VCloudCloudResources_allOf:
      properties:
        externalNetworkNames:
          items:
            type: string
            xml:
              name: externalNetworkName
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        providerVdcNames:
          items:
            type: string
            xml:
              name: providerVdcName
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        vdcNetworkPoolNames:
          items:
            type: string
            xml:
              name: vdcNetworkPoolName
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      type: object
    ContainerComponent_allOf:
      properties:
        configuration:
          $ref: '#/components/schemas/ContainerConfiguration'
      type: object
    Device_allOf:
      properties:
        hostname:
          type: string
        ipAddress:
          type: string
        macAddress:
          type: string
      type: object
    PhysicalHost_allOf:
      properties:
        physicalMachine:
          $ref: '#/components/schemas/PhysicalMachine'
        ipAddress:
          type: string
        macAddress:
          type: string
        hostname:
          type: string
      type: object
    InputContainerComponent_allOf:
      properties:
        configuration:
          $ref: '#/components/schemas/InputContainerConfiguration'
      type: object
    InputDevice_allOf:
      properties:
        id:
          format: int32
          type: integer
      type: object
    InputPhysicalHostFull_allOf:
      properties:
        id:
          format: int32
          type: integer
        name:
          type: string
        physicalMachine:
          $ref: '#/components/schemas/InputPhysicalMachine'
        components:
          items:
            $ref: '#/components/schemas/InputAbstractComponent'
          type: array
          uniqueItems: true
      type: object
    InputVirtualHostFull_allOf:
      properties:
        id:
          format: int32
          type: integer
        templateProfile:
          $ref: '#/components/schemas/InputTemplateProfile'
        components:
          items:
            $ref: '#/components/schemas/InputAbstractComponent'
          type: array
          uniqueItems: true
        name:
          type: string
      type: object
    FullDeployment_allOf:
      properties:
        recurringSchedules:
          items:
            $ref: '#/components/schemas/MinimalRecurringSchedule'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        scenario:
          items:
            $ref: '#/components/schemas/GeneralScenario'
          maxItems: 1
          minItems: 0
          type: array
          uniqueItems: true
          xml:
            name: scenarios
            wrapped: true
        testBundles:
          items:
            $ref: '#/components/schemas/MinimalTestBundle'
          maxItems: 1
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        deploymentHosts:
          items:
            $ref: '#/components/schemas/MinimalDeploymentHost'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      type: object
    ContainerInstallation_allOf:
      properties:
        assetType:
          enum:
          - DOCKER
          - OCI
          type: string
        runArguments:
          type: string
      type: object
    SoftwareInstallation_allOf:
      properties:
        assetType:
          enum:
          - APPLICATION
          - SOURCE_CODE
          - TEST_TOOL
          type: string
        rebootDelaySeconds:
          format: int32
          type: integer
        rebootRequired:
          type: boolean
      type: object
    FullAppliance_allOf:
      properties:
        components:
          items:
            $ref: '#/components/schemas/MinimalAbstractComponent'
          type: array
          uniqueItems: true
        templateProfile:
          $ref: '#/components/schemas/MinimalTemplateProfile'
      type: object
    FullDevice_allOf:
      properties:
        components:
          items:
            $ref: '#/components/schemas/MinimalAbstractComponent'
          type: array
          uniqueItems: true
        hostname:
          type: string
        ipAddress:
          type: string
        macAddress:
          type: string
      type: object
    FullPhysicalHost_allOf:
      properties:
        components:
          items:
            $ref: '#/components/schemas/MinimalAbstractComponent'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        physicalMachine:
          $ref: '#/components/schemas/GeneralPhysicalMachine'
      type: object
    FullPhysicalMachine_allOf:
      properties:
        hostName:
          type: string
          xml:
            name: hostname
        ipAddress:
          type: string
        macAddress:
          type: string
        cpuCount:
          format: int32
          minimum: 1
          type: integer
        ram:
          format: int32
          minimum: 1
          type: integer
        architecture:
          enum:
          - X86
          - X64
          - ARM
          - SPARC
          - PPCLE
          type: string
        bits:
          enum:
          - BITS32
          - BITS64
          type: string
        operatingSystem:
          enum:
          - AMAZON_LINUX_2_LATEST_X64
          - AMAZON_LINUX_LATEST_X64
          - CENTOS_6_X64
          - CENTOS_6_X86
          - CENTOS_7_X64
          - CENTOS_8_X64
          - CORE_OS_1221_X64
          - F5_BIGIP_X64
          - FEDORA_23_X64
          - FORTISIEM
          - GENERIC_LINUX_X64
          - GENERIC_WINDOWS_X64
          - KALI_ROLLING_X64
          - ORACLE_LINUX_6_X64
          - ORACLE_LINUX_7_X64
          - ORACLE_LINUX_8_X64
          - OS_X_10
          - OS_X_11
          - PALO_ALTO_NETWORKS_PAN_OS_X64
          - RASPBIAN
          - RHEL_5_X64
          - RHEL_5_X86
          - RHEL_6_X64
          - RHEL_6_X86
          - RHEL_7_ATOMIC_HOST
          - RHEL_7_PPCLE
          - RHEL_7_X64
          - RHEL_8_X64
          - SOLARIS_11_X64
          - UBUNTU_12_X64
          - UBUNTU_14_X64
          - UBUNTU_16_X64
          - UBUNTU_18_X64
          - UBUNTU_20_X64
          - UBUNTU_CORE
          - VYOS_1_1_X64
          - VYOS_1_2_X64
          - VYOS_1_3_X64
          - VYOS_ROLLING_X64
          - WINDOWS_10_X64
          - WINDOWS_7_X64
          - WINDOWS_7_X86
          - WINDOWS_8_X64
          - WINDOWS_SERVER_2008_R2_X64
          - WINDOWS_SERVER_2008_X64
          - WINDOWS_SERVER_2012_R2_X64
          - WINDOWS_SERVER_2012_X64
          - WINDOWS_SERVER_2016_X64
          - WINDOWS_SERVER_2019_X64
          - WINDOWS_SERVER_2019_CORE_X64
          - WINDOWS_XP_X86
          type: string
        remoteAccessCapable:
          type: boolean
        remoteAccessTemplates:
          items:
            $ref: '#/components/schemas/MinimalRemoteAccessTemplate'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        baseDisks:
          items:
            $ref: '#/components/schemas/FullDisk'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      type: object
    FullScenario_allOf:
      properties:
        scenarioHosts:
          items:
            $ref: '#/components/schemas/MinimalScenarioHost'
          maxItems: 2147483647
          minItems: 1
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        prepareScenarioConfiguration:
          $ref: '#/components/schemas/MinimalConfiguration'
        teardownScenarioConfiguration:
          $ref: '#/components/schemas/MinimalConfiguration'
      type: object
    FullSoftwareAsset_allOf:
      properties:
        architecture:
          enum:
          - X86
          - X64
          - ARM
          - SPARC
          - PPCLE
          type: string
        bits:
          enum:
          - BITS32
          - BITS64
          type: string
        dependencies:
          type: string
        osFamily:
          enum:
          - LINUX
          - OS_X
          - SOLARIS
          - WINDOWS
          type: string
        productFamily:
          type: string
        requiredCpu:
          format: int32
          type: integer
        requiredCpuSpeed:
          format: int32
          type: integer
        applicationType:
          type: string
        vendorMessage:
          type: string
        buildEngine:
          type: string
        buildScript:
          type: string
        buildScriptName:
          type: string
        checkoutScript:
          type: string
        checkoutScriptName:
          type: string
        deployScript:
          type: string
        deployScriptName:
          type: string
        installScript:
          type: string
        installScriptName:
          type: string
        requiredDisk:
          format: int32
          type: integer
        requiredRam:
          format: int32
          type: integer
        softwareType:
          enum:
          - APPLICATION
          - SOURCE_CODE
          - TEST_TOOL
          type: string
        version:
          type: string
        sourceCodeType:
          type: string
        vendor:
          type: string
      type: object
    FullSoftwareAssetBundle_allOf:
      properties:
        softwareComponents:
          items:
            $ref: '#/components/schemas/MinimalSoftwareComponent'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
      type: object
    FullVirtualHost_allOf:
      properties:
        components:
          items:
            $ref: '#/components/schemas/MinimalAbstractComponent'
          type: array
          uniqueItems: true
          xml:
            wrapped: true
        templateProfile:
          $ref: '#/components/schemas/MinimalTemplateProfile'
      type: object
    FullVirtualService_allOf:
      properties:
        basePath:
          type: string
        portString:
          type: string
        serviceImageFile:
          type: string
        serviceModelFile:
          type: string
      type: object
    MinimalContainerComponent_allOf:
      properties:
        configuration:
          $ref: '#/components/schemas/MinimalContainerConfiguration'
      type: object
    ActiveCompositionStatus_allOf:
      properties:
        deploymentRunId:
          format: int32
          type: integer
        deploymentRunStatus:
          enum:
          - UNKNOWN
          - SCHEDULED
          - SUBMITTED
          - PROVISIONING_HOSTS
          - HOSTS_PROVISIONED
          - RESERVED
          - RELEASE_REQUESTED
          - RELEASING
          - TESTING
          - TESTED
          - REDEPLOYING_HOSTS
          - COMPLETED
          - CANCELED
          type: string
        deploymentRunHost:
          items:
            $ref: '#/components/schemas/MinimalDeploymentRunHost'
          type: array
          xml:
            name: deploymentRunHosts
            wrapped: true
      type: object
    InactiveCompositionStatus_allOf:
      properties:
        scenarioHosts:
          items:
            $ref: '#/components/schemas/MinimalScenarioHost'
          type: array
          xml:
            wrapped: true
      type: object
    InputAppliance_allOf:
      properties:
        name:
          type: string
        templateProfile:
          $ref: '#/components/schemas/InputTemplateProfile'
      type: object
    InputPhysicalHost_allOf:
      properties:
        name:
          type: string
        physicalMachine:
          $ref: '#/components/schemas/InputPhysicalMachine'
        components:
          items:
            $ref: '#/components/schemas/InputAbstractComponent'
          type: array
          uniqueItems: true
      type: object
    InputVirtualHost_allOf:
      properties:
        components:
          items:
            $ref: '#/components/schemas/InputAbstractComponent'
          type: array
          uniqueItems: true
        name:
          type: string
        templateProfile:
          $ref: '#/components/schemas/InputTemplateProfile'
      type: object
    FullAwsVirtualizationRealm_allOf:
      properties:
        natImageId:
          type: string
        natInstanceType:
          type: string
        region:
          type: string
        securityGroupId:
          type: string
        virtualNetworkName:
          type: string
        vpcId:
          type: string
        vpcSubnetName:
          type: string
      type: object
    AddAwsNetworkRequest_allOf:
      properties:
        natInstanceType:
          type: string
        natImageId:
          type: string
      type: object
    AddAzureNetworkRequest_allOf:
      properties:
        natInstanceType:
          maxLength: 255
          minLength: 1
          type: string
        natImageReference:
          $ref: '#/components/schemas/ImageReferenceDTO'
      type: object
    AddOpenStackNetworkRequest_allOf:
      properties:
        natImageId:
          type: string
        natInstanceFlavor:
          type: string
      type: object
    AddVcloudNetworkRequest_allOf:
      properties:
        externalNetworkName:
          type: string
      type: object
    AwsClient_allOf:
      properties:
        region:
          type: string
      type: object
    OpenStackClient_allOf:
      properties:
        keystoneVersion:
          type: string
        tenantName:
          type: string
      type: object
    VCloudClient_allOf:
      properties:
        orgName:
          type: string
        vdcName:
          type: string
      type: object
  securitySchemes:
    APIKeyHeader:
      in: header
      name: token
      type: apiKey
    Username:
      in: header
      name: username
      type: apiKey
x-tagGroups:
- name: General
  tags:
  - Introduction
  - HTTP Requests
  - Response Codes
  - Parameters
  - Authentication
  - Frequently Asked Questions
  - Change Log
- name: Compute
  tags:
  - Clouds
  - Virtualization Realms
  - Deployment Runs
  - Templates
  - Test Tools
  - Compositions
- name: Services
  tags:
  - Storage
- name: Assets
  tags:
  - Deployments
  - Scenarios
  - Systems
  - Software Assets
  - Test Assets
  - Container Assets
  - Software Bundles
  - Import
- name: Resource Management
  tags:
  - Teams
  - Projects
  - Users
- name: System Administration
  tags:
  - Categories
  - System Assets
