/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// InputRecurringSchedule struct for InputRecurringSchedule
type InputRecurringSchedule struct {
	Timezone             string                    `json:"timezone"`
	Schedule             string                    `json:"schedule"`
	MaxIterations        *int32                    `json:"maxIterations,omitempty"`
	EndDate              *int32                    `json:"endDate,omitempty"`
	DeploymentRunOptions InputDeploymentRunOptions `json:"deploymentRunOptions"`
}

// NewInputRecurringSchedule instantiates a new InputRecurringSchedule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputRecurringSchedule(timezone string, schedule string, deploymentRunOptions InputDeploymentRunOptions) *InputRecurringSchedule {
	this := InputRecurringSchedule{}
	this.Timezone = timezone
	this.Schedule = schedule
	this.DeploymentRunOptions = deploymentRunOptions
	return &this
}

// NewInputRecurringScheduleWithDefaults instantiates a new InputRecurringSchedule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputRecurringScheduleWithDefaults() *InputRecurringSchedule {
	this := InputRecurringSchedule{}
	return &this
}

// GetTimezone returns the Timezone field value
func (o *InputRecurringSchedule) GetTimezone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value
// and a boolean to check if the value has been set.
func (o *InputRecurringSchedule) GetTimezoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timezone, true
}

// SetTimezone sets field value
func (o *InputRecurringSchedule) SetTimezone(v string) {
	o.Timezone = v
}

// GetSchedule returns the Schedule field value
func (o *InputRecurringSchedule) GetSchedule() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value
// and a boolean to check if the value has been set.
func (o *InputRecurringSchedule) GetScheduleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Schedule, true
}

// SetSchedule sets field value
func (o *InputRecurringSchedule) SetSchedule(v string) {
	o.Schedule = v
}

// GetMaxIterations returns the MaxIterations field value if set, zero value otherwise.
func (o *InputRecurringSchedule) GetMaxIterations() int32 {
	if o == nil || o.MaxIterations == nil {
		var ret int32
		return ret
	}
	return *o.MaxIterations
}

// GetMaxIterationsOk returns a tuple with the MaxIterations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputRecurringSchedule) GetMaxIterationsOk() (*int32, bool) {
	if o == nil || o.MaxIterations == nil {
		return nil, false
	}
	return o.MaxIterations, true
}

// HasMaxIterations returns a boolean if a field has been set.
func (o *InputRecurringSchedule) HasMaxIterations() bool {
	if o != nil && o.MaxIterations != nil {
		return true
	}

	return false
}

// SetMaxIterations gets a reference to the given int32 and assigns it to the MaxIterations field.
func (o *InputRecurringSchedule) SetMaxIterations(v int32) {
	o.MaxIterations = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *InputRecurringSchedule) GetEndDate() int32 {
	if o == nil || o.EndDate == nil {
		var ret int32
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputRecurringSchedule) GetEndDateOk() (*int32, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *InputRecurringSchedule) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given int32 and assigns it to the EndDate field.
func (o *InputRecurringSchedule) SetEndDate(v int32) {
	o.EndDate = &v
}

// GetDeploymentRunOptions returns the DeploymentRunOptions field value
func (o *InputRecurringSchedule) GetDeploymentRunOptions() InputDeploymentRunOptions {
	if o == nil {
		var ret InputDeploymentRunOptions
		return ret
	}

	return o.DeploymentRunOptions
}

// GetDeploymentRunOptionsOk returns a tuple with the DeploymentRunOptions field value
// and a boolean to check if the value has been set.
func (o *InputRecurringSchedule) GetDeploymentRunOptionsOk() (*InputDeploymentRunOptions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeploymentRunOptions, true
}

// SetDeploymentRunOptions sets field value
func (o *InputRecurringSchedule) SetDeploymentRunOptions(v InputDeploymentRunOptions) {
	o.DeploymentRunOptions = v
}

func (o InputRecurringSchedule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["timezone"] = o.Timezone
	}
	if true {
		toSerialize["schedule"] = o.Schedule
	}
	if o.MaxIterations != nil {
		toSerialize["maxIterations"] = o.MaxIterations
	}
	if o.EndDate != nil {
		toSerialize["endDate"] = o.EndDate
	}
	if true {
		toSerialize["deploymentRunOptions"] = o.DeploymentRunOptions
	}
	return json.Marshal(toSerialize)
}

type NullableInputRecurringSchedule struct {
	value *InputRecurringSchedule
	isSet bool
}

func (v NullableInputRecurringSchedule) Get() *InputRecurringSchedule {
	return v.value
}

func (v *NullableInputRecurringSchedule) Set(val *InputRecurringSchedule) {
	v.value = val
	v.isSet = true
}

func (v NullableInputRecurringSchedule) IsSet() bool {
	return v.isSet
}

func (v *NullableInputRecurringSchedule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputRecurringSchedule(val *InputRecurringSchedule) *NullableInputRecurringSchedule {
	return &NullableInputRecurringSchedule{value: val, isSet: true}
}

func (v NullableInputRecurringSchedule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputRecurringSchedule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
