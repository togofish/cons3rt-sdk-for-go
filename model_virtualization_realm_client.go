/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// VirtualizationRealmClient struct for VirtualizationRealmClient
type VirtualizationRealmClient struct {
	Username              string  `json:"username"`
	Password              string  `json:"password"`
	AcceptAllCerts        *bool   `json:"acceptAllCerts,omitempty"`
	AcceptSelfSignedCerts *bool   `json:"acceptSelfSignedCerts,omitempty"`
	Host                  *string `json:"host,omitempty"`
	Port                  *int32  `json:"port,omitempty"`
	Protocol              *string `json:"protocol,omitempty"`
	Subtype               string  `json:"subtype"`
}

// NewVirtualizationRealmClient instantiates a new VirtualizationRealmClient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualizationRealmClient(username string, password string, subtype string) *VirtualizationRealmClient {
	this := VirtualizationRealmClient{}
	this.Username = username
	this.Password = password
	this.Subtype = subtype
	return &this
}

// NewVirtualizationRealmClientWithDefaults instantiates a new VirtualizationRealmClient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualizationRealmClientWithDefaults() *VirtualizationRealmClient {
	this := VirtualizationRealmClient{}
	return &this
}

// GetUsername returns the Username field value
func (o *VirtualizationRealmClient) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *VirtualizationRealmClient) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *VirtualizationRealmClient) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *VirtualizationRealmClient) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *VirtualizationRealmClient) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *VirtualizationRealmClient) SetPassword(v string) {
	o.Password = v
}

// GetAcceptAllCerts returns the AcceptAllCerts field value if set, zero value otherwise.
func (o *VirtualizationRealmClient) GetAcceptAllCerts() bool {
	if o == nil || o.AcceptAllCerts == nil {
		var ret bool
		return ret
	}
	return *o.AcceptAllCerts
}

// GetAcceptAllCertsOk returns a tuple with the AcceptAllCerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealmClient) GetAcceptAllCertsOk() (*bool, bool) {
	if o == nil || o.AcceptAllCerts == nil {
		return nil, false
	}
	return o.AcceptAllCerts, true
}

// HasAcceptAllCerts returns a boolean if a field has been set.
func (o *VirtualizationRealmClient) HasAcceptAllCerts() bool {
	if o != nil && o.AcceptAllCerts != nil {
		return true
	}

	return false
}

// SetAcceptAllCerts gets a reference to the given bool and assigns it to the AcceptAllCerts field.
func (o *VirtualizationRealmClient) SetAcceptAllCerts(v bool) {
	o.AcceptAllCerts = &v
}

// GetAcceptSelfSignedCerts returns the AcceptSelfSignedCerts field value if set, zero value otherwise.
func (o *VirtualizationRealmClient) GetAcceptSelfSignedCerts() bool {
	if o == nil || o.AcceptSelfSignedCerts == nil {
		var ret bool
		return ret
	}
	return *o.AcceptSelfSignedCerts
}

// GetAcceptSelfSignedCertsOk returns a tuple with the AcceptSelfSignedCerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealmClient) GetAcceptSelfSignedCertsOk() (*bool, bool) {
	if o == nil || o.AcceptSelfSignedCerts == nil {
		return nil, false
	}
	return o.AcceptSelfSignedCerts, true
}

// HasAcceptSelfSignedCerts returns a boolean if a field has been set.
func (o *VirtualizationRealmClient) HasAcceptSelfSignedCerts() bool {
	if o != nil && o.AcceptSelfSignedCerts != nil {
		return true
	}

	return false
}

// SetAcceptSelfSignedCerts gets a reference to the given bool and assigns it to the AcceptSelfSignedCerts field.
func (o *VirtualizationRealmClient) SetAcceptSelfSignedCerts(v bool) {
	o.AcceptSelfSignedCerts = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *VirtualizationRealmClient) GetHost() string {
	if o == nil || o.Host == nil {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealmClient) GetHostOk() (*string, bool) {
	if o == nil || o.Host == nil {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *VirtualizationRealmClient) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *VirtualizationRealmClient) SetHost(v string) {
	o.Host = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *VirtualizationRealmClient) GetPort() int32 {
	if o == nil || o.Port == nil {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealmClient) GetPortOk() (*int32, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *VirtualizationRealmClient) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *VirtualizationRealmClient) SetPort(v int32) {
	o.Port = &v
}

// GetProtocol returns the Protocol field value if set, zero value otherwise.
func (o *VirtualizationRealmClient) GetProtocol() string {
	if o == nil || o.Protocol == nil {
		var ret string
		return ret
	}
	return *o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealmClient) GetProtocolOk() (*string, bool) {
	if o == nil || o.Protocol == nil {
		return nil, false
	}
	return o.Protocol, true
}

// HasProtocol returns a boolean if a field has been set.
func (o *VirtualizationRealmClient) HasProtocol() bool {
	if o != nil && o.Protocol != nil {
		return true
	}

	return false
}

// SetProtocol gets a reference to the given string and assigns it to the Protocol field.
func (o *VirtualizationRealmClient) SetProtocol(v string) {
	o.Protocol = &v
}

// GetSubtype returns the Subtype field value
func (o *VirtualizationRealmClient) GetSubtype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subtype
}

// GetSubtypeOk returns a tuple with the Subtype field value
// and a boolean to check if the value has been set.
func (o *VirtualizationRealmClient) GetSubtypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subtype, true
}

// SetSubtype sets field value
func (o *VirtualizationRealmClient) SetSubtype(v string) {
	o.Subtype = v
}

func (o VirtualizationRealmClient) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if o.AcceptAllCerts != nil {
		toSerialize["acceptAllCerts"] = o.AcceptAllCerts
	}
	if o.AcceptSelfSignedCerts != nil {
		toSerialize["acceptSelfSignedCerts"] = o.AcceptSelfSignedCerts
	}
	if o.Host != nil {
		toSerialize["host"] = o.Host
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.Protocol != nil {
		toSerialize["protocol"] = o.Protocol
	}
	if true {
		toSerialize["subtype"] = o.Subtype
	}
	return json.Marshal(toSerialize)
}

type NullableVirtualizationRealmClient struct {
	value *VirtualizationRealmClient
	isSet bool
}

func (v NullableVirtualizationRealmClient) Get() *VirtualizationRealmClient {
	return v.value
}

func (v *NullableVirtualizationRealmClient) Set(val *VirtualizationRealmClient) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualizationRealmClient) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualizationRealmClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualizationRealmClient(val *VirtualizationRealmClient) *NullableVirtualizationRealmClient {
	return &NullableVirtualizationRealmClient{value: val, isSet: true}
}

func (v NullableVirtualizationRealmClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualizationRealmClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
