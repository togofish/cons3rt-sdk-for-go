/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// ContainerConfiguration struct for ContainerConfiguration
type ContainerConfiguration struct {
	Id               *int32                  `json:"id,omitempty"`
	ContainerName    string                  `json:"containerName"`
	ContainerRuntime *string                 `json:"containerRuntime,omitempty"`
	EnvironmentMap   *map[string]string      `json:"environmentMap,omitempty"`
	Mounts           *[]ContainerMount       `json:"mounts,omitempty"`
	PortMappings     *[]ContainerPortMapping `json:"portMappings,omitempty"`
	RunArguments     *string                 `json:"runArguments,omitempty"`
	RunDisabled      *bool                   `json:"runDisabled,omitempty"`
}

// NewContainerConfiguration instantiates a new ContainerConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerConfiguration(containerName string) *ContainerConfiguration {
	this := ContainerConfiguration{}
	this.ContainerName = containerName
	return &this
}

// NewContainerConfigurationWithDefaults instantiates a new ContainerConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerConfigurationWithDefaults() *ContainerConfiguration {
	this := ContainerConfiguration{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ContainerConfiguration) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerConfiguration) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ContainerConfiguration) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ContainerConfiguration) SetId(v int32) {
	o.Id = &v
}

// GetContainerName returns the ContainerName field value
func (o *ContainerConfiguration) GetContainerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContainerName
}

// GetContainerNameOk returns a tuple with the ContainerName field value
// and a boolean to check if the value has been set.
func (o *ContainerConfiguration) GetContainerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContainerName, true
}

// SetContainerName sets field value
func (o *ContainerConfiguration) SetContainerName(v string) {
	o.ContainerName = v
}

// GetContainerRuntime returns the ContainerRuntime field value if set, zero value otherwise.
func (o *ContainerConfiguration) GetContainerRuntime() string {
	if o == nil || o.ContainerRuntime == nil {
		var ret string
		return ret
	}
	return *o.ContainerRuntime
}

// GetContainerRuntimeOk returns a tuple with the ContainerRuntime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerConfiguration) GetContainerRuntimeOk() (*string, bool) {
	if o == nil || o.ContainerRuntime == nil {
		return nil, false
	}
	return o.ContainerRuntime, true
}

// HasContainerRuntime returns a boolean if a field has been set.
func (o *ContainerConfiguration) HasContainerRuntime() bool {
	if o != nil && o.ContainerRuntime != nil {
		return true
	}

	return false
}

// SetContainerRuntime gets a reference to the given string and assigns it to the ContainerRuntime field.
func (o *ContainerConfiguration) SetContainerRuntime(v string) {
	o.ContainerRuntime = &v
}

// GetEnvironmentMap returns the EnvironmentMap field value if set, zero value otherwise.
func (o *ContainerConfiguration) GetEnvironmentMap() map[string]string {
	if o == nil || o.EnvironmentMap == nil {
		var ret map[string]string
		return ret
	}
	return *o.EnvironmentMap
}

// GetEnvironmentMapOk returns a tuple with the EnvironmentMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerConfiguration) GetEnvironmentMapOk() (*map[string]string, bool) {
	if o == nil || o.EnvironmentMap == nil {
		return nil, false
	}
	return o.EnvironmentMap, true
}

// HasEnvironmentMap returns a boolean if a field has been set.
func (o *ContainerConfiguration) HasEnvironmentMap() bool {
	if o != nil && o.EnvironmentMap != nil {
		return true
	}

	return false
}

// SetEnvironmentMap gets a reference to the given map[string]string and assigns it to the EnvironmentMap field.
func (o *ContainerConfiguration) SetEnvironmentMap(v map[string]string) {
	o.EnvironmentMap = &v
}

// GetMounts returns the Mounts field value if set, zero value otherwise.
func (o *ContainerConfiguration) GetMounts() []ContainerMount {
	if o == nil || o.Mounts == nil {
		var ret []ContainerMount
		return ret
	}
	return *o.Mounts
}

// GetMountsOk returns a tuple with the Mounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerConfiguration) GetMountsOk() (*[]ContainerMount, bool) {
	if o == nil || o.Mounts == nil {
		return nil, false
	}
	return o.Mounts, true
}

// HasMounts returns a boolean if a field has been set.
func (o *ContainerConfiguration) HasMounts() bool {
	if o != nil && o.Mounts != nil {
		return true
	}

	return false
}

// SetMounts gets a reference to the given []ContainerMount and assigns it to the Mounts field.
func (o *ContainerConfiguration) SetMounts(v []ContainerMount) {
	o.Mounts = &v
}

// GetPortMappings returns the PortMappings field value if set, zero value otherwise.
func (o *ContainerConfiguration) GetPortMappings() []ContainerPortMapping {
	if o == nil || o.PortMappings == nil {
		var ret []ContainerPortMapping
		return ret
	}
	return *o.PortMappings
}

// GetPortMappingsOk returns a tuple with the PortMappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerConfiguration) GetPortMappingsOk() (*[]ContainerPortMapping, bool) {
	if o == nil || o.PortMappings == nil {
		return nil, false
	}
	return o.PortMappings, true
}

// HasPortMappings returns a boolean if a field has been set.
func (o *ContainerConfiguration) HasPortMappings() bool {
	if o != nil && o.PortMappings != nil {
		return true
	}

	return false
}

// SetPortMappings gets a reference to the given []ContainerPortMapping and assigns it to the PortMappings field.
func (o *ContainerConfiguration) SetPortMappings(v []ContainerPortMapping) {
	o.PortMappings = &v
}

// GetRunArguments returns the RunArguments field value if set, zero value otherwise.
func (o *ContainerConfiguration) GetRunArguments() string {
	if o == nil || o.RunArguments == nil {
		var ret string
		return ret
	}
	return *o.RunArguments
}

// GetRunArgumentsOk returns a tuple with the RunArguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerConfiguration) GetRunArgumentsOk() (*string, bool) {
	if o == nil || o.RunArguments == nil {
		return nil, false
	}
	return o.RunArguments, true
}

// HasRunArguments returns a boolean if a field has been set.
func (o *ContainerConfiguration) HasRunArguments() bool {
	if o != nil && o.RunArguments != nil {
		return true
	}

	return false
}

// SetRunArguments gets a reference to the given string and assigns it to the RunArguments field.
func (o *ContainerConfiguration) SetRunArguments(v string) {
	o.RunArguments = &v
}

// GetRunDisabled returns the RunDisabled field value if set, zero value otherwise.
func (o *ContainerConfiguration) GetRunDisabled() bool {
	if o == nil || o.RunDisabled == nil {
		var ret bool
		return ret
	}
	return *o.RunDisabled
}

// GetRunDisabledOk returns a tuple with the RunDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerConfiguration) GetRunDisabledOk() (*bool, bool) {
	if o == nil || o.RunDisabled == nil {
		return nil, false
	}
	return o.RunDisabled, true
}

// HasRunDisabled returns a boolean if a field has been set.
func (o *ContainerConfiguration) HasRunDisabled() bool {
	if o != nil && o.RunDisabled != nil {
		return true
	}

	return false
}

// SetRunDisabled gets a reference to the given bool and assigns it to the RunDisabled field.
func (o *ContainerConfiguration) SetRunDisabled(v bool) {
	o.RunDisabled = &v
}

func (o ContainerConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["containerName"] = o.ContainerName
	}
	if o.ContainerRuntime != nil {
		toSerialize["containerRuntime"] = o.ContainerRuntime
	}
	if o.EnvironmentMap != nil {
		toSerialize["environmentMap"] = o.EnvironmentMap
	}
	if o.Mounts != nil {
		toSerialize["mounts"] = o.Mounts
	}
	if o.PortMappings != nil {
		toSerialize["portMappings"] = o.PortMappings
	}
	if o.RunArguments != nil {
		toSerialize["runArguments"] = o.RunArguments
	}
	if o.RunDisabled != nil {
		toSerialize["runDisabled"] = o.RunDisabled
	}
	return json.Marshal(toSerialize)
}

type NullableContainerConfiguration struct {
	value *ContainerConfiguration
	isSet bool
}

func (v NullableContainerConfiguration) Get() *ContainerConfiguration {
	return v.value
}

func (v *NullableContainerConfiguration) Set(val *ContainerConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerConfiguration(val *ContainerConfiguration) *NullableContainerConfiguration {
	return &NullableContainerConfiguration{value: val, isSet: true}
}

func (v NullableContainerConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
