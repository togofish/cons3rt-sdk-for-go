/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// AzureVirtualizationRealm struct for AzureVirtualizationRealm
type AzureVirtualizationRealm struct {
	Environment        string  `json:"environment"`
	PublicContainerUrl *string `json:"publicContainerUrl,omitempty"`
	Region             string  `json:"region"`
	ResourceGroupName  string  `json:"resourceGroupName"`
	TenantId           string  `json:"tenantId"`
	VirtualNetworkName string  `json:"virtualNetworkName"`
	AccountId          string
	Cidr               string
	Description        string
	Name               string
	Password           string
	Username           string
}

// NewAzureVirtualizationRealm instantiates a new AzureVirtualizationRealm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureVirtualizationRealm(environment string, region string, resourceGroupName string, tenantId string, virtualNetworkName string, accountId string, cidr string, description string, name string, password string, username string) *AzureVirtualizationRealm {
	this := AzureVirtualizationRealm{}
	this.AccountId = accountId
	this.Cidr = cidr
	this.Description = description
	this.Name = name
	this.Password = password
	this.Username = username
	this.Environment = environment
	this.Region = region
	this.ResourceGroupName = resourceGroupName
	this.TenantId = tenantId
	this.VirtualNetworkName = virtualNetworkName
	return &this
}

// NewAzureVirtualizationRealmWithDefaults instantiates a new AzureVirtualizationRealm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureVirtualizationRealmWithDefaults() *AzureVirtualizationRealm {
	this := AzureVirtualizationRealm{}
	return &this
}

// GetEnvironment returns the Environment field value
func (o *AzureVirtualizationRealm) GetEnvironment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *AzureVirtualizationRealm) GetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *AzureVirtualizationRealm) SetEnvironment(v string) {
	o.Environment = v
}

// GetPublicContainerUrl returns the PublicContainerUrl field value if set, zero value otherwise.
func (o *AzureVirtualizationRealm) GetPublicContainerUrl() string {
	if o == nil || o.PublicContainerUrl == nil {
		var ret string
		return ret
	}
	return *o.PublicContainerUrl
}

// GetPublicContainerUrlOk returns a tuple with the PublicContainerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVirtualizationRealm) GetPublicContainerUrlOk() (*string, bool) {
	if o == nil || o.PublicContainerUrl == nil {
		return nil, false
	}
	return o.PublicContainerUrl, true
}

// HasPublicContainerUrl returns a boolean if a field has been set.
func (o *AzureVirtualizationRealm) HasPublicContainerUrl() bool {
	if o != nil && o.PublicContainerUrl != nil {
		return true
	}

	return false
}

// SetPublicContainerUrl gets a reference to the given string and assigns it to the PublicContainerUrl field.
func (o *AzureVirtualizationRealm) SetPublicContainerUrl(v string) {
	o.PublicContainerUrl = &v
}

// GetRegion returns the Region field value
func (o *AzureVirtualizationRealm) GetRegion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *AzureVirtualizationRealm) GetRegionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *AzureVirtualizationRealm) SetRegion(v string) {
	o.Region = v
}

// GetResourceGroupName returns the ResourceGroupName field value
func (o *AzureVirtualizationRealm) GetResourceGroupName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceGroupName
}

// GetResourceGroupNameOk returns a tuple with the ResourceGroupName field value
// and a boolean to check if the value has been set.
func (o *AzureVirtualizationRealm) GetResourceGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceGroupName, true
}

// SetResourceGroupName sets field value
func (o *AzureVirtualizationRealm) SetResourceGroupName(v string) {
	o.ResourceGroupName = v
}

// GetTenantId returns the TenantId field value
func (o *AzureVirtualizationRealm) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *AzureVirtualizationRealm) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *AzureVirtualizationRealm) SetTenantId(v string) {
	o.TenantId = v
}

// GetVirtualNetworkName returns the VirtualNetworkName field value
func (o *AzureVirtualizationRealm) GetVirtualNetworkName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VirtualNetworkName
}

// GetVirtualNetworkNameOk returns a tuple with the VirtualNetworkName field value
// and a boolean to check if the value has been set.
func (o *AzureVirtualizationRealm) GetVirtualNetworkNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VirtualNetworkName, true
}

// SetVirtualNetworkName sets field value
func (o *AzureVirtualizationRealm) SetVirtualNetworkName(v string) {
	o.VirtualNetworkName = v
}

func (o AzureVirtualizationRealm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["environment"] = o.Environment
	}
	if o.PublicContainerUrl != nil {
		toSerialize["publicContainerUrl"] = o.PublicContainerUrl
	}
	if true {
		toSerialize["region"] = o.Region
	}
	if true {
		toSerialize["resourceGroupName"] = o.ResourceGroupName
	}
	if true {
		toSerialize["tenantId"] = o.TenantId
	}
	if true {
		toSerialize["virtualNetworkName"] = o.VirtualNetworkName
	}
	return json.Marshal(toSerialize)
}

type NullableAzureVirtualizationRealm struct {
	value *AzureVirtualizationRealm
	isSet bool
}

func (v NullableAzureVirtualizationRealm) Get() *AzureVirtualizationRealm {
	return v.value
}

func (v *NullableAzureVirtualizationRealm) Set(val *AzureVirtualizationRealm) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureVirtualizationRealm) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureVirtualizationRealm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureVirtualizationRealm(val *AzureVirtualizationRealm) *NullableAzureVirtualizationRealm {
	return &NullableAzureVirtualizationRealm{value: val, isSet: true}
}

func (v NullableAzureVirtualizationRealm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureVirtualizationRealm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
