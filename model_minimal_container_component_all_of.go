/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// MinimalContainerComponentAllOf struct for MinimalContainerComponentAllOf
type MinimalContainerComponentAllOf struct {
	Configuration *MinimalContainerConfiguration `json:"configuration,omitempty"`
}

// NewMinimalContainerComponentAllOf instantiates a new MinimalContainerComponentAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMinimalContainerComponentAllOf() *MinimalContainerComponentAllOf {
	this := MinimalContainerComponentAllOf{}
	return &this
}

// NewMinimalContainerComponentAllOfWithDefaults instantiates a new MinimalContainerComponentAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMinimalContainerComponentAllOfWithDefaults() *MinimalContainerComponentAllOf {
	this := MinimalContainerComponentAllOf{}
	return &this
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *MinimalContainerComponentAllOf) GetConfiguration() MinimalContainerConfiguration {
	if o == nil || o.Configuration == nil {
		var ret MinimalContainerConfiguration
		return ret
	}
	return *o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalContainerComponentAllOf) GetConfigurationOk() (*MinimalContainerConfiguration, bool) {
	if o == nil || o.Configuration == nil {
		return nil, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *MinimalContainerComponentAllOf) HasConfiguration() bool {
	if o != nil && o.Configuration != nil {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given MinimalContainerConfiguration and assigns it to the Configuration field.
func (o *MinimalContainerComponentAllOf) SetConfiguration(v MinimalContainerConfiguration) {
	o.Configuration = &v
}

func (o MinimalContainerComponentAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Configuration != nil {
		toSerialize["configuration"] = o.Configuration
	}
	return json.Marshal(toSerialize)
}

type NullableMinimalContainerComponentAllOf struct {
	value *MinimalContainerComponentAllOf
	isSet bool
}

func (v NullableMinimalContainerComponentAllOf) Get() *MinimalContainerComponentAllOf {
	return v.value
}

func (v *NullableMinimalContainerComponentAllOf) Set(val *MinimalContainerComponentAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableMinimalContainerComponentAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableMinimalContainerComponentAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMinimalContainerComponentAllOf(val *MinimalContainerComponentAllOf) *NullableMinimalContainerComponentAllOf {
	return &NullableMinimalContainerComponentAllOf{value: val, isSet: true}
}

func (v NullableMinimalContainerComponentAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMinimalContainerComponentAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
