/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// OpenStackClientAllOf struct for OpenStackClientAllOf
type OpenStackClientAllOf struct {
	KeystoneVersion *string `json:"keystoneVersion,omitempty"`
	TenantName      *string `json:"tenantName,omitempty"`
}

// NewOpenStackClientAllOf instantiates a new OpenStackClientAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenStackClientAllOf() *OpenStackClientAllOf {
	this := OpenStackClientAllOf{}
	return &this
}

// NewOpenStackClientAllOfWithDefaults instantiates a new OpenStackClientAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenStackClientAllOfWithDefaults() *OpenStackClientAllOf {
	this := OpenStackClientAllOf{}
	return &this
}

// GetKeystoneVersion returns the KeystoneVersion field value if set, zero value otherwise.
func (o *OpenStackClientAllOf) GetKeystoneVersion() string {
	if o == nil || o.KeystoneVersion == nil {
		var ret string
		return ret
	}
	return *o.KeystoneVersion
}

// GetKeystoneVersionOk returns a tuple with the KeystoneVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackClientAllOf) GetKeystoneVersionOk() (*string, bool) {
	if o == nil || o.KeystoneVersion == nil {
		return nil, false
	}
	return o.KeystoneVersion, true
}

// HasKeystoneVersion returns a boolean if a field has been set.
func (o *OpenStackClientAllOf) HasKeystoneVersion() bool {
	if o != nil && o.KeystoneVersion != nil {
		return true
	}

	return false
}

// SetKeystoneVersion gets a reference to the given string and assigns it to the KeystoneVersion field.
func (o *OpenStackClientAllOf) SetKeystoneVersion(v string) {
	o.KeystoneVersion = &v
}

// GetTenantName returns the TenantName field value if set, zero value otherwise.
func (o *OpenStackClientAllOf) GetTenantName() string {
	if o == nil || o.TenantName == nil {
		var ret string
		return ret
	}
	return *o.TenantName
}

// GetTenantNameOk returns a tuple with the TenantName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackClientAllOf) GetTenantNameOk() (*string, bool) {
	if o == nil || o.TenantName == nil {
		return nil, false
	}
	return o.TenantName, true
}

// HasTenantName returns a boolean if a field has been set.
func (o *OpenStackClientAllOf) HasTenantName() bool {
	if o != nil && o.TenantName != nil {
		return true
	}

	return false
}

// SetTenantName gets a reference to the given string and assigns it to the TenantName field.
func (o *OpenStackClientAllOf) SetTenantName(v string) {
	o.TenantName = &v
}

func (o OpenStackClientAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.KeystoneVersion != nil {
		toSerialize["keystoneVersion"] = o.KeystoneVersion
	}
	if o.TenantName != nil {
		toSerialize["tenantName"] = o.TenantName
	}
	return json.Marshal(toSerialize)
}

type NullableOpenStackClientAllOf struct {
	value *OpenStackClientAllOf
	isSet bool
}

func (v NullableOpenStackClientAllOf) Get() *OpenStackClientAllOf {
	return v.value
}

func (v *NullableOpenStackClientAllOf) Set(val *OpenStackClientAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenStackClientAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenStackClientAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenStackClientAllOf(val *OpenStackClientAllOf) *NullableOpenStackClientAllOf {
	return &NullableOpenStackClientAllOf{value: val, isSet: true}
}

func (v NullableOpenStackClientAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenStackClientAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
