/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// InputParentCategory struct for InputParentCategory
type InputParentCategory struct {
	Id int32 `json:"id"`
}

// NewInputParentCategory instantiates a new InputParentCategory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputParentCategory(id int32) *InputParentCategory {
	this := InputParentCategory{}
	this.Id = id
	return &this
}

// NewInputParentCategoryWithDefaults instantiates a new InputParentCategory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputParentCategoryWithDefaults() *InputParentCategory {
	this := InputParentCategory{}
	return &this
}

// GetId returns the Id field value
func (o *InputParentCategory) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InputParentCategory) GetIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InputParentCategory) SetId(v int32) {
	o.Id = v
}

func (o InputParentCategory) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableInputParentCategory struct {
	value *InputParentCategory
	isSet bool
}

func (v NullableInputParentCategory) Get() *InputParentCategory {
	return v.value
}

func (v *NullableInputParentCategory) Set(val *InputParentCategory) {
	v.value = val
	v.isSet = true
}

func (v NullableInputParentCategory) IsSet() bool {
	return v.isSet
}

func (v *NullableInputParentCategory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputParentCategory(val *InputParentCategory) *NullableInputParentCategory {
	return &NullableInputParentCategory{value: val, isSet: true}
}

func (v NullableInputParentCategory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputParentCategory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


