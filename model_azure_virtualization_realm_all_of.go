/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// AzureVirtualizationRealmAllOf struct for AzureVirtualizationRealmAllOf
type AzureVirtualizationRealmAllOf struct {
	Environment        *string `json:"environment,omitempty"`
	PublicContainerUrl *string `json:"publicContainerUrl,omitempty"`
	Region             *string `json:"region,omitempty"`
	ResourceGroupName  *string `json:"resourceGroupName,omitempty"`
	TenantId           *string `json:"tenantId,omitempty"`
	VirtualNetworkName *string `json:"virtualNetworkName,omitempty"`
}

// NewAzureVirtualizationRealmAllOf instantiates a new AzureVirtualizationRealmAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureVirtualizationRealmAllOf() *AzureVirtualizationRealmAllOf {
	this := AzureVirtualizationRealmAllOf{}
	return &this
}

// NewAzureVirtualizationRealmAllOfWithDefaults instantiates a new AzureVirtualizationRealmAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureVirtualizationRealmAllOfWithDefaults() *AzureVirtualizationRealmAllOf {
	this := AzureVirtualizationRealmAllOf{}
	return &this
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *AzureVirtualizationRealmAllOf) GetEnvironment() string {
	if o == nil || o.Environment == nil {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVirtualizationRealmAllOf) GetEnvironmentOk() (*string, bool) {
	if o == nil || o.Environment == nil {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *AzureVirtualizationRealmAllOf) HasEnvironment() bool {
	if o != nil && o.Environment != nil {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *AzureVirtualizationRealmAllOf) SetEnvironment(v string) {
	o.Environment = &v
}

// GetPublicContainerUrl returns the PublicContainerUrl field value if set, zero value otherwise.
func (o *AzureVirtualizationRealmAllOf) GetPublicContainerUrl() string {
	if o == nil || o.PublicContainerUrl == nil {
		var ret string
		return ret
	}
	return *o.PublicContainerUrl
}

// GetPublicContainerUrlOk returns a tuple with the PublicContainerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVirtualizationRealmAllOf) GetPublicContainerUrlOk() (*string, bool) {
	if o == nil || o.PublicContainerUrl == nil {
		return nil, false
	}
	return o.PublicContainerUrl, true
}

// HasPublicContainerUrl returns a boolean if a field has been set.
func (o *AzureVirtualizationRealmAllOf) HasPublicContainerUrl() bool {
	if o != nil && o.PublicContainerUrl != nil {
		return true
	}

	return false
}

// SetPublicContainerUrl gets a reference to the given string and assigns it to the PublicContainerUrl field.
func (o *AzureVirtualizationRealmAllOf) SetPublicContainerUrl(v string) {
	o.PublicContainerUrl = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *AzureVirtualizationRealmAllOf) GetRegion() string {
	if o == nil || o.Region == nil {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVirtualizationRealmAllOf) GetRegionOk() (*string, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *AzureVirtualizationRealmAllOf) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *AzureVirtualizationRealmAllOf) SetRegion(v string) {
	o.Region = &v
}

// GetResourceGroupName returns the ResourceGroupName field value if set, zero value otherwise.
func (o *AzureVirtualizationRealmAllOf) GetResourceGroupName() string {
	if o == nil || o.ResourceGroupName == nil {
		var ret string
		return ret
	}
	return *o.ResourceGroupName
}

// GetResourceGroupNameOk returns a tuple with the ResourceGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVirtualizationRealmAllOf) GetResourceGroupNameOk() (*string, bool) {
	if o == nil || o.ResourceGroupName == nil {
		return nil, false
	}
	return o.ResourceGroupName, true
}

// HasResourceGroupName returns a boolean if a field has been set.
func (o *AzureVirtualizationRealmAllOf) HasResourceGroupName() bool {
	if o != nil && o.ResourceGroupName != nil {
		return true
	}

	return false
}

// SetResourceGroupName gets a reference to the given string and assigns it to the ResourceGroupName field.
func (o *AzureVirtualizationRealmAllOf) SetResourceGroupName(v string) {
	o.ResourceGroupName = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *AzureVirtualizationRealmAllOf) GetTenantId() string {
	if o == nil || o.TenantId == nil {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVirtualizationRealmAllOf) GetTenantIdOk() (*string, bool) {
	if o == nil || o.TenantId == nil {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *AzureVirtualizationRealmAllOf) HasTenantId() bool {
	if o != nil && o.TenantId != nil {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *AzureVirtualizationRealmAllOf) SetTenantId(v string) {
	o.TenantId = &v
}

// GetVirtualNetworkName returns the VirtualNetworkName field value if set, zero value otherwise.
func (o *AzureVirtualizationRealmAllOf) GetVirtualNetworkName() string {
	if o == nil || o.VirtualNetworkName == nil {
		var ret string
		return ret
	}
	return *o.VirtualNetworkName
}

// GetVirtualNetworkNameOk returns a tuple with the VirtualNetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVirtualizationRealmAllOf) GetVirtualNetworkNameOk() (*string, bool) {
	if o == nil || o.VirtualNetworkName == nil {
		return nil, false
	}
	return o.VirtualNetworkName, true
}

// HasVirtualNetworkName returns a boolean if a field has been set.
func (o *AzureVirtualizationRealmAllOf) HasVirtualNetworkName() bool {
	if o != nil && o.VirtualNetworkName != nil {
		return true
	}

	return false
}

// SetVirtualNetworkName gets a reference to the given string and assigns it to the VirtualNetworkName field.
func (o *AzureVirtualizationRealmAllOf) SetVirtualNetworkName(v string) {
	o.VirtualNetworkName = &v
}

func (o AzureVirtualizationRealmAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Environment != nil {
		toSerialize["environment"] = o.Environment
	}
	if o.PublicContainerUrl != nil {
		toSerialize["publicContainerUrl"] = o.PublicContainerUrl
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.ResourceGroupName != nil {
		toSerialize["resourceGroupName"] = o.ResourceGroupName
	}
	if o.TenantId != nil {
		toSerialize["tenantId"] = o.TenantId
	}
	if o.VirtualNetworkName != nil {
		toSerialize["virtualNetworkName"] = o.VirtualNetworkName
	}
	return json.Marshal(toSerialize)
}

type NullableAzureVirtualizationRealmAllOf struct {
	value *AzureVirtualizationRealmAllOf
	isSet bool
}

func (v NullableAzureVirtualizationRealmAllOf) Get() *AzureVirtualizationRealmAllOf {
	return v.value
}

func (v *NullableAzureVirtualizationRealmAllOf) Set(val *AzureVirtualizationRealmAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureVirtualizationRealmAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureVirtualizationRealmAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureVirtualizationRealmAllOf(val *AzureVirtualizationRealmAllOf) *NullableAzureVirtualizationRealmAllOf {
	return &NullableAzureVirtualizationRealmAllOf{value: val, isSet: true}
}

func (v NullableAzureVirtualizationRealmAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureVirtualizationRealmAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
