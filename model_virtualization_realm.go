/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VirtualizationRealm struct for VirtualizationRealm
type VirtualizationRealm struct {
	VirtualizationRealmType         *string                 `json:"virtualizationRealmType,omitempty"`
	AccessPoint                     *string                 `json:"accessPoint,omitempty"`
	AccountId                       string                  `json:"accountId"`
	ActiveVirtualMachines           *int32                  `json:"activeVirtualMachines,omitempty"`
	Networks                        *[]Network              `json:"networks,omitempty"`
	AdminUsers                      *[]User                 `json:"adminUsers,omitempty"`
	Allocated                       *bool                   `json:"allocated,omitempty"`
	Cidr                            string                  `json:"cidr"`
	ConnectedCloud                  *Cloud                  `json:"connectedCloud,omitempty"`
	Cloud                           *Cloud                  `json:"cloud,omitempty"`
	CreatedAt                       *int32                  `json:"createdAt,omitempty"`
	DateLastReachable               *int32                  `json:"dateLastReachable,omitempty"`
	DefaultWindowsDomainName        *string                 `json:"defaultWindowsDomainName,omitempty"`
	Description                     string                  `json:"description"`
	Id                              *int32                  `json:"id,omitempty"`
	LocalStorageName                *string                 `json:"localStorageName,omitempty"`
	MaximumNumCpus                  *int32                  `json:"maximumNumCpus,omitempty"`
	MaximumNumGpus                  *int32                  `json:"maximumNumGpus,omitempty"`
	MaximumRamInMegabytes           *int32                  `json:"maximumRamInMegabytes,omitempty"`
	MaximumStorageInMegabytes       *int32                  `json:"maximumStorageInMegabytes,omitempty"`
	MaximumVirtualMachines          *int32                  `json:"maximumVirtualMachines,omitempty"`
	Name                            string                  `json:"name"`
	Password                        string                  `json:"password"`
	PowerOnDelayBase                *int64                  `json:"powerOnDelayBase,omitempty"`
	PowerOnInitialDelayBase         *int32                  `json:"powerOnInitialDelayBase,omitempty"`
	PowerOnMaximumDelay             *int32                  `json:"powerOnMaximumDelay,omitempty"`
	PowerOnMinimumDelay             *int32                  `json:"powerOnMinimumDelay,omitempty"`
	Projects                        *[]Project              `json:"projects,omitempty"`
	Reachable                       *bool                   `json:"reachable,omitempty"`
	RemoteAccessConfig              *RemoteAccessConfig     `json:"remoteAccessConfig,omitempty"`
	RemoteAccessDeploymentId        *int32                  `json:"remoteAccessDeploymentId,omitempty"`
	RemoteAccessDeploymentRunStatus *string                 `json:"remoteAccessDeploymentRunStatus,omitempty"`
	RemoteAccessStatus              *string                 `json:"remoteAccessStatus,omitempty"`
	State                           *string                 `json:"state,omitempty"`
	SupportedFeatures               *[]string               `json:"supportedFeatures,omitempty"`
	TemplateRegistrations           *[]TemplateRegistration `json:"templateRegistrations,omitempty"`
	Templates                       *[]Cons3rtTemplateData  `json:"templates,omitempty"`
	TemplateSubscriptions           *[]TemplateSubscription `json:"templateSubscriptions,omitempty"`
	UpdatedAt                       *int32                  `json:"updatedAt,omitempty"`
	Username                        string                  `json:"username"`
	ZoneCount                       *int32                  `json:"zoneCount,omitempty"`
}

// NewVirtualizationRealm instantiates a new VirtualizationRealm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualizationRealm(accountId string, cidr string, description string, name string, password string, username string) *VirtualizationRealm {
	this := VirtualizationRealm{}
	this.AccountId = accountId
	this.Cidr = cidr
	this.Description = description
	this.Name = name
	this.Password = password
	this.Username = username
	return &this
}

// NewVirtualizationRealmWithDefaults instantiates a new VirtualizationRealm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualizationRealmWithDefaults() *VirtualizationRealm {
	this := VirtualizationRealm{}
	return &this
}

// GetVirtualizationRealmType returns the VirtualizationRealmType field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetVirtualizationRealmType() string {
	if o == nil || o.VirtualizationRealmType == nil {
		var ret string
		return ret
	}
	return *o.VirtualizationRealmType
}

// GetVirtualizationRealmTypeOk returns a tuple with the VirtualizationRealmType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetVirtualizationRealmTypeOk() (*string, bool) {
	if o == nil || o.VirtualizationRealmType == nil {
		return nil, false
	}
	return o.VirtualizationRealmType, true
}

// HasVirtualizationRealmType returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasVirtualizationRealmType() bool {
	if o != nil && o.VirtualizationRealmType != nil {
		return true
	}

	return false
}

// SetVirtualizationRealmType gets a reference to the given string and assigns it to the VirtualizationRealmType field.
func (o *VirtualizationRealm) SetVirtualizationRealmType(v string) {
	o.VirtualizationRealmType = &v
}

// GetAccessPoint returns the AccessPoint field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetAccessPoint() string {
	if o == nil || o.AccessPoint == nil {
		var ret string
		return ret
	}
	return *o.AccessPoint
}

// GetAccessPointOk returns a tuple with the AccessPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetAccessPointOk() (*string, bool) {
	if o == nil || o.AccessPoint == nil {
		return nil, false
	}
	return o.AccessPoint, true
}

// HasAccessPoint returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasAccessPoint() bool {
	if o != nil && o.AccessPoint != nil {
		return true
	}

	return false
}

// SetAccessPoint gets a reference to the given string and assigns it to the AccessPoint field.
func (o *VirtualizationRealm) SetAccessPoint(v string) {
	o.AccessPoint = &v
}

// GetAccountId returns the AccountId field value
func (o *VirtualizationRealm) GetAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountId, true
}

// SetAccountId sets field value
func (o *VirtualizationRealm) SetAccountId(v string) {
	o.AccountId = v
}

// GetActiveVirtualMachines returns the ActiveVirtualMachines field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetActiveVirtualMachines() int32 {
	if o == nil || o.ActiveVirtualMachines == nil {
		var ret int32
		return ret
	}
	return *o.ActiveVirtualMachines
}

// GetActiveVirtualMachinesOk returns a tuple with the ActiveVirtualMachines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetActiveVirtualMachinesOk() (*int32, bool) {
	if o == nil || o.ActiveVirtualMachines == nil {
		return nil, false
	}
	return o.ActiveVirtualMachines, true
}

// HasActiveVirtualMachines returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasActiveVirtualMachines() bool {
	if o != nil && o.ActiveVirtualMachines != nil {
		return true
	}

	return false
}

// SetActiveVirtualMachines gets a reference to the given int32 and assigns it to the ActiveVirtualMachines field.
func (o *VirtualizationRealm) SetActiveVirtualMachines(v int32) {
	o.ActiveVirtualMachines = &v
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetNetworks() []Network {
	if o == nil || o.Networks == nil {
		var ret []Network
		return ret
	}
	return *o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetNetworksOk() (*[]Network, bool) {
	if o == nil || o.Networks == nil {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasNetworks() bool {
	if o != nil && o.Networks != nil {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []Network and assigns it to the Networks field.
func (o *VirtualizationRealm) SetNetworks(v []Network) {
	o.Networks = &v
}

// GetAdminUsers returns the AdminUsers field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetAdminUsers() []User {
	if o == nil || o.AdminUsers == nil {
		var ret []User
		return ret
	}
	return *o.AdminUsers
}

// GetAdminUsersOk returns a tuple with the AdminUsers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetAdminUsersOk() (*[]User, bool) {
	if o == nil || o.AdminUsers == nil {
		return nil, false
	}
	return o.AdminUsers, true
}

// HasAdminUsers returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasAdminUsers() bool {
	if o != nil && o.AdminUsers != nil {
		return true
	}

	return false
}

// SetAdminUsers gets a reference to the given []User and assigns it to the AdminUsers field.
func (o *VirtualizationRealm) SetAdminUsers(v []User) {
	o.AdminUsers = &v
}

// GetAllocated returns the Allocated field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetAllocated() bool {
	if o == nil || o.Allocated == nil {
		var ret bool
		return ret
	}
	return *o.Allocated
}

// GetAllocatedOk returns a tuple with the Allocated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetAllocatedOk() (*bool, bool) {
	if o == nil || o.Allocated == nil {
		return nil, false
	}
	return o.Allocated, true
}

// HasAllocated returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasAllocated() bool {
	if o != nil && o.Allocated != nil {
		return true
	}

	return false
}

// SetAllocated gets a reference to the given bool and assigns it to the Allocated field.
func (o *VirtualizationRealm) SetAllocated(v bool) {
	o.Allocated = &v
}

// GetCidr returns the Cidr field value
func (o *VirtualizationRealm) GetCidr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetCidrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cidr, true
}

// SetCidr sets field value
func (o *VirtualizationRealm) SetCidr(v string) {
	o.Cidr = v
}

// GetConnectedCloud returns the ConnectedCloud field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetConnectedCloud() Cloud {
	if o == nil || o.ConnectedCloud == nil {
		var ret Cloud
		return ret
	}
	return *o.ConnectedCloud
}

// GetConnectedCloudOk returns a tuple with the ConnectedCloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetConnectedCloudOk() (*Cloud, bool) {
	if o == nil || o.ConnectedCloud == nil {
		return nil, false
	}
	return o.ConnectedCloud, true
}

// HasConnectedCloud returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasConnectedCloud() bool {
	if o != nil && o.ConnectedCloud != nil {
		return true
	}

	return false
}

// SetConnectedCloud gets a reference to the given Cloud and assigns it to the ConnectedCloud field.
func (o *VirtualizationRealm) SetConnectedCloud(v Cloud) {
	o.ConnectedCloud = &v
}

// GetCloud returns the Cloud field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetCloud() Cloud {
	if o == nil || o.Cloud == nil {
		var ret Cloud
		return ret
	}
	return *o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetCloudOk() (*Cloud, bool) {
	if o == nil || o.Cloud == nil {
		return nil, false
	}
	return o.Cloud, true
}

// HasCloud returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasCloud() bool {
	if o != nil && o.Cloud != nil {
		return true
	}

	return false
}

// SetCloud gets a reference to the given Cloud and assigns it to the Cloud field.
func (o *VirtualizationRealm) SetCloud(v Cloud) {
	o.Cloud = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetCreatedAt() int32 {
	if o == nil || o.CreatedAt == nil {
		var ret int32
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetCreatedAtOk() (*int32, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int32 and assigns it to the CreatedAt field.
func (o *VirtualizationRealm) SetCreatedAt(v int32) {
	o.CreatedAt = &v
}

// GetDateLastReachable returns the DateLastReachable field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetDateLastReachable() int32 {
	if o == nil || o.DateLastReachable == nil {
		var ret int32
		return ret
	}
	return *o.DateLastReachable
}

// GetDateLastReachableOk returns a tuple with the DateLastReachable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetDateLastReachableOk() (*int32, bool) {
	if o == nil || o.DateLastReachable == nil {
		return nil, false
	}
	return o.DateLastReachable, true
}

// HasDateLastReachable returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasDateLastReachable() bool {
	if o != nil && o.DateLastReachable != nil {
		return true
	}

	return false
}

// SetDateLastReachable gets a reference to the given int32 and assigns it to the DateLastReachable field.
func (o *VirtualizationRealm) SetDateLastReachable(v int32) {
	o.DateLastReachable = &v
}

// GetDefaultWindowsDomainName returns the DefaultWindowsDomainName field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetDefaultWindowsDomainName() string {
	if o == nil || o.DefaultWindowsDomainName == nil {
		var ret string
		return ret
	}
	return *o.DefaultWindowsDomainName
}

// GetDefaultWindowsDomainNameOk returns a tuple with the DefaultWindowsDomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetDefaultWindowsDomainNameOk() (*string, bool) {
	if o == nil || o.DefaultWindowsDomainName == nil {
		return nil, false
	}
	return o.DefaultWindowsDomainName, true
}

// HasDefaultWindowsDomainName returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasDefaultWindowsDomainName() bool {
	if o != nil && o.DefaultWindowsDomainName != nil {
		return true
	}

	return false
}

// SetDefaultWindowsDomainName gets a reference to the given string and assigns it to the DefaultWindowsDomainName field.
func (o *VirtualizationRealm) SetDefaultWindowsDomainName(v string) {
	o.DefaultWindowsDomainName = &v
}

// GetDescription returns the Description field value
func (o *VirtualizationRealm) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *VirtualizationRealm) SetDescription(v string) {
	o.Description = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *VirtualizationRealm) SetId(v int32) {
	o.Id = &v
}

// GetLocalStorageName returns the LocalStorageName field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetLocalStorageName() string {
	if o == nil || o.LocalStorageName == nil {
		var ret string
		return ret
	}
	return *o.LocalStorageName
}

// GetLocalStorageNameOk returns a tuple with the LocalStorageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetLocalStorageNameOk() (*string, bool) {
	if o == nil || o.LocalStorageName == nil {
		return nil, false
	}
	return o.LocalStorageName, true
}

// HasLocalStorageName returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasLocalStorageName() bool {
	if o != nil && o.LocalStorageName != nil {
		return true
	}

	return false
}

// SetLocalStorageName gets a reference to the given string and assigns it to the LocalStorageName field.
func (o *VirtualizationRealm) SetLocalStorageName(v string) {
	o.LocalStorageName = &v
}

// GetMaximumNumCpus returns the MaximumNumCpus field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetMaximumNumCpus() int32 {
	if o == nil || o.MaximumNumCpus == nil {
		var ret int32
		return ret
	}
	return *o.MaximumNumCpus
}

// GetMaximumNumCpusOk returns a tuple with the MaximumNumCpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetMaximumNumCpusOk() (*int32, bool) {
	if o == nil || o.MaximumNumCpus == nil {
		return nil, false
	}
	return o.MaximumNumCpus, true
}

// HasMaximumNumCpus returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasMaximumNumCpus() bool {
	if o != nil && o.MaximumNumCpus != nil {
		return true
	}

	return false
}

// SetMaximumNumCpus gets a reference to the given int32 and assigns it to the MaximumNumCpus field.
func (o *VirtualizationRealm) SetMaximumNumCpus(v int32) {
	o.MaximumNumCpus = &v
}

// GetMaximumNumGpus returns the MaximumNumGpus field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetMaximumNumGpus() int32 {
	if o == nil || o.MaximumNumGpus == nil {
		var ret int32
		return ret
	}
	return *o.MaximumNumGpus
}

// GetMaximumNumGpusOk returns a tuple with the MaximumNumGpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetMaximumNumGpusOk() (*int32, bool) {
	if o == nil || o.MaximumNumGpus == nil {
		return nil, false
	}
	return o.MaximumNumGpus, true
}

// HasMaximumNumGpus returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasMaximumNumGpus() bool {
	if o != nil && o.MaximumNumGpus != nil {
		return true
	}

	return false
}

// SetMaximumNumGpus gets a reference to the given int32 and assigns it to the MaximumNumGpus field.
func (o *VirtualizationRealm) SetMaximumNumGpus(v int32) {
	o.MaximumNumGpus = &v
}

// GetMaximumRamInMegabytes returns the MaximumRamInMegabytes field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetMaximumRamInMegabytes() int32 {
	if o == nil || o.MaximumRamInMegabytes == nil {
		var ret int32
		return ret
	}
	return *o.MaximumRamInMegabytes
}

// GetMaximumRamInMegabytesOk returns a tuple with the MaximumRamInMegabytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetMaximumRamInMegabytesOk() (*int32, bool) {
	if o == nil || o.MaximumRamInMegabytes == nil {
		return nil, false
	}
	return o.MaximumRamInMegabytes, true
}

// HasMaximumRamInMegabytes returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasMaximumRamInMegabytes() bool {
	if o != nil && o.MaximumRamInMegabytes != nil {
		return true
	}

	return false
}

// SetMaximumRamInMegabytes gets a reference to the given int32 and assigns it to the MaximumRamInMegabytes field.
func (o *VirtualizationRealm) SetMaximumRamInMegabytes(v int32) {
	o.MaximumRamInMegabytes = &v
}

// GetMaximumStorageInMegabytes returns the MaximumStorageInMegabytes field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetMaximumStorageInMegabytes() int32 {
	if o == nil || o.MaximumStorageInMegabytes == nil {
		var ret int32
		return ret
	}
	return *o.MaximumStorageInMegabytes
}

// GetMaximumStorageInMegabytesOk returns a tuple with the MaximumStorageInMegabytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetMaximumStorageInMegabytesOk() (*int32, bool) {
	if o == nil || o.MaximumStorageInMegabytes == nil {
		return nil, false
	}
	return o.MaximumStorageInMegabytes, true
}

// HasMaximumStorageInMegabytes returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasMaximumStorageInMegabytes() bool {
	if o != nil && o.MaximumStorageInMegabytes != nil {
		return true
	}

	return false
}

// SetMaximumStorageInMegabytes gets a reference to the given int32 and assigns it to the MaximumStorageInMegabytes field.
func (o *VirtualizationRealm) SetMaximumStorageInMegabytes(v int32) {
	o.MaximumStorageInMegabytes = &v
}

// GetMaximumVirtualMachines returns the MaximumVirtualMachines field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetMaximumVirtualMachines() int32 {
	if o == nil || o.MaximumVirtualMachines == nil {
		var ret int32
		return ret
	}
	return *o.MaximumVirtualMachines
}

// GetMaximumVirtualMachinesOk returns a tuple with the MaximumVirtualMachines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetMaximumVirtualMachinesOk() (*int32, bool) {
	if o == nil || o.MaximumVirtualMachines == nil {
		return nil, false
	}
	return o.MaximumVirtualMachines, true
}

// HasMaximumVirtualMachines returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasMaximumVirtualMachines() bool {
	if o != nil && o.MaximumVirtualMachines != nil {
		return true
	}

	return false
}

// SetMaximumVirtualMachines gets a reference to the given int32 and assigns it to the MaximumVirtualMachines field.
func (o *VirtualizationRealm) SetMaximumVirtualMachines(v int32) {
	o.MaximumVirtualMachines = &v
}

// GetName returns the Name field value
func (o *VirtualizationRealm) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VirtualizationRealm) SetName(v string) {
	o.Name = v
}

// GetPassword returns the Password field value
func (o *VirtualizationRealm) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *VirtualizationRealm) SetPassword(v string) {
	o.Password = v
}

// GetPowerOnDelayBase returns the PowerOnDelayBase field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetPowerOnDelayBase() int64 {
	if o == nil || o.PowerOnDelayBase == nil {
		var ret int64
		return ret
	}
	return *o.PowerOnDelayBase
}

// GetPowerOnDelayBaseOk returns a tuple with the PowerOnDelayBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetPowerOnDelayBaseOk() (*int64, bool) {
	if o == nil || o.PowerOnDelayBase == nil {
		return nil, false
	}
	return o.PowerOnDelayBase, true
}

// HasPowerOnDelayBase returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasPowerOnDelayBase() bool {
	if o != nil && o.PowerOnDelayBase != nil {
		return true
	}

	return false
}

// SetPowerOnDelayBase gets a reference to the given int64 and assigns it to the PowerOnDelayBase field.
func (o *VirtualizationRealm) SetPowerOnDelayBase(v int64) {
	o.PowerOnDelayBase = &v
}

// GetPowerOnInitialDelayBase returns the PowerOnInitialDelayBase field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetPowerOnInitialDelayBase() int32 {
	if o == nil || o.PowerOnInitialDelayBase == nil {
		var ret int32
		return ret
	}
	return *o.PowerOnInitialDelayBase
}

// GetPowerOnInitialDelayBaseOk returns a tuple with the PowerOnInitialDelayBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetPowerOnInitialDelayBaseOk() (*int32, bool) {
	if o == nil || o.PowerOnInitialDelayBase == nil {
		return nil, false
	}
	return o.PowerOnInitialDelayBase, true
}

// HasPowerOnInitialDelayBase returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasPowerOnInitialDelayBase() bool {
	if o != nil && o.PowerOnInitialDelayBase != nil {
		return true
	}

	return false
}

// SetPowerOnInitialDelayBase gets a reference to the given int32 and assigns it to the PowerOnInitialDelayBase field.
func (o *VirtualizationRealm) SetPowerOnInitialDelayBase(v int32) {
	o.PowerOnInitialDelayBase = &v
}

// GetPowerOnMaximumDelay returns the PowerOnMaximumDelay field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetPowerOnMaximumDelay() int32 {
	if o == nil || o.PowerOnMaximumDelay == nil {
		var ret int32
		return ret
	}
	return *o.PowerOnMaximumDelay
}

// GetPowerOnMaximumDelayOk returns a tuple with the PowerOnMaximumDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetPowerOnMaximumDelayOk() (*int32, bool) {
	if o == nil || o.PowerOnMaximumDelay == nil {
		return nil, false
	}
	return o.PowerOnMaximumDelay, true
}

// HasPowerOnMaximumDelay returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasPowerOnMaximumDelay() bool {
	if o != nil && o.PowerOnMaximumDelay != nil {
		return true
	}

	return false
}

// SetPowerOnMaximumDelay gets a reference to the given int32 and assigns it to the PowerOnMaximumDelay field.
func (o *VirtualizationRealm) SetPowerOnMaximumDelay(v int32) {
	o.PowerOnMaximumDelay = &v
}

// GetPowerOnMinimumDelay returns the PowerOnMinimumDelay field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetPowerOnMinimumDelay() int32 {
	if o == nil || o.PowerOnMinimumDelay == nil {
		var ret int32
		return ret
	}
	return *o.PowerOnMinimumDelay
}

// GetPowerOnMinimumDelayOk returns a tuple with the PowerOnMinimumDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetPowerOnMinimumDelayOk() (*int32, bool) {
	if o == nil || o.PowerOnMinimumDelay == nil {
		return nil, false
	}
	return o.PowerOnMinimumDelay, true
}

// HasPowerOnMinimumDelay returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasPowerOnMinimumDelay() bool {
	if o != nil && o.PowerOnMinimumDelay != nil {
		return true
	}

	return false
}

// SetPowerOnMinimumDelay gets a reference to the given int32 and assigns it to the PowerOnMinimumDelay field.
func (o *VirtualizationRealm) SetPowerOnMinimumDelay(v int32) {
	o.PowerOnMinimumDelay = &v
}

// GetProjects returns the Projects field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetProjects() []Project {
	if o == nil || o.Projects == nil {
		var ret []Project
		return ret
	}
	return *o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetProjectsOk() (*[]Project, bool) {
	if o == nil || o.Projects == nil {
		return nil, false
	}
	return o.Projects, true
}

// HasProjects returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasProjects() bool {
	if o != nil && o.Projects != nil {
		return true
	}

	return false
}

// SetProjects gets a reference to the given []Project and assigns it to the Projects field.
func (o *VirtualizationRealm) SetProjects(v []Project) {
	o.Projects = &v
}

// GetReachable returns the Reachable field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetReachable() bool {
	if o == nil || o.Reachable == nil {
		var ret bool
		return ret
	}
	return *o.Reachable
}

// GetReachableOk returns a tuple with the Reachable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetReachableOk() (*bool, bool) {
	if o == nil || o.Reachable == nil {
		return nil, false
	}
	return o.Reachable, true
}

// HasReachable returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasReachable() bool {
	if o != nil && o.Reachable != nil {
		return true
	}

	return false
}

// SetReachable gets a reference to the given bool and assigns it to the Reachable field.
func (o *VirtualizationRealm) SetReachable(v bool) {
	o.Reachable = &v
}

// GetRemoteAccessConfig returns the RemoteAccessConfig field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetRemoteAccessConfig() RemoteAccessConfig {
	if o == nil || o.RemoteAccessConfig == nil {
		var ret RemoteAccessConfig
		return ret
	}
	return *o.RemoteAccessConfig
}

// GetRemoteAccessConfigOk returns a tuple with the RemoteAccessConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetRemoteAccessConfigOk() (*RemoteAccessConfig, bool) {
	if o == nil || o.RemoteAccessConfig == nil {
		return nil, false
	}
	return o.RemoteAccessConfig, true
}

// HasRemoteAccessConfig returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasRemoteAccessConfig() bool {
	if o != nil && o.RemoteAccessConfig != nil {
		return true
	}

	return false
}

// SetRemoteAccessConfig gets a reference to the given RemoteAccessConfig and assigns it to the RemoteAccessConfig field.
func (o *VirtualizationRealm) SetRemoteAccessConfig(v RemoteAccessConfig) {
	o.RemoteAccessConfig = &v
}

// GetRemoteAccessDeploymentId returns the RemoteAccessDeploymentId field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetRemoteAccessDeploymentId() int32 {
	if o == nil || o.RemoteAccessDeploymentId == nil {
		var ret int32
		return ret
	}
	return *o.RemoteAccessDeploymentId
}

// GetRemoteAccessDeploymentIdOk returns a tuple with the RemoteAccessDeploymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetRemoteAccessDeploymentIdOk() (*int32, bool) {
	if o == nil || o.RemoteAccessDeploymentId == nil {
		return nil, false
	}
	return o.RemoteAccessDeploymentId, true
}

// HasRemoteAccessDeploymentId returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasRemoteAccessDeploymentId() bool {
	if o != nil && o.RemoteAccessDeploymentId != nil {
		return true
	}

	return false
}

// SetRemoteAccessDeploymentId gets a reference to the given int32 and assigns it to the RemoteAccessDeploymentId field.
func (o *VirtualizationRealm) SetRemoteAccessDeploymentId(v int32) {
	o.RemoteAccessDeploymentId = &v
}

// GetRemoteAccessDeploymentRunStatus returns the RemoteAccessDeploymentRunStatus field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetRemoteAccessDeploymentRunStatus() string {
	if o == nil || o.RemoteAccessDeploymentRunStatus == nil {
		var ret string
		return ret
	}
	return *o.RemoteAccessDeploymentRunStatus
}

// GetRemoteAccessDeploymentRunStatusOk returns a tuple with the RemoteAccessDeploymentRunStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetRemoteAccessDeploymentRunStatusOk() (*string, bool) {
	if o == nil || o.RemoteAccessDeploymentRunStatus == nil {
		return nil, false
	}
	return o.RemoteAccessDeploymentRunStatus, true
}

// HasRemoteAccessDeploymentRunStatus returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasRemoteAccessDeploymentRunStatus() bool {
	if o != nil && o.RemoteAccessDeploymentRunStatus != nil {
		return true
	}

	return false
}

// SetRemoteAccessDeploymentRunStatus gets a reference to the given string and assigns it to the RemoteAccessDeploymentRunStatus field.
func (o *VirtualizationRealm) SetRemoteAccessDeploymentRunStatus(v string) {
	o.RemoteAccessDeploymentRunStatus = &v
}

// GetRemoteAccessStatus returns the RemoteAccessStatus field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetRemoteAccessStatus() string {
	if o == nil || o.RemoteAccessStatus == nil {
		var ret string
		return ret
	}
	return *o.RemoteAccessStatus
}

// GetRemoteAccessStatusOk returns a tuple with the RemoteAccessStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetRemoteAccessStatusOk() (*string, bool) {
	if o == nil || o.RemoteAccessStatus == nil {
		return nil, false
	}
	return o.RemoteAccessStatus, true
}

// HasRemoteAccessStatus returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasRemoteAccessStatus() bool {
	if o != nil && o.RemoteAccessStatus != nil {
		return true
	}

	return false
}

// SetRemoteAccessStatus gets a reference to the given string and assigns it to the RemoteAccessStatus field.
func (o *VirtualizationRealm) SetRemoteAccessStatus(v string) {
	o.RemoteAccessStatus = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *VirtualizationRealm) SetState(v string) {
	o.State = &v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetSupportedFeatures() []string {
	if o == nil || o.SupportedFeatures == nil {
		var ret []string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetSupportedFeaturesOk() (*[]string, bool) {
	if o == nil || o.SupportedFeatures == nil {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasSupportedFeatures() bool {
	if o != nil && o.SupportedFeatures != nil {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given []string and assigns it to the SupportedFeatures field.
func (o *VirtualizationRealm) SetSupportedFeatures(v []string) {
	o.SupportedFeatures = &v
}

// GetTemplateRegistrations returns the TemplateRegistrations field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetTemplateRegistrations() []TemplateRegistration {
	if o == nil || o.TemplateRegistrations == nil {
		var ret []TemplateRegistration
		return ret
	}
	return *o.TemplateRegistrations
}

// GetTemplateRegistrationsOk returns a tuple with the TemplateRegistrations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetTemplateRegistrationsOk() (*[]TemplateRegistration, bool) {
	if o == nil || o.TemplateRegistrations == nil {
		return nil, false
	}
	return o.TemplateRegistrations, true
}

// HasTemplateRegistrations returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasTemplateRegistrations() bool {
	if o != nil && o.TemplateRegistrations != nil {
		return true
	}

	return false
}

// SetTemplateRegistrations gets a reference to the given []TemplateRegistration and assigns it to the TemplateRegistrations field.
func (o *VirtualizationRealm) SetTemplateRegistrations(v []TemplateRegistration) {
	o.TemplateRegistrations = &v
}

// GetTemplates returns the Templates field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetTemplates() []Cons3rtTemplateData {
	if o == nil || o.Templates == nil {
		var ret []Cons3rtTemplateData
		return ret
	}
	return *o.Templates
}

// GetTemplatesOk returns a tuple with the Templates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetTemplatesOk() (*[]Cons3rtTemplateData, bool) {
	if o == nil || o.Templates == nil {
		return nil, false
	}
	return o.Templates, true
}

// HasTemplates returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasTemplates() bool {
	if o != nil && o.Templates != nil {
		return true
	}

	return false
}

// SetTemplates gets a reference to the given []Cons3rtTemplateData and assigns it to the Templates field.
func (o *VirtualizationRealm) SetTemplates(v []Cons3rtTemplateData) {
	o.Templates = &v
}

// GetTemplateSubscriptions returns the TemplateSubscriptions field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetTemplateSubscriptions() []TemplateSubscription {
	if o == nil || o.TemplateSubscriptions == nil {
		var ret []TemplateSubscription
		return ret
	}
	return *o.TemplateSubscriptions
}

// GetTemplateSubscriptionsOk returns a tuple with the TemplateSubscriptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetTemplateSubscriptionsOk() (*[]TemplateSubscription, bool) {
	if o == nil || o.TemplateSubscriptions == nil {
		return nil, false
	}
	return o.TemplateSubscriptions, true
}

// HasTemplateSubscriptions returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasTemplateSubscriptions() bool {
	if o != nil && o.TemplateSubscriptions != nil {
		return true
	}

	return false
}

// SetTemplateSubscriptions gets a reference to the given []TemplateSubscription and assigns it to the TemplateSubscriptions field.
func (o *VirtualizationRealm) SetTemplateSubscriptions(v []TemplateSubscription) {
	o.TemplateSubscriptions = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetUpdatedAt() int32 {
	if o == nil || o.UpdatedAt == nil {
		var ret int32
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetUpdatedAtOk() (*int32, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int32 and assigns it to the UpdatedAt field.
func (o *VirtualizationRealm) SetUpdatedAt(v int32) {
	o.UpdatedAt = &v
}

// GetUsername returns the Username field value
func (o *VirtualizationRealm) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *VirtualizationRealm) SetUsername(v string) {
	o.Username = v
}

// GetZoneCount returns the ZoneCount field value if set, zero value otherwise.
func (o *VirtualizationRealm) GetZoneCount() int32 {
	if o == nil || o.ZoneCount == nil {
		var ret int32
		return ret
	}
	return *o.ZoneCount
}

// GetZoneCountOk returns a tuple with the ZoneCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualizationRealm) GetZoneCountOk() (*int32, bool) {
	if o == nil || o.ZoneCount == nil {
		return nil, false
	}
	return o.ZoneCount, true
}

// HasZoneCount returns a boolean if a field has been set.
func (o *VirtualizationRealm) HasZoneCount() bool {
	if o != nil && o.ZoneCount != nil {
		return true
	}

	return false
}

// SetZoneCount gets a reference to the given int32 and assigns it to the ZoneCount field.
func (o *VirtualizationRealm) SetZoneCount(v int32) {
	o.ZoneCount = &v
}

func (o VirtualizationRealm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VirtualizationRealmType != nil {
		toSerialize["virtualizationRealmType"] = o.VirtualizationRealmType
	}
	if o.AccessPoint != nil {
		toSerialize["accessPoint"] = o.AccessPoint
	}
	if true {
		toSerialize["accountId"] = o.AccountId
	}
	if o.ActiveVirtualMachines != nil {
		toSerialize["activeVirtualMachines"] = o.ActiveVirtualMachines
	}
	if o.Networks != nil {
		toSerialize["networks"] = o.Networks
	}
	if o.AdminUsers != nil {
		toSerialize["adminUsers"] = o.AdminUsers
	}
	if o.Allocated != nil {
		toSerialize["allocated"] = o.Allocated
	}
	if true {
		toSerialize["cidr"] = o.Cidr
	}
	if o.ConnectedCloud != nil {
		toSerialize["connectedCloud"] = o.ConnectedCloud
	}
	if o.Cloud != nil {
		toSerialize["cloud"] = o.Cloud
	}
	if o.CreatedAt != nil {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if o.DateLastReachable != nil {
		toSerialize["dateLastReachable"] = o.DateLastReachable
	}
	if o.DefaultWindowsDomainName != nil {
		toSerialize["defaultWindowsDomainName"] = o.DefaultWindowsDomainName
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LocalStorageName != nil {
		toSerialize["localStorageName"] = o.LocalStorageName
	}
	if o.MaximumNumCpus != nil {
		toSerialize["maximumNumCpus"] = o.MaximumNumCpus
	}
	if o.MaximumNumGpus != nil {
		toSerialize["maximumNumGpus"] = o.MaximumNumGpus
	}
	if o.MaximumRamInMegabytes != nil {
		toSerialize["maximumRamInMegabytes"] = o.MaximumRamInMegabytes
	}
	if o.MaximumStorageInMegabytes != nil {
		toSerialize["maximumStorageInMegabytes"] = o.MaximumStorageInMegabytes
	}
	if o.MaximumVirtualMachines != nil {
		toSerialize["maximumVirtualMachines"] = o.MaximumVirtualMachines
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if o.PowerOnDelayBase != nil {
		toSerialize["powerOnDelayBase"] = o.PowerOnDelayBase
	}
	if o.PowerOnInitialDelayBase != nil {
		toSerialize["powerOnInitialDelayBase"] = o.PowerOnInitialDelayBase
	}
	if o.PowerOnMaximumDelay != nil {
		toSerialize["powerOnMaximumDelay"] = o.PowerOnMaximumDelay
	}
	if o.PowerOnMinimumDelay != nil {
		toSerialize["powerOnMinimumDelay"] = o.PowerOnMinimumDelay
	}
	if o.Projects != nil {
		toSerialize["projects"] = o.Projects
	}
	if o.Reachable != nil {
		toSerialize["reachable"] = o.Reachable
	}
	if o.RemoteAccessConfig != nil {
		toSerialize["remoteAccessConfig"] = o.RemoteAccessConfig
	}
	if o.RemoteAccessDeploymentId != nil {
		toSerialize["remoteAccessDeploymentId"] = o.RemoteAccessDeploymentId
	}
	if o.RemoteAccessDeploymentRunStatus != nil {
		toSerialize["remoteAccessDeploymentRunStatus"] = o.RemoteAccessDeploymentRunStatus
	}
	if o.RemoteAccessStatus != nil {
		toSerialize["remoteAccessStatus"] = o.RemoteAccessStatus
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	if o.SupportedFeatures != nil {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	if o.TemplateRegistrations != nil {
		toSerialize["templateRegistrations"] = o.TemplateRegistrations
	}
	if o.Templates != nil {
		toSerialize["templates"] = o.Templates
	}
	if o.TemplateSubscriptions != nil {
		toSerialize["templateSubscriptions"] = o.TemplateSubscriptions
	}
	if o.UpdatedAt != nil {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if true {
		toSerialize["username"] = o.Username
	}
	if o.ZoneCount != nil {
		toSerialize["zoneCount"] = o.ZoneCount
	}
	return json.Marshal(toSerialize)
}

type NullableVirtualizationRealm struct {
	value *VirtualizationRealm
	isSet bool
}

func (v NullableVirtualizationRealm) Get() *VirtualizationRealm {
	return v.value
}

func (v *NullableVirtualizationRealm) Set(val *VirtualizationRealm) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualizationRealm) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualizationRealm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualizationRealm(val *VirtualizationRealm) *NullableVirtualizationRealm {
	return &NullableVirtualizationRealm{value: val, isSet: true}
}

func (v NullableVirtualizationRealm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualizationRealm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
