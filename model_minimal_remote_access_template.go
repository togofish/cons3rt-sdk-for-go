/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// MinimalRemoteAccessTemplate struct for MinimalRemoteAccessTemplate
type MinimalRemoteAccessTemplate struct {
	Id       *int32  `json:"id,omitempty"`
	Name     *string `json:"name,omitempty"`
	Type     *string `json:"type,omitempty"`
	Port     *int32  `json:"port,omitempty"`
	Username *string `json:"username,omitempty"`
}

// NewMinimalRemoteAccessTemplate instantiates a new MinimalRemoteAccessTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMinimalRemoteAccessTemplate() *MinimalRemoteAccessTemplate {
	this := MinimalRemoteAccessTemplate{}
	return &this
}

// NewMinimalRemoteAccessTemplateWithDefaults instantiates a new MinimalRemoteAccessTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMinimalRemoteAccessTemplateWithDefaults() *MinimalRemoteAccessTemplate {
	this := MinimalRemoteAccessTemplate{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MinimalRemoteAccessTemplate) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalRemoteAccessTemplate) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MinimalRemoteAccessTemplate) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MinimalRemoteAccessTemplate) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *MinimalRemoteAccessTemplate) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalRemoteAccessTemplate) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *MinimalRemoteAccessTemplate) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *MinimalRemoteAccessTemplate) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MinimalRemoteAccessTemplate) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalRemoteAccessTemplate) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MinimalRemoteAccessTemplate) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MinimalRemoteAccessTemplate) SetType(v string) {
	o.Type = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *MinimalRemoteAccessTemplate) GetPort() int32 {
	if o == nil || o.Port == nil {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalRemoteAccessTemplate) GetPortOk() (*int32, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *MinimalRemoteAccessTemplate) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *MinimalRemoteAccessTemplate) SetPort(v int32) {
	o.Port = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *MinimalRemoteAccessTemplate) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalRemoteAccessTemplate) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *MinimalRemoteAccessTemplate) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *MinimalRemoteAccessTemplate) SetUsername(v string) {
	o.Username = &v
}

func (o MinimalRemoteAccessTemplate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableMinimalRemoteAccessTemplate struct {
	value *MinimalRemoteAccessTemplate
	isSet bool
}

func (v NullableMinimalRemoteAccessTemplate) Get() *MinimalRemoteAccessTemplate {
	return v.value
}

func (v *NullableMinimalRemoteAccessTemplate) Set(val *MinimalRemoteAccessTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableMinimalRemoteAccessTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableMinimalRemoteAccessTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMinimalRemoteAccessTemplate(val *MinimalRemoteAccessTemplate) *NullableMinimalRemoteAccessTemplate {
	return &NullableMinimalRemoteAccessTemplate{value: val, isSet: true}
}

func (v NullableMinimalRemoteAccessTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMinimalRemoteAccessTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
