/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// Composition struct for Composition
type Composition struct {
	DeploymentRunOptions *CompositionRunOptions `json:"deploymentRunOptions,omitempty"`
	Description *string `json:"description,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Name string `json:"name"`
	Project *Project `json:"project,omitempty"`
	Scenario *Scenario `json:"scenario,omitempty"`
}

// NewComposition instantiates a new Composition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComposition(name string) *Composition {
	this := Composition{}
	this.Name = name
	return &this
}

// NewCompositionWithDefaults instantiates a new Composition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompositionWithDefaults() *Composition {
	this := Composition{}
	return &this
}

// GetDeploymentRunOptions returns the DeploymentRunOptions field value if set, zero value otherwise.
func (o *Composition) GetDeploymentRunOptions() CompositionRunOptions {
	if o == nil || o.DeploymentRunOptions == nil {
		var ret CompositionRunOptions
		return ret
	}
	return *o.DeploymentRunOptions
}

// GetDeploymentRunOptionsOk returns a tuple with the DeploymentRunOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Composition) GetDeploymentRunOptionsOk() (*CompositionRunOptions, bool) {
	if o == nil || o.DeploymentRunOptions == nil {
		return nil, false
	}
	return o.DeploymentRunOptions, true
}

// HasDeploymentRunOptions returns a boolean if a field has been set.
func (o *Composition) HasDeploymentRunOptions() bool {
	if o != nil && o.DeploymentRunOptions != nil {
		return true
	}

	return false
}

// SetDeploymentRunOptions gets a reference to the given CompositionRunOptions and assigns it to the DeploymentRunOptions field.
func (o *Composition) SetDeploymentRunOptions(v CompositionRunOptions) {
	o.DeploymentRunOptions = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Composition) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Composition) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Composition) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Composition) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Composition) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Composition) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Composition) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Composition) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *Composition) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Composition) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Composition) SetName(v string) {
	o.Name = v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *Composition) GetProject() Project {
	if o == nil || o.Project == nil {
		var ret Project
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Composition) GetProjectOk() (*Project, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *Composition) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given Project and assigns it to the Project field.
func (o *Composition) SetProject(v Project) {
	o.Project = &v
}

// GetScenario returns the Scenario field value if set, zero value otherwise.
func (o *Composition) GetScenario() Scenario {
	if o == nil || o.Scenario == nil {
		var ret Scenario
		return ret
	}
	return *o.Scenario
}

// GetScenarioOk returns a tuple with the Scenario field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Composition) GetScenarioOk() (*Scenario, bool) {
	if o == nil || o.Scenario == nil {
		return nil, false
	}
	return o.Scenario, true
}

// HasScenario returns a boolean if a field has been set.
func (o *Composition) HasScenario() bool {
	if o != nil && o.Scenario != nil {
		return true
	}

	return false
}

// SetScenario gets a reference to the given Scenario and assigns it to the Scenario field.
func (o *Composition) SetScenario(v Scenario) {
	o.Scenario = &v
}

func (o Composition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeploymentRunOptions != nil {
		toSerialize["deploymentRunOptions"] = o.DeploymentRunOptions
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.Scenario != nil {
		toSerialize["scenario"] = o.Scenario
	}
	return json.Marshal(toSerialize)
}

type NullableComposition struct {
	value *Composition
	isSet bool
}

func (v NullableComposition) Get() *Composition {
	return v.value
}

func (v *NullableComposition) Set(val *Composition) {
	v.value = val
	v.isSet = true
}

func (v NullableComposition) IsSet() bool {
	return v.isSet
}

func (v *NullableComposition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComposition(val *Composition) *NullableComposition {
	return &NullableComposition{value: val, isSet: true}
}

func (v NullableComposition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComposition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


