/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// InputProjectUpdate struct for InputProjectUpdate
type InputProjectUpdate struct {
	Name        string  `json:"name"`
	Description *string `json:"description,omitempty"`
	DefaultRole *string `json:"defaultRole,omitempty"`
	IsPrivate   *bool   `json:"isPrivate,omitempty"`
}

// NewInputProjectUpdate instantiates a new InputProjectUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputProjectUpdate(name string) *InputProjectUpdate {
	this := InputProjectUpdate{}
	this.Name = name
	return &this
}

// NewInputProjectUpdateWithDefaults instantiates a new InputProjectUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputProjectUpdateWithDefaults() *InputProjectUpdate {
	this := InputProjectUpdate{}
	return &this
}

// GetName returns the Name field value
func (o *InputProjectUpdate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InputProjectUpdate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InputProjectUpdate) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InputProjectUpdate) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputProjectUpdate) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InputProjectUpdate) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InputProjectUpdate) SetDescription(v string) {
	o.Description = &v
}

// GetDefaultRole returns the DefaultRole field value if set, zero value otherwise.
func (o *InputProjectUpdate) GetDefaultRole() string {
	if o == nil || o.DefaultRole == nil {
		var ret string
		return ret
	}
	return *o.DefaultRole
}

// GetDefaultRoleOk returns a tuple with the DefaultRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputProjectUpdate) GetDefaultRoleOk() (*string, bool) {
	if o == nil || o.DefaultRole == nil {
		return nil, false
	}
	return o.DefaultRole, true
}

// HasDefaultRole returns a boolean if a field has been set.
func (o *InputProjectUpdate) HasDefaultRole() bool {
	if o != nil && o.DefaultRole != nil {
		return true
	}

	return false
}

// SetDefaultRole gets a reference to the given string and assigns it to the DefaultRole field.
func (o *InputProjectUpdate) SetDefaultRole(v string) {
	o.DefaultRole = &v
}

// GetIsPrivate returns the IsPrivate field value if set, zero value otherwise.
func (o *InputProjectUpdate) GetIsPrivate() bool {
	if o == nil || o.IsPrivate == nil {
		var ret bool
		return ret
	}
	return *o.IsPrivate
}

// GetIsPrivateOk returns a tuple with the IsPrivate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputProjectUpdate) GetIsPrivateOk() (*bool, bool) {
	if o == nil || o.IsPrivate == nil {
		return nil, false
	}
	return o.IsPrivate, true
}

// HasIsPrivate returns a boolean if a field has been set.
func (o *InputProjectUpdate) HasIsPrivate() bool {
	if o != nil && o.IsPrivate != nil {
		return true
	}

	return false
}

// SetIsPrivate gets a reference to the given bool and assigns it to the IsPrivate field.
func (o *InputProjectUpdate) SetIsPrivate(v bool) {
	o.IsPrivate = &v
}

func (o InputProjectUpdate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DefaultRole != nil {
		toSerialize["defaultRole"] = o.DefaultRole
	}
	if o.IsPrivate != nil {
		toSerialize["isPrivate"] = o.IsPrivate
	}
	return json.Marshal(toSerialize)
}

type NullableInputProjectUpdate struct {
	value *InputProjectUpdate
	isSet bool
}

func (v NullableInputProjectUpdate) Get() *InputProjectUpdate {
	return v.value
}

func (v *NullableInputProjectUpdate) Set(val *InputProjectUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableInputProjectUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableInputProjectUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputProjectUpdate(val *InputProjectUpdate) *NullableInputProjectUpdate {
	return &NullableInputProjectUpdate{value: val, isSet: true}
}

func (v NullableInputProjectUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputProjectUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
