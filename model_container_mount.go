/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// ContainerMount struct for ContainerMount
type ContainerMount struct {
	Id      *int32  `json:"id,omitempty"`
	Type    string  `json:"type"`
	Source  string  `json:"source"`
	Target  string  `json:"target"`
	Options *string `json:"options,omitempty"`
}

// NewContainerMount instantiates a new ContainerMount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerMount(type_ string, source string, target string) *ContainerMount {
	this := ContainerMount{}
	this.Type = type_
	this.Source = source
	this.Target = target
	return &this
}

// NewContainerMountWithDefaults instantiates a new ContainerMount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerMountWithDefaults() *ContainerMount {
	this := ContainerMount{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ContainerMount) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerMount) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ContainerMount) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ContainerMount) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value
func (o *ContainerMount) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ContainerMount) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ContainerMount) SetType(v string) {
	o.Type = v
}

// GetSource returns the Source field value
func (o *ContainerMount) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *ContainerMount) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *ContainerMount) SetSource(v string) {
	o.Source = v
}

// GetTarget returns the Target field value
func (o *ContainerMount) GetTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *ContainerMount) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *ContainerMount) SetTarget(v string) {
	o.Target = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *ContainerMount) GetOptions() string {
	if o == nil || o.Options == nil {
		var ret string
		return ret
	}
	return *o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerMount) GetOptionsOk() (*string, bool) {
	if o == nil || o.Options == nil {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *ContainerMount) HasOptions() bool {
	if o != nil && o.Options != nil {
		return true
	}

	return false
}

// SetOptions gets a reference to the given string and assigns it to the Options field.
func (o *ContainerMount) SetOptions(v string) {
	o.Options = &v
}

func (o ContainerMount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["source"] = o.Source
	}
	if true {
		toSerialize["target"] = o.Target
	}
	if o.Options != nil {
		toSerialize["options"] = o.Options
	}
	return json.Marshal(toSerialize)
}

type NullableContainerMount struct {
	value *ContainerMount
	isSet bool
}

func (v NullableContainerMount) Get() *ContainerMount {
	return v.value
}

func (v *NullableContainerMount) Set(val *ContainerMount) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerMount) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerMount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerMount(val *ContainerMount) *NullableContainerMount {
	return &NullableContainerMount{value: val, isSet: true}
}

func (v NullableContainerMount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerMount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
