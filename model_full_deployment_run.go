/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// FullDeploymentRun struct for FullDeploymentRun
type FullDeploymentRun struct {
	Categories              *[]MinimalCategory          `json:"categories,omitempty"`
	Creator                 *MinimalUser                `json:"creator,omitempty"`
	EarliestStartTime       *int32                      `json:"earliestStartTime,omitempty"`
	EndTime                 *int32                      `json:"endTime,omitempty"`
	LeaseTime               *int32                      `json:"leaseTime,omitempty"`
	EstimatedReadyTime      *int32                      `json:"estimatedReadyTime,omitempty"`
	EstimatedStartTime      *int32                      `json:"estimatedStartTime,omitempty"`
	Id                      *int32                      `json:"id,omitempty"`
	LogEntries              *[]MinimalLogEntry          `json:"logEntries,omitempty"`
	Message                 *string                     `json:"message,omitempty"`
	Project                 *MinimalProject             `json:"project,omitempty"`
	ReadyTime               *int32                      `json:"readyTime,omitempty"`
	Result                  *string                     `json:"result,omitempty"`
	StartTime               *int32                      `json:"startTime,omitempty"`
	TimeOfRequest           *int32                      `json:"timeOfRequest,omitempty"`
	Canceled                *bool                       `json:"canceled,omitempty"`
	Deployment              *MinimalDeployment          `json:"deployment,omitempty"`
	DeploymentRunHosts      *[]MinimalDeploymentRunHost `json:"deploymentRunHosts,omitempty"`
	Properties              *[]Property                 `json:"properties,omitempty"`
	DeploymentRunStatus     *string                     `json:"deploymentRunStatus,omitempty"`
	Description             *string                     `json:"description,omitempty"`
	FapStatus               *string                     `json:"fapStatus,omitempty"`
	HostSetName             *string                     `json:"hostSetName,omitempty"`
	Locked                  *bool                       `json:"locked,omitempty"`
	Name                    *string                     `json:"name,omitempty"`
	PowerSchedule           *PowerSchedule              `json:"powerSchedule,omitempty"`
	RecurringSchedule       *MinimalRecurringSchedule   `json:"recurringSchedule,omitempty"`
	SchedulerStatusMessage  *string                     `json:"schedulerStatusMessage,omitempty"`
	TargetState             *string                     `json:"targetState,omitempty"`
	TestError               *bool                       `json:"testError,omitempty"`
	TestRuns                *[]MinimalTestRunTask       `json:"testRuns,omitempty"`
	RetainedOnError         *bool                       `json:"retainedOnError,omitempty"`
	VirtualizationRealm     *MinimalVirtualizationRealm `json:"virtualizationRealm,omitempty"`
	DeploymentRunResultType *string                     `json:"deploymentRunResultType,omitempty"`
}

// NewFullDeploymentRun instantiates a new FullDeploymentRun object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFullDeploymentRun() *FullDeploymentRun {
	this := FullDeploymentRun{}
	return &this
}

// NewFullDeploymentRunWithDefaults instantiates a new FullDeploymentRun object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFullDeploymentRunWithDefaults() *FullDeploymentRun {
	this := FullDeploymentRun{}
	return &this
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetCategories() []MinimalCategory {
	if o == nil || o.Categories == nil {
		var ret []MinimalCategory
		return ret
	}
	return *o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetCategoriesOk() (*[]MinimalCategory, bool) {
	if o == nil || o.Categories == nil {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasCategories() bool {
	if o != nil && o.Categories != nil {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []MinimalCategory and assigns it to the Categories field.
func (o *FullDeploymentRun) SetCategories(v []MinimalCategory) {
	o.Categories = &v
}

// GetCreator returns the Creator field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetCreator() MinimalUser {
	if o == nil || o.Creator == nil {
		var ret MinimalUser
		return ret
	}
	return *o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetCreatorOk() (*MinimalUser, bool) {
	if o == nil || o.Creator == nil {
		return nil, false
	}
	return o.Creator, true
}

// HasCreator returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasCreator() bool {
	if o != nil && o.Creator != nil {
		return true
	}

	return false
}

// SetCreator gets a reference to the given MinimalUser and assigns it to the Creator field.
func (o *FullDeploymentRun) SetCreator(v MinimalUser) {
	o.Creator = &v
}

// GetEarliestStartTime returns the EarliestStartTime field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetEarliestStartTime() int32 {
	if o == nil || o.EarliestStartTime == nil {
		var ret int32
		return ret
	}
	return *o.EarliestStartTime
}

// GetEarliestStartTimeOk returns a tuple with the EarliestStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetEarliestStartTimeOk() (*int32, bool) {
	if o == nil || o.EarliestStartTime == nil {
		return nil, false
	}
	return o.EarliestStartTime, true
}

// HasEarliestStartTime returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasEarliestStartTime() bool {
	if o != nil && o.EarliestStartTime != nil {
		return true
	}

	return false
}

// SetEarliestStartTime gets a reference to the given int32 and assigns it to the EarliestStartTime field.
func (o *FullDeploymentRun) SetEarliestStartTime(v int32) {
	o.EarliestStartTime = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetEndTime() int32 {
	if o == nil || o.EndTime == nil {
		var ret int32
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetEndTimeOk() (*int32, bool) {
	if o == nil || o.EndTime == nil {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasEndTime() bool {
	if o != nil && o.EndTime != nil {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given int32 and assigns it to the EndTime field.
func (o *FullDeploymentRun) SetEndTime(v int32) {
	o.EndTime = &v
}

// GetLeaseTime returns the LeaseTime field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetLeaseTime() int32 {
	if o == nil || o.LeaseTime == nil {
		var ret int32
		return ret
	}
	return *o.LeaseTime
}

// GetLeaseTimeOk returns a tuple with the LeaseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetLeaseTimeOk() (*int32, bool) {
	if o == nil || o.LeaseTime == nil {
		return nil, false
	}
	return o.LeaseTime, true
}

// HasLeaseTime returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasLeaseTime() bool {
	if o != nil && o.LeaseTime != nil {
		return true
	}

	return false
}

// SetLeaseTime gets a reference to the given int32 and assigns it to the LeaseTime field.
func (o *FullDeploymentRun) SetLeaseTime(v int32) {
	o.LeaseTime = &v
}

// GetEstimatedReadyTime returns the EstimatedReadyTime field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetEstimatedReadyTime() int32 {
	if o == nil || o.EstimatedReadyTime == nil {
		var ret int32
		return ret
	}
	return *o.EstimatedReadyTime
}

// GetEstimatedReadyTimeOk returns a tuple with the EstimatedReadyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetEstimatedReadyTimeOk() (*int32, bool) {
	if o == nil || o.EstimatedReadyTime == nil {
		return nil, false
	}
	return o.EstimatedReadyTime, true
}

// HasEstimatedReadyTime returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasEstimatedReadyTime() bool {
	if o != nil && o.EstimatedReadyTime != nil {
		return true
	}

	return false
}

// SetEstimatedReadyTime gets a reference to the given int32 and assigns it to the EstimatedReadyTime field.
func (o *FullDeploymentRun) SetEstimatedReadyTime(v int32) {
	o.EstimatedReadyTime = &v
}

// GetEstimatedStartTime returns the EstimatedStartTime field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetEstimatedStartTime() int32 {
	if o == nil || o.EstimatedStartTime == nil {
		var ret int32
		return ret
	}
	return *o.EstimatedStartTime
}

// GetEstimatedStartTimeOk returns a tuple with the EstimatedStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetEstimatedStartTimeOk() (*int32, bool) {
	if o == nil || o.EstimatedStartTime == nil {
		return nil, false
	}
	return o.EstimatedStartTime, true
}

// HasEstimatedStartTime returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasEstimatedStartTime() bool {
	if o != nil && o.EstimatedStartTime != nil {
		return true
	}

	return false
}

// SetEstimatedStartTime gets a reference to the given int32 and assigns it to the EstimatedStartTime field.
func (o *FullDeploymentRun) SetEstimatedStartTime(v int32) {
	o.EstimatedStartTime = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *FullDeploymentRun) SetId(v int32) {
	o.Id = &v
}

// GetLogEntries returns the LogEntries field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetLogEntries() []MinimalLogEntry {
	if o == nil || o.LogEntries == nil {
		var ret []MinimalLogEntry
		return ret
	}
	return *o.LogEntries
}

// GetLogEntriesOk returns a tuple with the LogEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetLogEntriesOk() (*[]MinimalLogEntry, bool) {
	if o == nil || o.LogEntries == nil {
		return nil, false
	}
	return o.LogEntries, true
}

// HasLogEntries returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasLogEntries() bool {
	if o != nil && o.LogEntries != nil {
		return true
	}

	return false
}

// SetLogEntries gets a reference to the given []MinimalLogEntry and assigns it to the LogEntries field.
func (o *FullDeploymentRun) SetLogEntries(v []MinimalLogEntry) {
	o.LogEntries = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *FullDeploymentRun) SetMessage(v string) {
	o.Message = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetProject() MinimalProject {
	if o == nil || o.Project == nil {
		var ret MinimalProject
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetProjectOk() (*MinimalProject, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given MinimalProject and assigns it to the Project field.
func (o *FullDeploymentRun) SetProject(v MinimalProject) {
	o.Project = &v
}

// GetReadyTime returns the ReadyTime field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetReadyTime() int32 {
	if o == nil || o.ReadyTime == nil {
		var ret int32
		return ret
	}
	return *o.ReadyTime
}

// GetReadyTimeOk returns a tuple with the ReadyTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetReadyTimeOk() (*int32, bool) {
	if o == nil || o.ReadyTime == nil {
		return nil, false
	}
	return o.ReadyTime, true
}

// HasReadyTime returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasReadyTime() bool {
	if o != nil && o.ReadyTime != nil {
		return true
	}

	return false
}

// SetReadyTime gets a reference to the given int32 and assigns it to the ReadyTime field.
func (o *FullDeploymentRun) SetReadyTime(v int32) {
	o.ReadyTime = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetResult() string {
	if o == nil || o.Result == nil {
		var ret string
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetResultOk() (*string, bool) {
	if o == nil || o.Result == nil {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasResult() bool {
	if o != nil && o.Result != nil {
		return true
	}

	return false
}

// SetResult gets a reference to the given string and assigns it to the Result field.
func (o *FullDeploymentRun) SetResult(v string) {
	o.Result = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetStartTime() int32 {
	if o == nil || o.StartTime == nil {
		var ret int32
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetStartTimeOk() (*int32, bool) {
	if o == nil || o.StartTime == nil {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasStartTime() bool {
	if o != nil && o.StartTime != nil {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given int32 and assigns it to the StartTime field.
func (o *FullDeploymentRun) SetStartTime(v int32) {
	o.StartTime = &v
}

// GetTimeOfRequest returns the TimeOfRequest field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetTimeOfRequest() int32 {
	if o == nil || o.TimeOfRequest == nil {
		var ret int32
		return ret
	}
	return *o.TimeOfRequest
}

// GetTimeOfRequestOk returns a tuple with the TimeOfRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetTimeOfRequestOk() (*int32, bool) {
	if o == nil || o.TimeOfRequest == nil {
		return nil, false
	}
	return o.TimeOfRequest, true
}

// HasTimeOfRequest returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasTimeOfRequest() bool {
	if o != nil && o.TimeOfRequest != nil {
		return true
	}

	return false
}

// SetTimeOfRequest gets a reference to the given int32 and assigns it to the TimeOfRequest field.
func (o *FullDeploymentRun) SetTimeOfRequest(v int32) {
	o.TimeOfRequest = &v
}

// GetCanceled returns the Canceled field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetCanceled() bool {
	if o == nil || o.Canceled == nil {
		var ret bool
		return ret
	}
	return *o.Canceled
}

// GetCanceledOk returns a tuple with the Canceled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetCanceledOk() (*bool, bool) {
	if o == nil || o.Canceled == nil {
		return nil, false
	}
	return o.Canceled, true
}

// HasCanceled returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasCanceled() bool {
	if o != nil && o.Canceled != nil {
		return true
	}

	return false
}

// SetCanceled gets a reference to the given bool and assigns it to the Canceled field.
func (o *FullDeploymentRun) SetCanceled(v bool) {
	o.Canceled = &v
}

// GetDeployment returns the Deployment field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetDeployment() MinimalDeployment {
	if o == nil || o.Deployment == nil {
		var ret MinimalDeployment
		return ret
	}
	return *o.Deployment
}

// GetDeploymentOk returns a tuple with the Deployment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetDeploymentOk() (*MinimalDeployment, bool) {
	if o == nil || o.Deployment == nil {
		return nil, false
	}
	return o.Deployment, true
}

// HasDeployment returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasDeployment() bool {
	if o != nil && o.Deployment != nil {
		return true
	}

	return false
}

// SetDeployment gets a reference to the given MinimalDeployment and assigns it to the Deployment field.
func (o *FullDeploymentRun) SetDeployment(v MinimalDeployment) {
	o.Deployment = &v
}

// GetDeploymentRunHosts returns the DeploymentRunHosts field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetDeploymentRunHosts() []MinimalDeploymentRunHost {
	if o == nil || o.DeploymentRunHosts == nil {
		var ret []MinimalDeploymentRunHost
		return ret
	}
	return *o.DeploymentRunHosts
}

// GetDeploymentRunHostsOk returns a tuple with the DeploymentRunHosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetDeploymentRunHostsOk() (*[]MinimalDeploymentRunHost, bool) {
	if o == nil || o.DeploymentRunHosts == nil {
		return nil, false
	}
	return o.DeploymentRunHosts, true
}

// HasDeploymentRunHosts returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasDeploymentRunHosts() bool {
	if o != nil && o.DeploymentRunHosts != nil {
		return true
	}

	return false
}

// SetDeploymentRunHosts gets a reference to the given []MinimalDeploymentRunHost and assigns it to the DeploymentRunHosts field.
func (o *FullDeploymentRun) SetDeploymentRunHosts(v []MinimalDeploymentRunHost) {
	o.DeploymentRunHosts = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetProperties() []Property {
	if o == nil || o.Properties == nil {
		var ret []Property
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetPropertiesOk() (*[]Property, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []Property and assigns it to the Properties field.
func (o *FullDeploymentRun) SetProperties(v []Property) {
	o.Properties = &v
}

// GetDeploymentRunStatus returns the DeploymentRunStatus field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetDeploymentRunStatus() string {
	if o == nil || o.DeploymentRunStatus == nil {
		var ret string
		return ret
	}
	return *o.DeploymentRunStatus
}

// GetDeploymentRunStatusOk returns a tuple with the DeploymentRunStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetDeploymentRunStatusOk() (*string, bool) {
	if o == nil || o.DeploymentRunStatus == nil {
		return nil, false
	}
	return o.DeploymentRunStatus, true
}

// HasDeploymentRunStatus returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasDeploymentRunStatus() bool {
	if o != nil && o.DeploymentRunStatus != nil {
		return true
	}

	return false
}

// SetDeploymentRunStatus gets a reference to the given string and assigns it to the DeploymentRunStatus field.
func (o *FullDeploymentRun) SetDeploymentRunStatus(v string) {
	o.DeploymentRunStatus = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FullDeploymentRun) SetDescription(v string) {
	o.Description = &v
}

// GetFapStatus returns the FapStatus field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetFapStatus() string {
	if o == nil || o.FapStatus == nil {
		var ret string
		return ret
	}
	return *o.FapStatus
}

// GetFapStatusOk returns a tuple with the FapStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetFapStatusOk() (*string, bool) {
	if o == nil || o.FapStatus == nil {
		return nil, false
	}
	return o.FapStatus, true
}

// HasFapStatus returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasFapStatus() bool {
	if o != nil && o.FapStatus != nil {
		return true
	}

	return false
}

// SetFapStatus gets a reference to the given string and assigns it to the FapStatus field.
func (o *FullDeploymentRun) SetFapStatus(v string) {
	o.FapStatus = &v
}

// GetHostSetName returns the HostSetName field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetHostSetName() string {
	if o == nil || o.HostSetName == nil {
		var ret string
		return ret
	}
	return *o.HostSetName
}

// GetHostSetNameOk returns a tuple with the HostSetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetHostSetNameOk() (*string, bool) {
	if o == nil || o.HostSetName == nil {
		return nil, false
	}
	return o.HostSetName, true
}

// HasHostSetName returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasHostSetName() bool {
	if o != nil && o.HostSetName != nil {
		return true
	}

	return false
}

// SetHostSetName gets a reference to the given string and assigns it to the HostSetName field.
func (o *FullDeploymentRun) SetHostSetName(v string) {
	o.HostSetName = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetLocked() bool {
	if o == nil || o.Locked == nil {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetLockedOk() (*bool, bool) {
	if o == nil || o.Locked == nil {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasLocked() bool {
	if o != nil && o.Locked != nil {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *FullDeploymentRun) SetLocked(v bool) {
	o.Locked = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *FullDeploymentRun) SetName(v string) {
	o.Name = &v
}

// GetPowerSchedule returns the PowerSchedule field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetPowerSchedule() PowerSchedule {
	if o == nil || o.PowerSchedule == nil {
		var ret PowerSchedule
		return ret
	}
	return *o.PowerSchedule
}

// GetPowerScheduleOk returns a tuple with the PowerSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetPowerScheduleOk() (*PowerSchedule, bool) {
	if o == nil || o.PowerSchedule == nil {
		return nil, false
	}
	return o.PowerSchedule, true
}

// HasPowerSchedule returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasPowerSchedule() bool {
	if o != nil && o.PowerSchedule != nil {
		return true
	}

	return false
}

// SetPowerSchedule gets a reference to the given PowerSchedule and assigns it to the PowerSchedule field.
func (o *FullDeploymentRun) SetPowerSchedule(v PowerSchedule) {
	o.PowerSchedule = &v
}

// GetRecurringSchedule returns the RecurringSchedule field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetRecurringSchedule() MinimalRecurringSchedule {
	if o == nil || o.RecurringSchedule == nil {
		var ret MinimalRecurringSchedule
		return ret
	}
	return *o.RecurringSchedule
}

// GetRecurringScheduleOk returns a tuple with the RecurringSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetRecurringScheduleOk() (*MinimalRecurringSchedule, bool) {
	if o == nil || o.RecurringSchedule == nil {
		return nil, false
	}
	return o.RecurringSchedule, true
}

// HasRecurringSchedule returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasRecurringSchedule() bool {
	if o != nil && o.RecurringSchedule != nil {
		return true
	}

	return false
}

// SetRecurringSchedule gets a reference to the given MinimalRecurringSchedule and assigns it to the RecurringSchedule field.
func (o *FullDeploymentRun) SetRecurringSchedule(v MinimalRecurringSchedule) {
	o.RecurringSchedule = &v
}

// GetSchedulerStatusMessage returns the SchedulerStatusMessage field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetSchedulerStatusMessage() string {
	if o == nil || o.SchedulerStatusMessage == nil {
		var ret string
		return ret
	}
	return *o.SchedulerStatusMessage
}

// GetSchedulerStatusMessageOk returns a tuple with the SchedulerStatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetSchedulerStatusMessageOk() (*string, bool) {
	if o == nil || o.SchedulerStatusMessage == nil {
		return nil, false
	}
	return o.SchedulerStatusMessage, true
}

// HasSchedulerStatusMessage returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasSchedulerStatusMessage() bool {
	if o != nil && o.SchedulerStatusMessage != nil {
		return true
	}

	return false
}

// SetSchedulerStatusMessage gets a reference to the given string and assigns it to the SchedulerStatusMessage field.
func (o *FullDeploymentRun) SetSchedulerStatusMessage(v string) {
	o.SchedulerStatusMessage = &v
}

// GetTargetState returns the TargetState field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetTargetState() string {
	if o == nil || o.TargetState == nil {
		var ret string
		return ret
	}
	return *o.TargetState
}

// GetTargetStateOk returns a tuple with the TargetState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetTargetStateOk() (*string, bool) {
	if o == nil || o.TargetState == nil {
		return nil, false
	}
	return o.TargetState, true
}

// HasTargetState returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasTargetState() bool {
	if o != nil && o.TargetState != nil {
		return true
	}

	return false
}

// SetTargetState gets a reference to the given string and assigns it to the TargetState field.
func (o *FullDeploymentRun) SetTargetState(v string) {
	o.TargetState = &v
}

// GetTestError returns the TestError field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetTestError() bool {
	if o == nil || o.TestError == nil {
		var ret bool
		return ret
	}
	return *o.TestError
}

// GetTestErrorOk returns a tuple with the TestError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetTestErrorOk() (*bool, bool) {
	if o == nil || o.TestError == nil {
		return nil, false
	}
	return o.TestError, true
}

// HasTestError returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasTestError() bool {
	if o != nil && o.TestError != nil {
		return true
	}

	return false
}

// SetTestError gets a reference to the given bool and assigns it to the TestError field.
func (o *FullDeploymentRun) SetTestError(v bool) {
	o.TestError = &v
}

// GetTestRuns returns the TestRuns field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetTestRuns() []MinimalTestRunTask {
	if o == nil || o.TestRuns == nil {
		var ret []MinimalTestRunTask
		return ret
	}
	return *o.TestRuns
}

// GetTestRunsOk returns a tuple with the TestRuns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetTestRunsOk() (*[]MinimalTestRunTask, bool) {
	if o == nil || o.TestRuns == nil {
		return nil, false
	}
	return o.TestRuns, true
}

// HasTestRuns returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasTestRuns() bool {
	if o != nil && o.TestRuns != nil {
		return true
	}

	return false
}

// SetTestRuns gets a reference to the given []MinimalTestRunTask and assigns it to the TestRuns field.
func (o *FullDeploymentRun) SetTestRuns(v []MinimalTestRunTask) {
	o.TestRuns = &v
}

// GetRetainedOnError returns the RetainedOnError field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetRetainedOnError() bool {
	if o == nil || o.RetainedOnError == nil {
		var ret bool
		return ret
	}
	return *o.RetainedOnError
}

// GetRetainedOnErrorOk returns a tuple with the RetainedOnError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetRetainedOnErrorOk() (*bool, bool) {
	if o == nil || o.RetainedOnError == nil {
		return nil, false
	}
	return o.RetainedOnError, true
}

// HasRetainedOnError returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasRetainedOnError() bool {
	if o != nil && o.RetainedOnError != nil {
		return true
	}

	return false
}

// SetRetainedOnError gets a reference to the given bool and assigns it to the RetainedOnError field.
func (o *FullDeploymentRun) SetRetainedOnError(v bool) {
	o.RetainedOnError = &v
}

// GetVirtualizationRealm returns the VirtualizationRealm field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetVirtualizationRealm() MinimalVirtualizationRealm {
	if o == nil || o.VirtualizationRealm == nil {
		var ret MinimalVirtualizationRealm
		return ret
	}
	return *o.VirtualizationRealm
}

// GetVirtualizationRealmOk returns a tuple with the VirtualizationRealm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetVirtualizationRealmOk() (*MinimalVirtualizationRealm, bool) {
	if o == nil || o.VirtualizationRealm == nil {
		return nil, false
	}
	return o.VirtualizationRealm, true
}

// HasVirtualizationRealm returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasVirtualizationRealm() bool {
	if o != nil && o.VirtualizationRealm != nil {
		return true
	}

	return false
}

// SetVirtualizationRealm gets a reference to the given MinimalVirtualizationRealm and assigns it to the VirtualizationRealm field.
func (o *FullDeploymentRun) SetVirtualizationRealm(v MinimalVirtualizationRealm) {
	o.VirtualizationRealm = &v
}

// GetDeploymentRunResultType returns the DeploymentRunResultType field value if set, zero value otherwise.
func (o *FullDeploymentRun) GetDeploymentRunResultType() string {
	if o == nil || o.DeploymentRunResultType == nil {
		var ret string
		return ret
	}
	return *o.DeploymentRunResultType
}

// GetDeploymentRunResultTypeOk returns a tuple with the DeploymentRunResultType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullDeploymentRun) GetDeploymentRunResultTypeOk() (*string, bool) {
	if o == nil || o.DeploymentRunResultType == nil {
		return nil, false
	}
	return o.DeploymentRunResultType, true
}

// HasDeploymentRunResultType returns a boolean if a field has been set.
func (o *FullDeploymentRun) HasDeploymentRunResultType() bool {
	if o != nil && o.DeploymentRunResultType != nil {
		return true
	}

	return false
}

// SetDeploymentRunResultType gets a reference to the given string and assigns it to the DeploymentRunResultType field.
func (o *FullDeploymentRun) SetDeploymentRunResultType(v string) {
	o.DeploymentRunResultType = &v
}

func (o FullDeploymentRun) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Categories != nil {
		toSerialize["categories"] = o.Categories
	}
	if o.Creator != nil {
		toSerialize["creator"] = o.Creator
	}
	if o.EarliestStartTime != nil {
		toSerialize["earliestStartTime"] = o.EarliestStartTime
	}
	if o.EndTime != nil {
		toSerialize["endTime"] = o.EndTime
	}
	if o.LeaseTime != nil {
		toSerialize["leaseTime"] = o.LeaseTime
	}
	if o.EstimatedReadyTime != nil {
		toSerialize["estimatedReadyTime"] = o.EstimatedReadyTime
	}
	if o.EstimatedStartTime != nil {
		toSerialize["estimatedStartTime"] = o.EstimatedStartTime
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LogEntries != nil {
		toSerialize["logEntries"] = o.LogEntries
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.ReadyTime != nil {
		toSerialize["readyTime"] = o.ReadyTime
	}
	if o.Result != nil {
		toSerialize["result"] = o.Result
	}
	if o.StartTime != nil {
		toSerialize["startTime"] = o.StartTime
	}
	if o.TimeOfRequest != nil {
		toSerialize["timeOfRequest"] = o.TimeOfRequest
	}
	if o.Canceled != nil {
		toSerialize["canceled"] = o.Canceled
	}
	if o.Deployment != nil {
		toSerialize["deployment"] = o.Deployment
	}
	if o.DeploymentRunHosts != nil {
		toSerialize["deploymentRunHosts"] = o.DeploymentRunHosts
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.DeploymentRunStatus != nil {
		toSerialize["deploymentRunStatus"] = o.DeploymentRunStatus
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.FapStatus != nil {
		toSerialize["fapStatus"] = o.FapStatus
	}
	if o.HostSetName != nil {
		toSerialize["hostSetName"] = o.HostSetName
	}
	if o.Locked != nil {
		toSerialize["locked"] = o.Locked
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.PowerSchedule != nil {
		toSerialize["powerSchedule"] = o.PowerSchedule
	}
	if o.RecurringSchedule != nil {
		toSerialize["recurringSchedule"] = o.RecurringSchedule
	}
	if o.SchedulerStatusMessage != nil {
		toSerialize["schedulerStatusMessage"] = o.SchedulerStatusMessage
	}
	if o.TargetState != nil {
		toSerialize["targetState"] = o.TargetState
	}
	if o.TestError != nil {
		toSerialize["testError"] = o.TestError
	}
	if o.TestRuns != nil {
		toSerialize["testRuns"] = o.TestRuns
	}
	if o.RetainedOnError != nil {
		toSerialize["retainedOnError"] = o.RetainedOnError
	}
	if o.VirtualizationRealm != nil {
		toSerialize["virtualizationRealm"] = o.VirtualizationRealm
	}
	if o.DeploymentRunResultType != nil {
		toSerialize["deploymentRunResultType"] = o.DeploymentRunResultType
	}
	return json.Marshal(toSerialize)
}

type NullableFullDeploymentRun struct {
	value *FullDeploymentRun
	isSet bool
}

func (v NullableFullDeploymentRun) Get() *FullDeploymentRun {
	return v.value
}

func (v *NullableFullDeploymentRun) Set(val *FullDeploymentRun) {
	v.value = val
	v.isSet = true
}

func (v NullableFullDeploymentRun) IsSet() bool {
	return v.isSet
}

func (v *NullableFullDeploymentRun) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFullDeploymentRun(val *FullDeploymentRun) *NullableFullDeploymentRun {
	return &NullableFullDeploymentRun{value: val, isSet: true}
}

func (v NullableFullDeploymentRun) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFullDeploymentRun) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
