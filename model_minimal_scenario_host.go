/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// MinimalScenarioHost struct for MinimalScenarioHost
type MinimalScenarioHost struct {
	Id                             *int32                `json:"id,omitempty"`
	BuildOrder                     *int32                `json:"buildOrder,omitempty"`
	Master                         *bool                 `json:"master,omitempty"`
	SystemRole                     *string               `json:"systemRole,omitempty"`
	SystemModule                   *MinimalSystemModule  `json:"systemModule,omitempty"`
	ConfigureScenarioConfiguration *MinimalConfiguration `json:"configureScenarioConfiguration,omitempty"`
	TeardownScenarioConfiguration  *MinimalConfiguration `json:"teardownScenarioConfiguration,omitempty"`
}

// NewMinimalScenarioHost instantiates a new MinimalScenarioHost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMinimalScenarioHost() *MinimalScenarioHost {
	this := MinimalScenarioHost{}
	return &this
}

// NewMinimalScenarioHostWithDefaults instantiates a new MinimalScenarioHost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMinimalScenarioHostWithDefaults() *MinimalScenarioHost {
	this := MinimalScenarioHost{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MinimalScenarioHost) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalScenarioHost) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MinimalScenarioHost) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MinimalScenarioHost) SetId(v int32) {
	o.Id = &v
}

// GetBuildOrder returns the BuildOrder field value if set, zero value otherwise.
func (o *MinimalScenarioHost) GetBuildOrder() int32 {
	if o == nil || o.BuildOrder == nil {
		var ret int32
		return ret
	}
	return *o.BuildOrder
}

// GetBuildOrderOk returns a tuple with the BuildOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalScenarioHost) GetBuildOrderOk() (*int32, bool) {
	if o == nil || o.BuildOrder == nil {
		return nil, false
	}
	return o.BuildOrder, true
}

// HasBuildOrder returns a boolean if a field has been set.
func (o *MinimalScenarioHost) HasBuildOrder() bool {
	if o != nil && o.BuildOrder != nil {
		return true
	}

	return false
}

// SetBuildOrder gets a reference to the given int32 and assigns it to the BuildOrder field.
func (o *MinimalScenarioHost) SetBuildOrder(v int32) {
	o.BuildOrder = &v
}

// GetMaster returns the Master field value if set, zero value otherwise.
func (o *MinimalScenarioHost) GetMaster() bool {
	if o == nil || o.Master == nil {
		var ret bool
		return ret
	}
	return *o.Master
}

// GetMasterOk returns a tuple with the Master field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalScenarioHost) GetMasterOk() (*bool, bool) {
	if o == nil || o.Master == nil {
		return nil, false
	}
	return o.Master, true
}

// HasMaster returns a boolean if a field has been set.
func (o *MinimalScenarioHost) HasMaster() bool {
	if o != nil && o.Master != nil {
		return true
	}

	return false
}

// SetMaster gets a reference to the given bool and assigns it to the Master field.
func (o *MinimalScenarioHost) SetMaster(v bool) {
	o.Master = &v
}

// GetSystemRole returns the SystemRole field value if set, zero value otherwise.
func (o *MinimalScenarioHost) GetSystemRole() string {
	if o == nil || o.SystemRole == nil {
		var ret string
		return ret
	}
	return *o.SystemRole
}

// GetSystemRoleOk returns a tuple with the SystemRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalScenarioHost) GetSystemRoleOk() (*string, bool) {
	if o == nil || o.SystemRole == nil {
		return nil, false
	}
	return o.SystemRole, true
}

// HasSystemRole returns a boolean if a field has been set.
func (o *MinimalScenarioHost) HasSystemRole() bool {
	if o != nil && o.SystemRole != nil {
		return true
	}

	return false
}

// SetSystemRole gets a reference to the given string and assigns it to the SystemRole field.
func (o *MinimalScenarioHost) SetSystemRole(v string) {
	o.SystemRole = &v
}

// GetSystemModule returns the SystemModule field value if set, zero value otherwise.
func (o *MinimalScenarioHost) GetSystemModule() MinimalSystemModule {
	if o == nil || o.SystemModule == nil {
		var ret MinimalSystemModule
		return ret
	}
	return *o.SystemModule
}

// GetSystemModuleOk returns a tuple with the SystemModule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalScenarioHost) GetSystemModuleOk() (*MinimalSystemModule, bool) {
	if o == nil || o.SystemModule == nil {
		return nil, false
	}
	return o.SystemModule, true
}

// HasSystemModule returns a boolean if a field has been set.
func (o *MinimalScenarioHost) HasSystemModule() bool {
	if o != nil && o.SystemModule != nil {
		return true
	}

	return false
}

// SetSystemModule gets a reference to the given MinimalSystemModule and assigns it to the SystemModule field.
func (o *MinimalScenarioHost) SetSystemModule(v MinimalSystemModule) {
	o.SystemModule = &v
}

// GetConfigureScenarioConfiguration returns the ConfigureScenarioConfiguration field value if set, zero value otherwise.
func (o *MinimalScenarioHost) GetConfigureScenarioConfiguration() MinimalConfiguration {
	if o == nil || o.ConfigureScenarioConfiguration == nil {
		var ret MinimalConfiguration
		return ret
	}
	return *o.ConfigureScenarioConfiguration
}

// GetConfigureScenarioConfigurationOk returns a tuple with the ConfigureScenarioConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalScenarioHost) GetConfigureScenarioConfigurationOk() (*MinimalConfiguration, bool) {
	if o == nil || o.ConfigureScenarioConfiguration == nil {
		return nil, false
	}
	return o.ConfigureScenarioConfiguration, true
}

// HasConfigureScenarioConfiguration returns a boolean if a field has been set.
func (o *MinimalScenarioHost) HasConfigureScenarioConfiguration() bool {
	if o != nil && o.ConfigureScenarioConfiguration != nil {
		return true
	}

	return false
}

// SetConfigureScenarioConfiguration gets a reference to the given MinimalConfiguration and assigns it to the ConfigureScenarioConfiguration field.
func (o *MinimalScenarioHost) SetConfigureScenarioConfiguration(v MinimalConfiguration) {
	o.ConfigureScenarioConfiguration = &v
}

// GetTeardownScenarioConfiguration returns the TeardownScenarioConfiguration field value if set, zero value otherwise.
func (o *MinimalScenarioHost) GetTeardownScenarioConfiguration() MinimalConfiguration {
	if o == nil || o.TeardownScenarioConfiguration == nil {
		var ret MinimalConfiguration
		return ret
	}
	return *o.TeardownScenarioConfiguration
}

// GetTeardownScenarioConfigurationOk returns a tuple with the TeardownScenarioConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalScenarioHost) GetTeardownScenarioConfigurationOk() (*MinimalConfiguration, bool) {
	if o == nil || o.TeardownScenarioConfiguration == nil {
		return nil, false
	}
	return o.TeardownScenarioConfiguration, true
}

// HasTeardownScenarioConfiguration returns a boolean if a field has been set.
func (o *MinimalScenarioHost) HasTeardownScenarioConfiguration() bool {
	if o != nil && o.TeardownScenarioConfiguration != nil {
		return true
	}

	return false
}

// SetTeardownScenarioConfiguration gets a reference to the given MinimalConfiguration and assigns it to the TeardownScenarioConfiguration field.
func (o *MinimalScenarioHost) SetTeardownScenarioConfiguration(v MinimalConfiguration) {
	o.TeardownScenarioConfiguration = &v
}

func (o MinimalScenarioHost) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.BuildOrder != nil {
		toSerialize["buildOrder"] = o.BuildOrder
	}
	if o.Master != nil {
		toSerialize["master"] = o.Master
	}
	if o.SystemRole != nil {
		toSerialize["systemRole"] = o.SystemRole
	}
	if o.SystemModule != nil {
		toSerialize["systemModule"] = o.SystemModule
	}
	if o.ConfigureScenarioConfiguration != nil {
		toSerialize["configureScenarioConfiguration"] = o.ConfigureScenarioConfiguration
	}
	if o.TeardownScenarioConfiguration != nil {
		toSerialize["teardownScenarioConfiguration"] = o.TeardownScenarioConfiguration
	}
	return json.Marshal(toSerialize)
}

type NullableMinimalScenarioHost struct {
	value *MinimalScenarioHost
	isSet bool
}

func (v NullableMinimalScenarioHost) Get() *MinimalScenarioHost {
	return v.value
}

func (v *NullableMinimalScenarioHost) Set(val *MinimalScenarioHost) {
	v.value = val
	v.isSet = true
}

func (v NullableMinimalScenarioHost) IsSet() bool {
	return v.isSet
}

func (v *NullableMinimalScenarioHost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMinimalScenarioHost(val *MinimalScenarioHost) *NullableMinimalScenarioHost {
	return &NullableMinimalScenarioHost{value: val, isSet: true}
}

func (v NullableMinimalScenarioHost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMinimalScenarioHost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
