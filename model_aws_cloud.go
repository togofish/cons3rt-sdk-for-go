/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// AwsCloud struct for AwsCloud
type AwsCloud struct {
	AccessKey          string `json:"accessKey"`
	OwnerId            string `json:"ownerId"`
	RegionName         string `json:"regionName"`
	SecretAccessKey    string `json:"secretAccessKey"`
	Description        string
	Name               string
	ExternalIpSource   string
	MaximumImpactLevel string
	OwningTeam         Team
	Subtype            string
}

// NewAwsCloud instantiates a new AwsCloud object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsCloud(accessKey string, ownerId string, regionName string, secretAccessKey string, description string, name string, externalIpSource string, maximumImpactLevel string, owningTeam Team, subtype string) *AwsCloud {
	this := AwsCloud{}
	this.Description = description
	this.Name = name
	this.ExternalIpSource = externalIpSource
	this.MaximumImpactLevel = maximumImpactLevel
	this.OwningTeam = owningTeam
	this.Subtype = subtype
	this.AccessKey = accessKey
	this.OwnerId = ownerId
	this.RegionName = regionName
	this.SecretAccessKey = secretAccessKey
	return &this
}

// NewAwsCloudWithDefaults instantiates a new AwsCloud object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsCloudWithDefaults() *AwsCloud {
	this := AwsCloud{}
	return &this
}

// GetAccessKey returns the AccessKey field value
func (o *AwsCloud) GetAccessKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value
// and a boolean to check if the value has been set.
func (o *AwsCloud) GetAccessKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessKey, true
}

// SetAccessKey sets field value
func (o *AwsCloud) SetAccessKey(v string) {
	o.AccessKey = v
}

// GetOwnerId returns the OwnerId field value
func (o *AwsCloud) GetOwnerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value
// and a boolean to check if the value has been set.
func (o *AwsCloud) GetOwnerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerId, true
}

// SetOwnerId sets field value
func (o *AwsCloud) SetOwnerId(v string) {
	o.OwnerId = v
}

// GetRegionName returns the RegionName field value
func (o *AwsCloud) GetRegionName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RegionName
}

// GetRegionNameOk returns a tuple with the RegionName field value
// and a boolean to check if the value has been set.
func (o *AwsCloud) GetRegionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegionName, true
}

// SetRegionName sets field value
func (o *AwsCloud) SetRegionName(v string) {
	o.RegionName = v
}

// GetSecretAccessKey returns the SecretAccessKey field value
func (o *AwsCloud) GetSecretAccessKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecretAccessKey
}

// GetSecretAccessKeyOk returns a tuple with the SecretAccessKey field value
// and a boolean to check if the value has been set.
func (o *AwsCloud) GetSecretAccessKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretAccessKey, true
}

// SetSecretAccessKey sets field value
func (o *AwsCloud) SetSecretAccessKey(v string) {
	o.SecretAccessKey = v
}

func (o AwsCloud) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["accessKey"] = o.AccessKey
	}
	if true {
		toSerialize["ownerId"] = o.OwnerId
	}
	if true {
		toSerialize["regionName"] = o.RegionName
	}
	if true {
		toSerialize["secretAccessKey"] = o.SecretAccessKey
	}
	return json.Marshal(toSerialize)
}

type NullableAwsCloud struct {
	value *AwsCloud
	isSet bool
}

func (v NullableAwsCloud) Get() *AwsCloud {
	return v.value
}

func (v *NullableAwsCloud) Set(val *AwsCloud) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsCloud) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsCloud) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsCloud(val *AwsCloud) *NullableAwsCloud {
	return &NullableAwsCloud{value: val, isSet: true}
}

func (v NullableAwsCloud) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsCloud) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
