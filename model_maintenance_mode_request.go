/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// MaintenanceModeRequest struct for MaintenanceModeRequest
type MaintenanceModeRequest struct {
	EndDate *int32 `json:"endDate,omitempty"`
	Message *string `json:"message,omitempty"`
	Timeout *int32 `json:"timeout,omitempty"`
}

// NewMaintenanceModeRequest instantiates a new MaintenanceModeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMaintenanceModeRequest() *MaintenanceModeRequest {
	this := MaintenanceModeRequest{}
	return &this
}

// NewMaintenanceModeRequestWithDefaults instantiates a new MaintenanceModeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMaintenanceModeRequestWithDefaults() *MaintenanceModeRequest {
	this := MaintenanceModeRequest{}
	return &this
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *MaintenanceModeRequest) GetEndDate() int32 {
	if o == nil || o.EndDate == nil {
		var ret int32
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceModeRequest) GetEndDateOk() (*int32, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *MaintenanceModeRequest) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given int32 and assigns it to the EndDate field.
func (o *MaintenanceModeRequest) SetEndDate(v int32) {
	o.EndDate = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *MaintenanceModeRequest) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceModeRequest) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *MaintenanceModeRequest) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *MaintenanceModeRequest) SetMessage(v string) {
	o.Message = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *MaintenanceModeRequest) GetTimeout() int32 {
	if o == nil || o.Timeout == nil {
		var ret int32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MaintenanceModeRequest) GetTimeoutOk() (*int32, bool) {
	if o == nil || o.Timeout == nil {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *MaintenanceModeRequest) HasTimeout() bool {
	if o != nil && o.Timeout != nil {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int32 and assigns it to the Timeout field.
func (o *MaintenanceModeRequest) SetTimeout(v int32) {
	o.Timeout = &v
}

func (o MaintenanceModeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EndDate != nil {
		toSerialize["endDate"] = o.EndDate
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Timeout != nil {
		toSerialize["timeout"] = o.Timeout
	}
	return json.Marshal(toSerialize)
}

type NullableMaintenanceModeRequest struct {
	value *MaintenanceModeRequest
	isSet bool
}

func (v NullableMaintenanceModeRequest) Get() *MaintenanceModeRequest {
	return v.value
}

func (v *NullableMaintenanceModeRequest) Set(val *MaintenanceModeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMaintenanceModeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMaintenanceModeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMaintenanceModeRequest(val *MaintenanceModeRequest) *NullableMaintenanceModeRequest {
	return &NullableMaintenanceModeRequest{value: val, isSet: true}
}

func (v NullableMaintenanceModeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMaintenanceModeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


