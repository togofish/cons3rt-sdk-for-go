/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AbstractCloudResources struct for AbstractCloudResources
type AbstractCloudResources struct {
	NatInstanceTypes *[]InstanceType `json:"natInstanceTypes,omitempty"`
	Subtype          string          `json:"subtype"`
}

// NewAbstractCloudResources instantiates a new AbstractCloudResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAbstractCloudResources(subtype string) *AbstractCloudResources {
	this := AbstractCloudResources{}
	this.Subtype = subtype
	return &this
}

// NewAbstractCloudResourcesWithDefaults instantiates a new AbstractCloudResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAbstractCloudResourcesWithDefaults() *AbstractCloudResources {
	this := AbstractCloudResources{}
	return &this
}

// GetNatInstanceTypes returns the NatInstanceTypes field value if set, zero value otherwise.
func (o *AbstractCloudResources) GetNatInstanceTypes() []InstanceType {
	if o == nil || o.NatInstanceTypes == nil {
		var ret []InstanceType
		return ret
	}
	return *o.NatInstanceTypes
}

// GetNatInstanceTypesOk returns a tuple with the NatInstanceTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractCloudResources) GetNatInstanceTypesOk() (*[]InstanceType, bool) {
	if o == nil || o.NatInstanceTypes == nil {
		return nil, false
	}
	return o.NatInstanceTypes, true
}

// HasNatInstanceTypes returns a boolean if a field has been set.
func (o *AbstractCloudResources) HasNatInstanceTypes() bool {
	if o != nil && o.NatInstanceTypes != nil {
		return true
	}

	return false
}

// SetNatInstanceTypes gets a reference to the given []InstanceType and assigns it to the NatInstanceTypes field.
func (o *AbstractCloudResources) SetNatInstanceTypes(v []InstanceType) {
	o.NatInstanceTypes = &v
}

// GetSubtype returns the Subtype field value
func (o *AbstractCloudResources) GetSubtype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subtype
}

// GetSubtypeOk returns a tuple with the Subtype field value
// and a boolean to check if the value has been set.
func (o *AbstractCloudResources) GetSubtypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subtype, true
}

// SetSubtype sets field value
func (o *AbstractCloudResources) SetSubtype(v string) {
	o.Subtype = v
}

func (o AbstractCloudResources) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NatInstanceTypes != nil {
		toSerialize["natInstanceTypes"] = o.NatInstanceTypes
	}
	if true {
		toSerialize["subtype"] = o.Subtype
	}
	return json.Marshal(toSerialize)
}

type NullableAbstractCloudResources struct {
	value *AbstractCloudResources
	isSet bool
}

func (v NullableAbstractCloudResources) Get() *AbstractCloudResources {
	return v.value
}

func (v *NullableAbstractCloudResources) Set(val *AbstractCloudResources) {
	v.value = val
	v.isSet = true
}

func (v NullableAbstractCloudResources) IsSet() bool {
	return v.isSet
}

func (v *NullableAbstractCloudResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAbstractCloudResources(val *AbstractCloudResources) *NullableAbstractCloudResources {
	return &NullableAbstractCloudResources{value: val, isSet: true}
}

func (v NullableAbstractCloudResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAbstractCloudResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
