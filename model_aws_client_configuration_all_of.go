/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AwsClientConfigurationAllOf struct for AwsClientConfigurationAllOf
type AwsClientConfigurationAllOf struct {
	SessionToken *string `json:"sessionToken,omitempty"`
	RegionName   *string `json:"regionName,omitempty"`
}

// NewAwsClientConfigurationAllOf instantiates a new AwsClientConfigurationAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsClientConfigurationAllOf() *AwsClientConfigurationAllOf {
	this := AwsClientConfigurationAllOf{}
	return &this
}

// NewAwsClientConfigurationAllOfWithDefaults instantiates a new AwsClientConfigurationAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsClientConfigurationAllOfWithDefaults() *AwsClientConfigurationAllOf {
	this := AwsClientConfigurationAllOf{}
	return &this
}

// GetSessionToken returns the SessionToken field value if set, zero value otherwise.
func (o *AwsClientConfigurationAllOf) GetSessionToken() string {
	if o == nil || o.SessionToken == nil {
		var ret string
		return ret
	}
	return *o.SessionToken
}

// GetSessionTokenOk returns a tuple with the SessionToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsClientConfigurationAllOf) GetSessionTokenOk() (*string, bool) {
	if o == nil || o.SessionToken == nil {
		return nil, false
	}
	return o.SessionToken, true
}

// HasSessionToken returns a boolean if a field has been set.
func (o *AwsClientConfigurationAllOf) HasSessionToken() bool {
	if o != nil && o.SessionToken != nil {
		return true
	}

	return false
}

// SetSessionToken gets a reference to the given string and assigns it to the SessionToken field.
func (o *AwsClientConfigurationAllOf) SetSessionToken(v string) {
	o.SessionToken = &v
}

// GetRegionName returns the RegionName field value if set, zero value otherwise.
func (o *AwsClientConfigurationAllOf) GetRegionName() string {
	if o == nil || o.RegionName == nil {
		var ret string
		return ret
	}
	return *o.RegionName
}

// GetRegionNameOk returns a tuple with the RegionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsClientConfigurationAllOf) GetRegionNameOk() (*string, bool) {
	if o == nil || o.RegionName == nil {
		return nil, false
	}
	return o.RegionName, true
}

// HasRegionName returns a boolean if a field has been set.
func (o *AwsClientConfigurationAllOf) HasRegionName() bool {
	if o != nil && o.RegionName != nil {
		return true
	}

	return false
}

// SetRegionName gets a reference to the given string and assigns it to the RegionName field.
func (o *AwsClientConfigurationAllOf) SetRegionName(v string) {
	o.RegionName = &v
}

func (o AwsClientConfigurationAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SessionToken != nil {
		toSerialize["sessionToken"] = o.SessionToken
	}
	if o.RegionName != nil {
		toSerialize["regionName"] = o.RegionName
	}
	return json.Marshal(toSerialize)
}

type NullableAwsClientConfigurationAllOf struct {
	value *AwsClientConfigurationAllOf
	isSet bool
}

func (v NullableAwsClientConfigurationAllOf) Get() *AwsClientConfigurationAllOf {
	return v.value
}

func (v *NullableAwsClientConfigurationAllOf) Set(val *AwsClientConfigurationAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsClientConfigurationAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsClientConfigurationAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsClientConfigurationAllOf(val *AwsClientConfigurationAllOf) *NullableAwsClientConfigurationAllOf {
	return &NullableAwsClientConfigurationAllOf{value: val, isSet: true}
}

func (v NullableAwsClientConfigurationAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsClientConfigurationAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
