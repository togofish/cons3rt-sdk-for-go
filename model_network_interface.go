/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// NetworkInterface struct for NetworkInterface
type NetworkInterface struct {
	ExternalIpAddress *string `json:"externalIpAddress,omitempty"`
	InterfaceName     *string `json:"interfaceName,omitempty"`
	InternalIpAddress *string `json:"internalIpAddress,omitempty"`
	NetworkFunction   *string `json:"networkFunction,omitempty"`
	MacAddress        *string `json:"macAddress,omitempty"`
	NetworkName       *string `json:"networkName,omitempty"`
	NetworkIdentifier *string `json:"networkIdentifier,omitempty"`
}

// NewNetworkInterface instantiates a new NetworkInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkInterface() *NetworkInterface {
	this := NetworkInterface{}
	return &this
}

// NewNetworkInterfaceWithDefaults instantiates a new NetworkInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkInterfaceWithDefaults() *NetworkInterface {
	this := NetworkInterface{}
	return &this
}

// GetExternalIpAddress returns the ExternalIpAddress field value if set, zero value otherwise.
func (o *NetworkInterface) GetExternalIpAddress() string {
	if o == nil || o.ExternalIpAddress == nil {
		var ret string
		return ret
	}
	return *o.ExternalIpAddress
}

// GetExternalIpAddressOk returns a tuple with the ExternalIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterface) GetExternalIpAddressOk() (*string, bool) {
	if o == nil || o.ExternalIpAddress == nil {
		return nil, false
	}
	return o.ExternalIpAddress, true
}

// HasExternalIpAddress returns a boolean if a field has been set.
func (o *NetworkInterface) HasExternalIpAddress() bool {
	if o != nil && o.ExternalIpAddress != nil {
		return true
	}

	return false
}

// SetExternalIpAddress gets a reference to the given string and assigns it to the ExternalIpAddress field.
func (o *NetworkInterface) SetExternalIpAddress(v string) {
	o.ExternalIpAddress = &v
}

// GetInterfaceName returns the InterfaceName field value if set, zero value otherwise.
func (o *NetworkInterface) GetInterfaceName() string {
	if o == nil || o.InterfaceName == nil {
		var ret string
		return ret
	}
	return *o.InterfaceName
}

// GetInterfaceNameOk returns a tuple with the InterfaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterface) GetInterfaceNameOk() (*string, bool) {
	if o == nil || o.InterfaceName == nil {
		return nil, false
	}
	return o.InterfaceName, true
}

// HasInterfaceName returns a boolean if a field has been set.
func (o *NetworkInterface) HasInterfaceName() bool {
	if o != nil && o.InterfaceName != nil {
		return true
	}

	return false
}

// SetInterfaceName gets a reference to the given string and assigns it to the InterfaceName field.
func (o *NetworkInterface) SetInterfaceName(v string) {
	o.InterfaceName = &v
}

// GetInternalIpAddress returns the InternalIpAddress field value if set, zero value otherwise.
func (o *NetworkInterface) GetInternalIpAddress() string {
	if o == nil || o.InternalIpAddress == nil {
		var ret string
		return ret
	}
	return *o.InternalIpAddress
}

// GetInternalIpAddressOk returns a tuple with the InternalIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterface) GetInternalIpAddressOk() (*string, bool) {
	if o == nil || o.InternalIpAddress == nil {
		return nil, false
	}
	return o.InternalIpAddress, true
}

// HasInternalIpAddress returns a boolean if a field has been set.
func (o *NetworkInterface) HasInternalIpAddress() bool {
	if o != nil && o.InternalIpAddress != nil {
		return true
	}

	return false
}

// SetInternalIpAddress gets a reference to the given string and assigns it to the InternalIpAddress field.
func (o *NetworkInterface) SetInternalIpAddress(v string) {
	o.InternalIpAddress = &v
}

// GetNetworkFunction returns the NetworkFunction field value if set, zero value otherwise.
func (o *NetworkInterface) GetNetworkFunction() string {
	if o == nil || o.NetworkFunction == nil {
		var ret string
		return ret
	}
	return *o.NetworkFunction
}

// GetNetworkFunctionOk returns a tuple with the NetworkFunction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterface) GetNetworkFunctionOk() (*string, bool) {
	if o == nil || o.NetworkFunction == nil {
		return nil, false
	}
	return o.NetworkFunction, true
}

// HasNetworkFunction returns a boolean if a field has been set.
func (o *NetworkInterface) HasNetworkFunction() bool {
	if o != nil && o.NetworkFunction != nil {
		return true
	}

	return false
}

// SetNetworkFunction gets a reference to the given string and assigns it to the NetworkFunction field.
func (o *NetworkInterface) SetNetworkFunction(v string) {
	o.NetworkFunction = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *NetworkInterface) GetMacAddress() string {
	if o == nil || o.MacAddress == nil {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterface) GetMacAddressOk() (*string, bool) {
	if o == nil || o.MacAddress == nil {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *NetworkInterface) HasMacAddress() bool {
	if o != nil && o.MacAddress != nil {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *NetworkInterface) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetNetworkName returns the NetworkName field value if set, zero value otherwise.
func (o *NetworkInterface) GetNetworkName() string {
	if o == nil || o.NetworkName == nil {
		var ret string
		return ret
	}
	return *o.NetworkName
}

// GetNetworkNameOk returns a tuple with the NetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterface) GetNetworkNameOk() (*string, bool) {
	if o == nil || o.NetworkName == nil {
		return nil, false
	}
	return o.NetworkName, true
}

// HasNetworkName returns a boolean if a field has been set.
func (o *NetworkInterface) HasNetworkName() bool {
	if o != nil && o.NetworkName != nil {
		return true
	}

	return false
}

// SetNetworkName gets a reference to the given string and assigns it to the NetworkName field.
func (o *NetworkInterface) SetNetworkName(v string) {
	o.NetworkName = &v
}

// GetNetworkIdentifier returns the NetworkIdentifier field value if set, zero value otherwise.
func (o *NetworkInterface) GetNetworkIdentifier() string {
	if o == nil || o.NetworkIdentifier == nil {
		var ret string
		return ret
	}
	return *o.NetworkIdentifier
}

// GetNetworkIdentifierOk returns a tuple with the NetworkIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkInterface) GetNetworkIdentifierOk() (*string, bool) {
	if o == nil || o.NetworkIdentifier == nil {
		return nil, false
	}
	return o.NetworkIdentifier, true
}

// HasNetworkIdentifier returns a boolean if a field has been set.
func (o *NetworkInterface) HasNetworkIdentifier() bool {
	if o != nil && o.NetworkIdentifier != nil {
		return true
	}

	return false
}

// SetNetworkIdentifier gets a reference to the given string and assigns it to the NetworkIdentifier field.
func (o *NetworkInterface) SetNetworkIdentifier(v string) {
	o.NetworkIdentifier = &v
}

func (o NetworkInterface) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ExternalIpAddress != nil {
		toSerialize["externalIpAddress"] = o.ExternalIpAddress
	}
	if o.InterfaceName != nil {
		toSerialize["interfaceName"] = o.InterfaceName
	}
	if o.InternalIpAddress != nil {
		toSerialize["internalIpAddress"] = o.InternalIpAddress
	}
	if o.NetworkFunction != nil {
		toSerialize["networkFunction"] = o.NetworkFunction
	}
	if o.MacAddress != nil {
		toSerialize["macAddress"] = o.MacAddress
	}
	if o.NetworkName != nil {
		toSerialize["networkName"] = o.NetworkName
	}
	if o.NetworkIdentifier != nil {
		toSerialize["networkIdentifier"] = o.NetworkIdentifier
	}
	return json.Marshal(toSerialize)
}

type NullableNetworkInterface struct {
	value *NetworkInterface
	isSet bool
}

func (v NullableNetworkInterface) Get() *NetworkInterface {
	return v.value
}

func (v *NullableNetworkInterface) Set(val *NetworkInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkInterface(val *NetworkInterface) *NullableNetworkInterface {
	return &NullableNetworkInterface{value: val, isSet: true}
}

func (v NullableNetworkInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
