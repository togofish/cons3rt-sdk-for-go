/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// MinimalDeploymentRunHost struct for MinimalDeploymentRunHost
type MinimalDeploymentRunHost struct {
	Hostname *string `json:"hostname,omitempty"`
	Id *int32 `json:"id,omitempty"`
}

// NewMinimalDeploymentRunHost instantiates a new MinimalDeploymentRunHost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMinimalDeploymentRunHost() *MinimalDeploymentRunHost {
	this := MinimalDeploymentRunHost{}
	return &this
}

// NewMinimalDeploymentRunHostWithDefaults instantiates a new MinimalDeploymentRunHost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMinimalDeploymentRunHostWithDefaults() *MinimalDeploymentRunHost {
	this := MinimalDeploymentRunHost{}
	return &this
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *MinimalDeploymentRunHost) GetHostname() string {
	if o == nil || o.Hostname == nil {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalDeploymentRunHost) GetHostnameOk() (*string, bool) {
	if o == nil || o.Hostname == nil {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *MinimalDeploymentRunHost) HasHostname() bool {
	if o != nil && o.Hostname != nil {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *MinimalDeploymentRunHost) SetHostname(v string) {
	o.Hostname = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MinimalDeploymentRunHost) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalDeploymentRunHost) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MinimalDeploymentRunHost) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MinimalDeploymentRunHost) SetId(v int32) {
	o.Id = &v
}

func (o MinimalDeploymentRunHost) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Hostname != nil {
		toSerialize["hostname"] = o.Hostname
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableMinimalDeploymentRunHost struct {
	value *MinimalDeploymentRunHost
	isSet bool
}

func (v NullableMinimalDeploymentRunHost) Get() *MinimalDeploymentRunHost {
	return v.value
}

func (v *NullableMinimalDeploymentRunHost) Set(val *MinimalDeploymentRunHost) {
	v.value = val
	v.isSet = true
}

func (v NullableMinimalDeploymentRunHost) IsSet() bool {
	return v.isSet
}

func (v *NullableMinimalDeploymentRunHost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMinimalDeploymentRunHost(val *MinimalDeploymentRunHost) *NullableMinimalDeploymentRunHost {
	return &NullableMinimalDeploymentRunHost{value: val, isSet: true}
}

func (v NullableMinimalDeploymentRunHost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMinimalDeploymentRunHost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


