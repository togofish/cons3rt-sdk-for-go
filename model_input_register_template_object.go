/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// InputRegisterTemplateObject struct for InputRegisterTemplateObject
type InputRegisterTemplateObject struct {
	Client *InputVirtualizationRealmClient `json:"client,omitempty"`
	TemplateData InputCons3rtTemplateData `json:"templateData"`
}

// NewInputRegisterTemplateObject instantiates a new InputRegisterTemplateObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputRegisterTemplateObject(templateData InputCons3rtTemplateData) *InputRegisterTemplateObject {
	this := InputRegisterTemplateObject{}
	this.TemplateData = templateData
	return &this
}

// NewInputRegisterTemplateObjectWithDefaults instantiates a new InputRegisterTemplateObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputRegisterTemplateObjectWithDefaults() *InputRegisterTemplateObject {
	this := InputRegisterTemplateObject{}
	return &this
}

// GetClient returns the Client field value if set, zero value otherwise.
func (o *InputRegisterTemplateObject) GetClient() InputVirtualizationRealmClient {
	if o == nil || o.Client == nil {
		var ret InputVirtualizationRealmClient
		return ret
	}
	return *o.Client
}

// GetClientOk returns a tuple with the Client field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputRegisterTemplateObject) GetClientOk() (*InputVirtualizationRealmClient, bool) {
	if o == nil || o.Client == nil {
		return nil, false
	}
	return o.Client, true
}

// HasClient returns a boolean if a field has been set.
func (o *InputRegisterTemplateObject) HasClient() bool {
	if o != nil && o.Client != nil {
		return true
	}

	return false
}

// SetClient gets a reference to the given InputVirtualizationRealmClient and assigns it to the Client field.
func (o *InputRegisterTemplateObject) SetClient(v InputVirtualizationRealmClient) {
	o.Client = &v
}

// GetTemplateData returns the TemplateData field value
func (o *InputRegisterTemplateObject) GetTemplateData() InputCons3rtTemplateData {
	if o == nil {
		var ret InputCons3rtTemplateData
		return ret
	}

	return o.TemplateData
}

// GetTemplateDataOk returns a tuple with the TemplateData field value
// and a boolean to check if the value has been set.
func (o *InputRegisterTemplateObject) GetTemplateDataOk() (*InputCons3rtTemplateData, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TemplateData, true
}

// SetTemplateData sets field value
func (o *InputRegisterTemplateObject) SetTemplateData(v InputCons3rtTemplateData) {
	o.TemplateData = v
}

func (o InputRegisterTemplateObject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Client != nil {
		toSerialize["client"] = o.Client
	}
	if true {
		toSerialize["templateData"] = o.TemplateData
	}
	return json.Marshal(toSerialize)
}

type NullableInputRegisterTemplateObject struct {
	value *InputRegisterTemplateObject
	isSet bool
}

func (v NullableInputRegisterTemplateObject) Get() *InputRegisterTemplateObject {
	return v.value
}

func (v *NullableInputRegisterTemplateObject) Set(val *InputRegisterTemplateObject) {
	v.value = val
	v.isSet = true
}

func (v NullableInputRegisterTemplateObject) IsSet() bool {
	return v.isSet
}

func (v *NullableInputRegisterTemplateObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputRegisterTemplateObject(val *InputRegisterTemplateObject) *NullableInputRegisterTemplateObject {
	return &NullableInputRegisterTemplateObject{value: val, isSet: true}
}

func (v NullableInputRegisterTemplateObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputRegisterTemplateObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


