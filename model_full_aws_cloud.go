/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// FullAwsCloud struct for FullAwsCloud
type FullAwsCloud struct {
	AccessKey          *string `json:"accessKey,omitempty"`
	NatImageId         *string `json:"natImageId,omitempty"`
	NatInstanceType    *string `json:"natInstanceType,omitempty"`
	OwnerId            *string `json:"ownerId,omitempty"`
	RegionName         *string `json:"regionName,omitempty"`
	Name               string
	ExternalIpSource   string
	MaximumImpactLevel string
	Subtype            string
}

// NewFullAwsCloud instantiates a new FullAwsCloud object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFullAwsCloud(name string, externalIpSource string, maximumImpactLevel string, subtype string) *FullAwsCloud {
	this := FullAwsCloud{}
	this.Name = name
	this.ExternalIpSource = externalIpSource
	this.MaximumImpactLevel = maximumImpactLevel
	this.Subtype = subtype
	return &this
}

// NewFullAwsCloudWithDefaults instantiates a new FullAwsCloud object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFullAwsCloudWithDefaults() *FullAwsCloud {
	this := FullAwsCloud{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *FullAwsCloud) GetAccessKey() string {
	if o == nil || o.AccessKey == nil {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullAwsCloud) GetAccessKeyOk() (*string, bool) {
	if o == nil || o.AccessKey == nil {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *FullAwsCloud) HasAccessKey() bool {
	if o != nil && o.AccessKey != nil {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *FullAwsCloud) SetAccessKey(v string) {
	o.AccessKey = &v
}

// GetNatImageId returns the NatImageId field value if set, zero value otherwise.
func (o *FullAwsCloud) GetNatImageId() string {
	if o == nil || o.NatImageId == nil {
		var ret string
		return ret
	}
	return *o.NatImageId
}

// GetNatImageIdOk returns a tuple with the NatImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullAwsCloud) GetNatImageIdOk() (*string, bool) {
	if o == nil || o.NatImageId == nil {
		return nil, false
	}
	return o.NatImageId, true
}

// HasNatImageId returns a boolean if a field has been set.
func (o *FullAwsCloud) HasNatImageId() bool {
	if o != nil && o.NatImageId != nil {
		return true
	}

	return false
}

// SetNatImageId gets a reference to the given string and assigns it to the NatImageId field.
func (o *FullAwsCloud) SetNatImageId(v string) {
	o.NatImageId = &v
}

// GetNatInstanceType returns the NatInstanceType field value if set, zero value otherwise.
func (o *FullAwsCloud) GetNatInstanceType() string {
	if o == nil || o.NatInstanceType == nil {
		var ret string
		return ret
	}
	return *o.NatInstanceType
}

// GetNatInstanceTypeOk returns a tuple with the NatInstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullAwsCloud) GetNatInstanceTypeOk() (*string, bool) {
	if o == nil || o.NatInstanceType == nil {
		return nil, false
	}
	return o.NatInstanceType, true
}

// HasNatInstanceType returns a boolean if a field has been set.
func (o *FullAwsCloud) HasNatInstanceType() bool {
	if o != nil && o.NatInstanceType != nil {
		return true
	}

	return false
}

// SetNatInstanceType gets a reference to the given string and assigns it to the NatInstanceType field.
func (o *FullAwsCloud) SetNatInstanceType(v string) {
	o.NatInstanceType = &v
}

// GetOwnerId returns the OwnerId field value if set, zero value otherwise.
func (o *FullAwsCloud) GetOwnerId() string {
	if o == nil || o.OwnerId == nil {
		var ret string
		return ret
	}
	return *o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullAwsCloud) GetOwnerIdOk() (*string, bool) {
	if o == nil || o.OwnerId == nil {
		return nil, false
	}
	return o.OwnerId, true
}

// HasOwnerId returns a boolean if a field has been set.
func (o *FullAwsCloud) HasOwnerId() bool {
	if o != nil && o.OwnerId != nil {
		return true
	}

	return false
}

// SetOwnerId gets a reference to the given string and assigns it to the OwnerId field.
func (o *FullAwsCloud) SetOwnerId(v string) {
	o.OwnerId = &v
}

// GetRegionName returns the RegionName field value if set, zero value otherwise.
func (o *FullAwsCloud) GetRegionName() string {
	if o == nil || o.RegionName == nil {
		var ret string
		return ret
	}
	return *o.RegionName
}

// GetRegionNameOk returns a tuple with the RegionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullAwsCloud) GetRegionNameOk() (*string, bool) {
	if o == nil || o.RegionName == nil {
		return nil, false
	}
	return o.RegionName, true
}

// HasRegionName returns a boolean if a field has been set.
func (o *FullAwsCloud) HasRegionName() bool {
	if o != nil && o.RegionName != nil {
		return true
	}

	return false
}

// SetRegionName gets a reference to the given string and assigns it to the RegionName field.
func (o *FullAwsCloud) SetRegionName(v string) {
	o.RegionName = &v
}

func (o FullAwsCloud) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AccessKey != nil {
		toSerialize["accessKey"] = o.AccessKey
	}
	if o.NatImageId != nil {
		toSerialize["natImageId"] = o.NatImageId
	}
	if o.NatInstanceType != nil {
		toSerialize["natInstanceType"] = o.NatInstanceType
	}
	if o.OwnerId != nil {
		toSerialize["ownerId"] = o.OwnerId
	}
	if o.RegionName != nil {
		toSerialize["regionName"] = o.RegionName
	}
	return json.Marshal(toSerialize)
}

type NullableFullAwsCloud struct {
	value *FullAwsCloud
	isSet bool
}

func (v NullableFullAwsCloud) Get() *FullAwsCloud {
	return v.value
}

func (v *NullableFullAwsCloud) Set(val *FullAwsCloud) {
	v.value = val
	v.isSet = true
}

func (v NullableFullAwsCloud) IsSet() bool {
	return v.isSet
}

func (v *NullableFullAwsCloud) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFullAwsCloud(val *FullAwsCloud) *NullableFullAwsCloud {
	return &NullableFullAwsCloud{value: val, isSet: true}
}

func (v NullableFullAwsCloud) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFullAwsCloud) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
