/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CloudFeatures struct for CloudFeatures
type CloudFeatures struct {
	AllocationCapable     *bool `json:"allocationCapable,omitempty"`
	BypassScanningEnabled *bool `json:"bypassScanningEnabled,omitempty"`
	DeallocationCapable   *bool `json:"deallocationCapable,omitempty"`
	GpuAvailable          *bool `json:"gpuAvailable,omitempty"`
	StorageServiceEnabled *bool `json:"storageServiceEnabled,omitempty"`
}

// NewCloudFeatures instantiates a new CloudFeatures object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudFeatures() *CloudFeatures {
	this := CloudFeatures{}
	return &this
}

// NewCloudFeaturesWithDefaults instantiates a new CloudFeatures object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudFeaturesWithDefaults() *CloudFeatures {
	this := CloudFeatures{}
	return &this
}

// GetAllocationCapable returns the AllocationCapable field value if set, zero value otherwise.
func (o *CloudFeatures) GetAllocationCapable() bool {
	if o == nil || o.AllocationCapable == nil {
		var ret bool
		return ret
	}
	return *o.AllocationCapable
}

// GetAllocationCapableOk returns a tuple with the AllocationCapable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudFeatures) GetAllocationCapableOk() (*bool, bool) {
	if o == nil || o.AllocationCapable == nil {
		return nil, false
	}
	return o.AllocationCapable, true
}

// HasAllocationCapable returns a boolean if a field has been set.
func (o *CloudFeatures) HasAllocationCapable() bool {
	if o != nil && o.AllocationCapable != nil {
		return true
	}

	return false
}

// SetAllocationCapable gets a reference to the given bool and assigns it to the AllocationCapable field.
func (o *CloudFeatures) SetAllocationCapable(v bool) {
	o.AllocationCapable = &v
}

// GetBypassScanningEnabled returns the BypassScanningEnabled field value if set, zero value otherwise.
func (o *CloudFeatures) GetBypassScanningEnabled() bool {
	if o == nil || o.BypassScanningEnabled == nil {
		var ret bool
		return ret
	}
	return *o.BypassScanningEnabled
}

// GetBypassScanningEnabledOk returns a tuple with the BypassScanningEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudFeatures) GetBypassScanningEnabledOk() (*bool, bool) {
	if o == nil || o.BypassScanningEnabled == nil {
		return nil, false
	}
	return o.BypassScanningEnabled, true
}

// HasBypassScanningEnabled returns a boolean if a field has been set.
func (o *CloudFeatures) HasBypassScanningEnabled() bool {
	if o != nil && o.BypassScanningEnabled != nil {
		return true
	}

	return false
}

// SetBypassScanningEnabled gets a reference to the given bool and assigns it to the BypassScanningEnabled field.
func (o *CloudFeatures) SetBypassScanningEnabled(v bool) {
	o.BypassScanningEnabled = &v
}

// GetDeallocationCapable returns the DeallocationCapable field value if set, zero value otherwise.
func (o *CloudFeatures) GetDeallocationCapable() bool {
	if o == nil || o.DeallocationCapable == nil {
		var ret bool
		return ret
	}
	return *o.DeallocationCapable
}

// GetDeallocationCapableOk returns a tuple with the DeallocationCapable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudFeatures) GetDeallocationCapableOk() (*bool, bool) {
	if o == nil || o.DeallocationCapable == nil {
		return nil, false
	}
	return o.DeallocationCapable, true
}

// HasDeallocationCapable returns a boolean if a field has been set.
func (o *CloudFeatures) HasDeallocationCapable() bool {
	if o != nil && o.DeallocationCapable != nil {
		return true
	}

	return false
}

// SetDeallocationCapable gets a reference to the given bool and assigns it to the DeallocationCapable field.
func (o *CloudFeatures) SetDeallocationCapable(v bool) {
	o.DeallocationCapable = &v
}

// GetGpuAvailable returns the GpuAvailable field value if set, zero value otherwise.
func (o *CloudFeatures) GetGpuAvailable() bool {
	if o == nil || o.GpuAvailable == nil {
		var ret bool
		return ret
	}
	return *o.GpuAvailable
}

// GetGpuAvailableOk returns a tuple with the GpuAvailable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudFeatures) GetGpuAvailableOk() (*bool, bool) {
	if o == nil || o.GpuAvailable == nil {
		return nil, false
	}
	return o.GpuAvailable, true
}

// HasGpuAvailable returns a boolean if a field has been set.
func (o *CloudFeatures) HasGpuAvailable() bool {
	if o != nil && o.GpuAvailable != nil {
		return true
	}

	return false
}

// SetGpuAvailable gets a reference to the given bool and assigns it to the GpuAvailable field.
func (o *CloudFeatures) SetGpuAvailable(v bool) {
	o.GpuAvailable = &v
}

// GetStorageServiceEnabled returns the StorageServiceEnabled field value if set, zero value otherwise.
func (o *CloudFeatures) GetStorageServiceEnabled() bool {
	if o == nil || o.StorageServiceEnabled == nil {
		var ret bool
		return ret
	}
	return *o.StorageServiceEnabled
}

// GetStorageServiceEnabledOk returns a tuple with the StorageServiceEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudFeatures) GetStorageServiceEnabledOk() (*bool, bool) {
	if o == nil || o.StorageServiceEnabled == nil {
		return nil, false
	}
	return o.StorageServiceEnabled, true
}

// HasStorageServiceEnabled returns a boolean if a field has been set.
func (o *CloudFeatures) HasStorageServiceEnabled() bool {
	if o != nil && o.StorageServiceEnabled != nil {
		return true
	}

	return false
}

// SetStorageServiceEnabled gets a reference to the given bool and assigns it to the StorageServiceEnabled field.
func (o *CloudFeatures) SetStorageServiceEnabled(v bool) {
	o.StorageServiceEnabled = &v
}

func (o CloudFeatures) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllocationCapable != nil {
		toSerialize["allocationCapable"] = o.AllocationCapable
	}
	if o.BypassScanningEnabled != nil {
		toSerialize["bypassScanningEnabled"] = o.BypassScanningEnabled
	}
	if o.DeallocationCapable != nil {
		toSerialize["deallocationCapable"] = o.DeallocationCapable
	}
	if o.GpuAvailable != nil {
		toSerialize["gpuAvailable"] = o.GpuAvailable
	}
	if o.StorageServiceEnabled != nil {
		toSerialize["storageServiceEnabled"] = o.StorageServiceEnabled
	}
	return json.Marshal(toSerialize)
}

type NullableCloudFeatures struct {
	value *CloudFeatures
	isSet bool
}

func (v NullableCloudFeatures) Get() *CloudFeatures {
	return v.value
}

func (v *NullableCloudFeatures) Set(val *CloudFeatures) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudFeatures) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudFeatures) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudFeatures(val *CloudFeatures) *NullableCloudFeatures {
	return &NullableCloudFeatures{value: val, isSet: true}
}

func (v NullableCloudFeatures) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudFeatures) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
