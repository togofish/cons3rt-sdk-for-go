/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// AddOpenStackNetworkRequestAllOf struct for AddOpenStackNetworkRequestAllOf
type AddOpenStackNetworkRequestAllOf struct {
	NatImageId *string `json:"natImageId,omitempty"`
	NatInstanceFlavor *string `json:"natInstanceFlavor,omitempty"`
}

// NewAddOpenStackNetworkRequestAllOf instantiates a new AddOpenStackNetworkRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddOpenStackNetworkRequestAllOf() *AddOpenStackNetworkRequestAllOf {
	this := AddOpenStackNetworkRequestAllOf{}
	return &this
}

// NewAddOpenStackNetworkRequestAllOfWithDefaults instantiates a new AddOpenStackNetworkRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddOpenStackNetworkRequestAllOfWithDefaults() *AddOpenStackNetworkRequestAllOf {
	this := AddOpenStackNetworkRequestAllOf{}
	return &this
}

// GetNatImageId returns the NatImageId field value if set, zero value otherwise.
func (o *AddOpenStackNetworkRequestAllOf) GetNatImageId() string {
	if o == nil || o.NatImageId == nil {
		var ret string
		return ret
	}
	return *o.NatImageId
}

// GetNatImageIdOk returns a tuple with the NatImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOpenStackNetworkRequestAllOf) GetNatImageIdOk() (*string, bool) {
	if o == nil || o.NatImageId == nil {
		return nil, false
	}
	return o.NatImageId, true
}

// HasNatImageId returns a boolean if a field has been set.
func (o *AddOpenStackNetworkRequestAllOf) HasNatImageId() bool {
	if o != nil && o.NatImageId != nil {
		return true
	}

	return false
}

// SetNatImageId gets a reference to the given string and assigns it to the NatImageId field.
func (o *AddOpenStackNetworkRequestAllOf) SetNatImageId(v string) {
	o.NatImageId = &v
}

// GetNatInstanceFlavor returns the NatInstanceFlavor field value if set, zero value otherwise.
func (o *AddOpenStackNetworkRequestAllOf) GetNatInstanceFlavor() string {
	if o == nil || o.NatInstanceFlavor == nil {
		var ret string
		return ret
	}
	return *o.NatInstanceFlavor
}

// GetNatInstanceFlavorOk returns a tuple with the NatInstanceFlavor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddOpenStackNetworkRequestAllOf) GetNatInstanceFlavorOk() (*string, bool) {
	if o == nil || o.NatInstanceFlavor == nil {
		return nil, false
	}
	return o.NatInstanceFlavor, true
}

// HasNatInstanceFlavor returns a boolean if a field has been set.
func (o *AddOpenStackNetworkRequestAllOf) HasNatInstanceFlavor() bool {
	if o != nil && o.NatInstanceFlavor != nil {
		return true
	}

	return false
}

// SetNatInstanceFlavor gets a reference to the given string and assigns it to the NatInstanceFlavor field.
func (o *AddOpenStackNetworkRequestAllOf) SetNatInstanceFlavor(v string) {
	o.NatInstanceFlavor = &v
}

func (o AddOpenStackNetworkRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NatImageId != nil {
		toSerialize["natImageId"] = o.NatImageId
	}
	if o.NatInstanceFlavor != nil {
		toSerialize["natInstanceFlavor"] = o.NatInstanceFlavor
	}
	return json.Marshal(toSerialize)
}

type NullableAddOpenStackNetworkRequestAllOf struct {
	value *AddOpenStackNetworkRequestAllOf
	isSet bool
}

func (v NullableAddOpenStackNetworkRequestAllOf) Get() *AddOpenStackNetworkRequestAllOf {
	return v.value
}

func (v *NullableAddOpenStackNetworkRequestAllOf) Set(val *AddOpenStackNetworkRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddOpenStackNetworkRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddOpenStackNetworkRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddOpenStackNetworkRequestAllOf(val *AddOpenStackNetworkRequestAllOf) *NullableAddOpenStackNetworkRequestAllOf {
	return &NullableAddOpenStackNetworkRequestAllOf{value: val, isSet: true}
}

func (v NullableAddOpenStackNetworkRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddOpenStackNetworkRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


