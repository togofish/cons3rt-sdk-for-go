/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// OpenStackCloud struct for OpenStackCloud
type OpenStackCloud struct {
	DomainName *string `json:"domainName,omitempty"`
	KeystoneHostname string `json:"keystoneHostname"`
	KeystonePassword string `json:"keystonePassword"`
	KeystonePort int32 `json:"keystonePort"`
	KeystoneProtocol string `json:"keystoneProtocol"`
	KeystoneUsername string `json:"keystoneUsername"`
	KeystoneVersion string `json:"keystoneVersion"`
	NatImageId string `json:"natImageId"`
	NatInstanceType string `json:"natInstanceType"`
	StorageServiceHostname *string `json:"storageServiceHostname,omitempty"`
	StorageServicePort *int32 `json:"storageServicePort,omitempty"`
	StorageServiceProtocol *string `json:"storageServiceProtocol,omitempty"`
	StorageServiceUsername *string `json:"storageServiceUsername,omitempty"`
	StorageServicePassword *string `json:"storageServicePassword,omitempty"`
	Tenant string `json:"tenant"`
	TenantId string `json:"tenantId"`
}

// NewOpenStackCloud instantiates a new OpenStackCloud object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenStackCloud(keystoneHostname string, keystonePassword string, keystonePort int32, keystoneProtocol string, keystoneUsername string, keystoneVersion string, natImageId string, natInstanceType string, tenant string, tenantId string, description string, name string, externalIpSource string, maximumImpactLevel string, owningTeam Team, subtype string) *OpenStackCloud {
	this := OpenStackCloud{}
	this.Description = description
	this.Name = name
	this.ExternalIpSource = externalIpSource
	this.MaximumImpactLevel = maximumImpactLevel
	this.OwningTeam = owningTeam
	this.Subtype = subtype
	this.KeystoneHostname = keystoneHostname
	this.KeystonePassword = keystonePassword
	this.KeystonePort = keystonePort
	this.KeystoneProtocol = keystoneProtocol
	this.KeystoneUsername = keystoneUsername
	this.KeystoneVersion = keystoneVersion
	this.NatImageId = natImageId
	this.NatInstanceType = natInstanceType
	this.Tenant = tenant
	this.TenantId = tenantId
	return &this
}

// NewOpenStackCloudWithDefaults instantiates a new OpenStackCloud object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenStackCloudWithDefaults() *OpenStackCloud {
	this := OpenStackCloud{}
	return &this
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *OpenStackCloud) GetDomainName() string {
	if o == nil || o.DomainName == nil {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackCloud) GetDomainNameOk() (*string, bool) {
	if o == nil || o.DomainName == nil {
		return nil, false
	}
	return o.DomainName, true
}

// HasDomainName returns a boolean if a field has been set.
func (o *OpenStackCloud) HasDomainName() bool {
	if o != nil && o.DomainName != nil {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *OpenStackCloud) SetDomainName(v string) {
	o.DomainName = &v
}

// GetKeystoneHostname returns the KeystoneHostname field value
func (o *OpenStackCloud) GetKeystoneHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeystoneHostname
}

// GetKeystoneHostnameOk returns a tuple with the KeystoneHostname field value
// and a boolean to check if the value has been set.
func (o *OpenStackCloud) GetKeystoneHostnameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KeystoneHostname, true
}

// SetKeystoneHostname sets field value
func (o *OpenStackCloud) SetKeystoneHostname(v string) {
	o.KeystoneHostname = v
}

// GetKeystonePassword returns the KeystonePassword field value
func (o *OpenStackCloud) GetKeystonePassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeystonePassword
}

// GetKeystonePasswordOk returns a tuple with the KeystonePassword field value
// and a boolean to check if the value has been set.
func (o *OpenStackCloud) GetKeystonePasswordOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KeystonePassword, true
}

// SetKeystonePassword sets field value
func (o *OpenStackCloud) SetKeystonePassword(v string) {
	o.KeystonePassword = v
}

// GetKeystonePort returns the KeystonePort field value
func (o *OpenStackCloud) GetKeystonePort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.KeystonePort
}

// GetKeystonePortOk returns a tuple with the KeystonePort field value
// and a boolean to check if the value has been set.
func (o *OpenStackCloud) GetKeystonePortOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KeystonePort, true
}

// SetKeystonePort sets field value
func (o *OpenStackCloud) SetKeystonePort(v int32) {
	o.KeystonePort = v
}

// GetKeystoneProtocol returns the KeystoneProtocol field value
func (o *OpenStackCloud) GetKeystoneProtocol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeystoneProtocol
}

// GetKeystoneProtocolOk returns a tuple with the KeystoneProtocol field value
// and a boolean to check if the value has been set.
func (o *OpenStackCloud) GetKeystoneProtocolOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KeystoneProtocol, true
}

// SetKeystoneProtocol sets field value
func (o *OpenStackCloud) SetKeystoneProtocol(v string) {
	o.KeystoneProtocol = v
}

// GetKeystoneUsername returns the KeystoneUsername field value
func (o *OpenStackCloud) GetKeystoneUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeystoneUsername
}

// GetKeystoneUsernameOk returns a tuple with the KeystoneUsername field value
// and a boolean to check if the value has been set.
func (o *OpenStackCloud) GetKeystoneUsernameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KeystoneUsername, true
}

// SetKeystoneUsername sets field value
func (o *OpenStackCloud) SetKeystoneUsername(v string) {
	o.KeystoneUsername = v
}

// GetKeystoneVersion returns the KeystoneVersion field value
func (o *OpenStackCloud) GetKeystoneVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeystoneVersion
}

// GetKeystoneVersionOk returns a tuple with the KeystoneVersion field value
// and a boolean to check if the value has been set.
func (o *OpenStackCloud) GetKeystoneVersionOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.KeystoneVersion, true
}

// SetKeystoneVersion sets field value
func (o *OpenStackCloud) SetKeystoneVersion(v string) {
	o.KeystoneVersion = v
}

// GetNatImageId returns the NatImageId field value
func (o *OpenStackCloud) GetNatImageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NatImageId
}

// GetNatImageIdOk returns a tuple with the NatImageId field value
// and a boolean to check if the value has been set.
func (o *OpenStackCloud) GetNatImageIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NatImageId, true
}

// SetNatImageId sets field value
func (o *OpenStackCloud) SetNatImageId(v string) {
	o.NatImageId = v
}

// GetNatInstanceType returns the NatInstanceType field value
func (o *OpenStackCloud) GetNatInstanceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NatInstanceType
}

// GetNatInstanceTypeOk returns a tuple with the NatInstanceType field value
// and a boolean to check if the value has been set.
func (o *OpenStackCloud) GetNatInstanceTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.NatInstanceType, true
}

// SetNatInstanceType sets field value
func (o *OpenStackCloud) SetNatInstanceType(v string) {
	o.NatInstanceType = v
}

// GetStorageServiceHostname returns the StorageServiceHostname field value if set, zero value otherwise.
func (o *OpenStackCloud) GetStorageServiceHostname() string {
	if o == nil || o.StorageServiceHostname == nil {
		var ret string
		return ret
	}
	return *o.StorageServiceHostname
}

// GetStorageServiceHostnameOk returns a tuple with the StorageServiceHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackCloud) GetStorageServiceHostnameOk() (*string, bool) {
	if o == nil || o.StorageServiceHostname == nil {
		return nil, false
	}
	return o.StorageServiceHostname, true
}

// HasStorageServiceHostname returns a boolean if a field has been set.
func (o *OpenStackCloud) HasStorageServiceHostname() bool {
	if o != nil && o.StorageServiceHostname != nil {
		return true
	}

	return false
}

// SetStorageServiceHostname gets a reference to the given string and assigns it to the StorageServiceHostname field.
func (o *OpenStackCloud) SetStorageServiceHostname(v string) {
	o.StorageServiceHostname = &v
}

// GetStorageServicePort returns the StorageServicePort field value if set, zero value otherwise.
func (o *OpenStackCloud) GetStorageServicePort() int32 {
	if o == nil || o.StorageServicePort == nil {
		var ret int32
		return ret
	}
	return *o.StorageServicePort
}

// GetStorageServicePortOk returns a tuple with the StorageServicePort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackCloud) GetStorageServicePortOk() (*int32, bool) {
	if o == nil || o.StorageServicePort == nil {
		return nil, false
	}
	return o.StorageServicePort, true
}

// HasStorageServicePort returns a boolean if a field has been set.
func (o *OpenStackCloud) HasStorageServicePort() bool {
	if o != nil && o.StorageServicePort != nil {
		return true
	}

	return false
}

// SetStorageServicePort gets a reference to the given int32 and assigns it to the StorageServicePort field.
func (o *OpenStackCloud) SetStorageServicePort(v int32) {
	o.StorageServicePort = &v
}

// GetStorageServiceProtocol returns the StorageServiceProtocol field value if set, zero value otherwise.
func (o *OpenStackCloud) GetStorageServiceProtocol() string {
	if o == nil || o.StorageServiceProtocol == nil {
		var ret string
		return ret
	}
	return *o.StorageServiceProtocol
}

// GetStorageServiceProtocolOk returns a tuple with the StorageServiceProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackCloud) GetStorageServiceProtocolOk() (*string, bool) {
	if o == nil || o.StorageServiceProtocol == nil {
		return nil, false
	}
	return o.StorageServiceProtocol, true
}

// HasStorageServiceProtocol returns a boolean if a field has been set.
func (o *OpenStackCloud) HasStorageServiceProtocol() bool {
	if o != nil && o.StorageServiceProtocol != nil {
		return true
	}

	return false
}

// SetStorageServiceProtocol gets a reference to the given string and assigns it to the StorageServiceProtocol field.
func (o *OpenStackCloud) SetStorageServiceProtocol(v string) {
	o.StorageServiceProtocol = &v
}

// GetStorageServiceUsername returns the StorageServiceUsername field value if set, zero value otherwise.
func (o *OpenStackCloud) GetStorageServiceUsername() string {
	if o == nil || o.StorageServiceUsername == nil {
		var ret string
		return ret
	}
	return *o.StorageServiceUsername
}

// GetStorageServiceUsernameOk returns a tuple with the StorageServiceUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackCloud) GetStorageServiceUsernameOk() (*string, bool) {
	if o == nil || o.StorageServiceUsername == nil {
		return nil, false
	}
	return o.StorageServiceUsername, true
}

// HasStorageServiceUsername returns a boolean if a field has been set.
func (o *OpenStackCloud) HasStorageServiceUsername() bool {
	if o != nil && o.StorageServiceUsername != nil {
		return true
	}

	return false
}

// SetStorageServiceUsername gets a reference to the given string and assigns it to the StorageServiceUsername field.
func (o *OpenStackCloud) SetStorageServiceUsername(v string) {
	o.StorageServiceUsername = &v
}

// GetStorageServicePassword returns the StorageServicePassword field value if set, zero value otherwise.
func (o *OpenStackCloud) GetStorageServicePassword() string {
	if o == nil || o.StorageServicePassword == nil {
		var ret string
		return ret
	}
	return *o.StorageServicePassword
}

// GetStorageServicePasswordOk returns a tuple with the StorageServicePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackCloud) GetStorageServicePasswordOk() (*string, bool) {
	if o == nil || o.StorageServicePassword == nil {
		return nil, false
	}
	return o.StorageServicePassword, true
}

// HasStorageServicePassword returns a boolean if a field has been set.
func (o *OpenStackCloud) HasStorageServicePassword() bool {
	if o != nil && o.StorageServicePassword != nil {
		return true
	}

	return false
}

// SetStorageServicePassword gets a reference to the given string and assigns it to the StorageServicePassword field.
func (o *OpenStackCloud) SetStorageServicePassword(v string) {
	o.StorageServicePassword = &v
}

// GetTenant returns the Tenant field value
func (o *OpenStackCloud) GetTenant() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tenant
}

// GetTenantOk returns a tuple with the Tenant field value
// and a boolean to check if the value has been set.
func (o *OpenStackCloud) GetTenantOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Tenant, true
}

// SetTenant sets field value
func (o *OpenStackCloud) SetTenant(v string) {
	o.Tenant = v
}

// GetTenantId returns the TenantId field value
func (o *OpenStackCloud) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *OpenStackCloud) GetTenantIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *OpenStackCloud) SetTenantId(v string) {
	o.TenantId = v
}

func (o OpenStackCloud) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DomainName != nil {
		toSerialize["domainName"] = o.DomainName
	}
	if true {
		toSerialize["keystoneHostname"] = o.KeystoneHostname
	}
	if true {
		toSerialize["keystonePassword"] = o.KeystonePassword
	}
	if true {
		toSerialize["keystonePort"] = o.KeystonePort
	}
	if true {
		toSerialize["keystoneProtocol"] = o.KeystoneProtocol
	}
	if true {
		toSerialize["keystoneUsername"] = o.KeystoneUsername
	}
	if true {
		toSerialize["keystoneVersion"] = o.KeystoneVersion
	}
	if true {
		toSerialize["natImageId"] = o.NatImageId
	}
	if true {
		toSerialize["natInstanceType"] = o.NatInstanceType
	}
	if o.StorageServiceHostname != nil {
		toSerialize["storageServiceHostname"] = o.StorageServiceHostname
	}
	if o.StorageServicePort != nil {
		toSerialize["storageServicePort"] = o.StorageServicePort
	}
	if o.StorageServiceProtocol != nil {
		toSerialize["storageServiceProtocol"] = o.StorageServiceProtocol
	}
	if o.StorageServiceUsername != nil {
		toSerialize["storageServiceUsername"] = o.StorageServiceUsername
	}
	if o.StorageServicePassword != nil {
		toSerialize["storageServicePassword"] = o.StorageServicePassword
	}
	if true {
		toSerialize["tenant"] = o.Tenant
	}
	if true {
		toSerialize["tenantId"] = o.TenantId
	}
	return json.Marshal(toSerialize)
}

type NullableOpenStackCloud struct {
	value *OpenStackCloud
	isSet bool
}

func (v NullableOpenStackCloud) Get() *OpenStackCloud {
	return v.value
}

func (v *NullableOpenStackCloud) Set(val *OpenStackCloud) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenStackCloud) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenStackCloud) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenStackCloud(val *OpenStackCloud) *NullableOpenStackCloud {
	return &NullableOpenStackCloud{value: val, isSet: true}
}

func (v NullableOpenStackCloud) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenStackCloud) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


