/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// InputContainerComponent struct for InputContainerComponent
type InputContainerComponent struct {
	Configuration InputContainerConfiguration `json:"configuration"`
	Asset         InputAsset
	Subtype       string
}

// NewInputContainerComponent instantiates a new InputContainerComponent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputContainerComponent(configuration InputContainerConfiguration, asset InputAsset, subtype string) *InputContainerComponent {
	this := InputContainerComponent{}
	this.Asset = asset
	this.Subtype = subtype
	this.Configuration = configuration
	return &this
}

// NewInputContainerComponentWithDefaults instantiates a new InputContainerComponent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputContainerComponentWithDefaults() *InputContainerComponent {
	this := InputContainerComponent{}
	return &this
}

// GetConfiguration returns the Configuration field value
func (o *InputContainerComponent) GetConfiguration() InputContainerConfiguration {
	if o == nil {
		var ret InputContainerConfiguration
		return ret
	}

	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value
// and a boolean to check if the value has been set.
func (o *InputContainerComponent) GetConfigurationOk() (*InputContainerConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Configuration, true
}

// SetConfiguration sets field value
func (o *InputContainerComponent) SetConfiguration(v InputContainerConfiguration) {
	o.Configuration = v
}

func (o InputContainerComponent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["configuration"] = o.Configuration
	}
	return json.Marshal(toSerialize)
}

type NullableInputContainerComponent struct {
	value *InputContainerComponent
	isSet bool
}

func (v NullableInputContainerComponent) Get() *InputContainerComponent {
	return v.value
}

func (v *NullableInputContainerComponent) Set(val *InputContainerComponent) {
	v.value = val
	v.isSet = true
}

func (v NullableInputContainerComponent) IsSet() bool {
	return v.isSet
}

func (v *NullableInputContainerComponent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputContainerComponent(val *InputContainerComponent) *NullableInputContainerComponent {
	return &NullableInputContainerComponent{value: val, isSet: true}
}

func (v NullableInputContainerComponent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputContainerComponent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
