/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// InputSFTPSubmissionEndpointForAssetSubmission struct for InputSFTPSubmissionEndpointForAssetSubmission
type InputSFTPSubmissionEndpointForAssetSubmission struct {
	RemotePath             *string `json:"remotePath,omitempty"`
	UseUserDirectoryAsRoot *bool   `json:"useUserDirectoryAsRoot,omitempty"`
	Subtype                string
}

// NewInputSFTPSubmissionEndpointForAssetSubmission instantiates a new InputSFTPSubmissionEndpointForAssetSubmission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputSFTPSubmissionEndpointForAssetSubmission(subtype string) *InputSFTPSubmissionEndpointForAssetSubmission {
	this := InputSFTPSubmissionEndpointForAssetSubmission{}
	this.Subtype = subtype
	return &this
}

// NewInputSFTPSubmissionEndpointForAssetSubmissionWithDefaults instantiates a new InputSFTPSubmissionEndpointForAssetSubmission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputSFTPSubmissionEndpointForAssetSubmissionWithDefaults() *InputSFTPSubmissionEndpointForAssetSubmission {
	this := InputSFTPSubmissionEndpointForAssetSubmission{}
	return &this
}

// GetRemotePath returns the RemotePath field value if set, zero value otherwise.
func (o *InputSFTPSubmissionEndpointForAssetSubmission) GetRemotePath() string {
	if o == nil || o.RemotePath == nil {
		var ret string
		return ret
	}
	return *o.RemotePath
}

// GetRemotePathOk returns a tuple with the RemotePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputSFTPSubmissionEndpointForAssetSubmission) GetRemotePathOk() (*string, bool) {
	if o == nil || o.RemotePath == nil {
		return nil, false
	}
	return o.RemotePath, true
}

// HasRemotePath returns a boolean if a field has been set.
func (o *InputSFTPSubmissionEndpointForAssetSubmission) HasRemotePath() bool {
	if o != nil && o.RemotePath != nil {
		return true
	}

	return false
}

// SetRemotePath gets a reference to the given string and assigns it to the RemotePath field.
func (o *InputSFTPSubmissionEndpointForAssetSubmission) SetRemotePath(v string) {
	o.RemotePath = &v
}

// GetUseUserDirectoryAsRoot returns the UseUserDirectoryAsRoot field value if set, zero value otherwise.
func (o *InputSFTPSubmissionEndpointForAssetSubmission) GetUseUserDirectoryAsRoot() bool {
	if o == nil || o.UseUserDirectoryAsRoot == nil {
		var ret bool
		return ret
	}
	return *o.UseUserDirectoryAsRoot
}

// GetUseUserDirectoryAsRootOk returns a tuple with the UseUserDirectoryAsRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputSFTPSubmissionEndpointForAssetSubmission) GetUseUserDirectoryAsRootOk() (*bool, bool) {
	if o == nil || o.UseUserDirectoryAsRoot == nil {
		return nil, false
	}
	return o.UseUserDirectoryAsRoot, true
}

// HasUseUserDirectoryAsRoot returns a boolean if a field has been set.
func (o *InputSFTPSubmissionEndpointForAssetSubmission) HasUseUserDirectoryAsRoot() bool {
	if o != nil && o.UseUserDirectoryAsRoot != nil {
		return true
	}

	return false
}

// SetUseUserDirectoryAsRoot gets a reference to the given bool and assigns it to the UseUserDirectoryAsRoot field.
func (o *InputSFTPSubmissionEndpointForAssetSubmission) SetUseUserDirectoryAsRoot(v bool) {
	o.UseUserDirectoryAsRoot = &v
}

func (o InputSFTPSubmissionEndpointForAssetSubmission) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.RemotePath != nil {
		toSerialize["remotePath"] = o.RemotePath
	}
	if o.UseUserDirectoryAsRoot != nil {
		toSerialize["useUserDirectoryAsRoot"] = o.UseUserDirectoryAsRoot
	}
	return json.Marshal(toSerialize)
}

type NullableInputSFTPSubmissionEndpointForAssetSubmission struct {
	value *InputSFTPSubmissionEndpointForAssetSubmission
	isSet bool
}

func (v NullableInputSFTPSubmissionEndpointForAssetSubmission) Get() *InputSFTPSubmissionEndpointForAssetSubmission {
	return v.value
}

func (v *NullableInputSFTPSubmissionEndpointForAssetSubmission) Set(val *InputSFTPSubmissionEndpointForAssetSubmission) {
	v.value = val
	v.isSet = true
}

func (v NullableInputSFTPSubmissionEndpointForAssetSubmission) IsSet() bool {
	return v.isSet
}

func (v *NullableInputSFTPSubmissionEndpointForAssetSubmission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputSFTPSubmissionEndpointForAssetSubmission(val *InputSFTPSubmissionEndpointForAssetSubmission) *NullableInputSFTPSubmissionEndpointForAssetSubmission {
	return &NullableInputSFTPSubmissionEndpointForAssetSubmission{value: val, isSet: true}
}

func (v NullableInputSFTPSubmissionEndpointForAssetSubmission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputSFTPSubmissionEndpointForAssetSubmission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
