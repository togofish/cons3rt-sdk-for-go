/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// AwsCloudResourcesAllOf struct for AwsCloudResourcesAllOf
type AwsCloudResourcesAllOf struct {
	AvailabilityZoneNames *[]string `json:"availabilityZoneNames,omitempty"`
	NatImageNames *[]string `json:"natImageNames,omitempty"`
	RegionNames *[]string `json:"regionNames,omitempty"`
}

// NewAwsCloudResourcesAllOf instantiates a new AwsCloudResourcesAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsCloudResourcesAllOf() *AwsCloudResourcesAllOf {
	this := AwsCloudResourcesAllOf{}
	return &this
}

// NewAwsCloudResourcesAllOfWithDefaults instantiates a new AwsCloudResourcesAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsCloudResourcesAllOfWithDefaults() *AwsCloudResourcesAllOf {
	this := AwsCloudResourcesAllOf{}
	return &this
}

// GetAvailabilityZoneNames returns the AvailabilityZoneNames field value if set, zero value otherwise.
func (o *AwsCloudResourcesAllOf) GetAvailabilityZoneNames() []string {
	if o == nil || o.AvailabilityZoneNames == nil {
		var ret []string
		return ret
	}
	return *o.AvailabilityZoneNames
}

// GetAvailabilityZoneNamesOk returns a tuple with the AvailabilityZoneNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsCloudResourcesAllOf) GetAvailabilityZoneNamesOk() (*[]string, bool) {
	if o == nil || o.AvailabilityZoneNames == nil {
		return nil, false
	}
	return o.AvailabilityZoneNames, true
}

// HasAvailabilityZoneNames returns a boolean if a field has been set.
func (o *AwsCloudResourcesAllOf) HasAvailabilityZoneNames() bool {
	if o != nil && o.AvailabilityZoneNames != nil {
		return true
	}

	return false
}

// SetAvailabilityZoneNames gets a reference to the given []string and assigns it to the AvailabilityZoneNames field.
func (o *AwsCloudResourcesAllOf) SetAvailabilityZoneNames(v []string) {
	o.AvailabilityZoneNames = &v
}

// GetNatImageNames returns the NatImageNames field value if set, zero value otherwise.
func (o *AwsCloudResourcesAllOf) GetNatImageNames() []string {
	if o == nil || o.NatImageNames == nil {
		var ret []string
		return ret
	}
	return *o.NatImageNames
}

// GetNatImageNamesOk returns a tuple with the NatImageNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsCloudResourcesAllOf) GetNatImageNamesOk() (*[]string, bool) {
	if o == nil || o.NatImageNames == nil {
		return nil, false
	}
	return o.NatImageNames, true
}

// HasNatImageNames returns a boolean if a field has been set.
func (o *AwsCloudResourcesAllOf) HasNatImageNames() bool {
	if o != nil && o.NatImageNames != nil {
		return true
	}

	return false
}

// SetNatImageNames gets a reference to the given []string and assigns it to the NatImageNames field.
func (o *AwsCloudResourcesAllOf) SetNatImageNames(v []string) {
	o.NatImageNames = &v
}

// GetRegionNames returns the RegionNames field value if set, zero value otherwise.
func (o *AwsCloudResourcesAllOf) GetRegionNames() []string {
	if o == nil || o.RegionNames == nil {
		var ret []string
		return ret
	}
	return *o.RegionNames
}

// GetRegionNamesOk returns a tuple with the RegionNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsCloudResourcesAllOf) GetRegionNamesOk() (*[]string, bool) {
	if o == nil || o.RegionNames == nil {
		return nil, false
	}
	return o.RegionNames, true
}

// HasRegionNames returns a boolean if a field has been set.
func (o *AwsCloudResourcesAllOf) HasRegionNames() bool {
	if o != nil && o.RegionNames != nil {
		return true
	}

	return false
}

// SetRegionNames gets a reference to the given []string and assigns it to the RegionNames field.
func (o *AwsCloudResourcesAllOf) SetRegionNames(v []string) {
	o.RegionNames = &v
}

func (o AwsCloudResourcesAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AvailabilityZoneNames != nil {
		toSerialize["availabilityZoneNames"] = o.AvailabilityZoneNames
	}
	if o.NatImageNames != nil {
		toSerialize["natImageNames"] = o.NatImageNames
	}
	if o.RegionNames != nil {
		toSerialize["regionNames"] = o.RegionNames
	}
	return json.Marshal(toSerialize)
}

type NullableAwsCloudResourcesAllOf struct {
	value *AwsCloudResourcesAllOf
	isSet bool
}

func (v NullableAwsCloudResourcesAllOf) Get() *AwsCloudResourcesAllOf {
	return v.value
}

func (v *NullableAwsCloudResourcesAllOf) Set(val *AwsCloudResourcesAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsCloudResourcesAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsCloudResourcesAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsCloudResourcesAllOf(val *AwsCloudResourcesAllOf) *NullableAwsCloudResourcesAllOf {
	return &NullableAwsCloudResourcesAllOf{value: val, isSet: true}
}

func (v NullableAwsCloudResourcesAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsCloudResourcesAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


