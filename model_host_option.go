/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// HostOption struct for HostOption
type HostOption struct {
	SystemRole           string              `json:"systemRole"`
	Cpus                 *int32              `json:"cpus,omitempty"`
	Ram                  *int32              `json:"ram,omitempty"`
	AdditionalDisks      *[]Disk             `json:"additionalDisks,omitempty"`
	NetworkInterfaces    *[]NetworkInterface `json:"networkInterfaces,omitempty"`
	BatchSoftwareInstall *bool               `json:"batchSoftwareInstall,omitempty"`
	GpuProfile           *string             `json:"gpuProfile,omitempty"`
	GpuType              *string             `json:"gpuType,omitempty"`
}

// NewHostOption instantiates a new HostOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostOption(systemRole string) *HostOption {
	this := HostOption{}
	this.SystemRole = systemRole
	return &this
}

// NewHostOptionWithDefaults instantiates a new HostOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostOptionWithDefaults() *HostOption {
	this := HostOption{}
	return &this
}

// GetSystemRole returns the SystemRole field value
func (o *HostOption) GetSystemRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SystemRole
}

// GetSystemRoleOk returns a tuple with the SystemRole field value
// and a boolean to check if the value has been set.
func (o *HostOption) GetSystemRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemRole, true
}

// SetSystemRole sets field value
func (o *HostOption) SetSystemRole(v string) {
	o.SystemRole = v
}

// GetCpus returns the Cpus field value if set, zero value otherwise.
func (o *HostOption) GetCpus() int32 {
	if o == nil || o.Cpus == nil {
		var ret int32
		return ret
	}
	return *o.Cpus
}

// GetCpusOk returns a tuple with the Cpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostOption) GetCpusOk() (*int32, bool) {
	if o == nil || o.Cpus == nil {
		return nil, false
	}
	return o.Cpus, true
}

// HasCpus returns a boolean if a field has been set.
func (o *HostOption) HasCpus() bool {
	if o != nil && o.Cpus != nil {
		return true
	}

	return false
}

// SetCpus gets a reference to the given int32 and assigns it to the Cpus field.
func (o *HostOption) SetCpus(v int32) {
	o.Cpus = &v
}

// GetRam returns the Ram field value if set, zero value otherwise.
func (o *HostOption) GetRam() int32 {
	if o == nil || o.Ram == nil {
		var ret int32
		return ret
	}
	return *o.Ram
}

// GetRamOk returns a tuple with the Ram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostOption) GetRamOk() (*int32, bool) {
	if o == nil || o.Ram == nil {
		return nil, false
	}
	return o.Ram, true
}

// HasRam returns a boolean if a field has been set.
func (o *HostOption) HasRam() bool {
	if o != nil && o.Ram != nil {
		return true
	}

	return false
}

// SetRam gets a reference to the given int32 and assigns it to the Ram field.
func (o *HostOption) SetRam(v int32) {
	o.Ram = &v
}

// GetAdditionalDisks returns the AdditionalDisks field value if set, zero value otherwise.
func (o *HostOption) GetAdditionalDisks() []Disk {
	if o == nil || o.AdditionalDisks == nil {
		var ret []Disk
		return ret
	}
	return *o.AdditionalDisks
}

// GetAdditionalDisksOk returns a tuple with the AdditionalDisks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostOption) GetAdditionalDisksOk() (*[]Disk, bool) {
	if o == nil || o.AdditionalDisks == nil {
		return nil, false
	}
	return o.AdditionalDisks, true
}

// HasAdditionalDisks returns a boolean if a field has been set.
func (o *HostOption) HasAdditionalDisks() bool {
	if o != nil && o.AdditionalDisks != nil {
		return true
	}

	return false
}

// SetAdditionalDisks gets a reference to the given []Disk and assigns it to the AdditionalDisks field.
func (o *HostOption) SetAdditionalDisks(v []Disk) {
	o.AdditionalDisks = &v
}

// GetNetworkInterfaces returns the NetworkInterfaces field value if set, zero value otherwise.
func (o *HostOption) GetNetworkInterfaces() []NetworkInterface {
	if o == nil || o.NetworkInterfaces == nil {
		var ret []NetworkInterface
		return ret
	}
	return *o.NetworkInterfaces
}

// GetNetworkInterfacesOk returns a tuple with the NetworkInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostOption) GetNetworkInterfacesOk() (*[]NetworkInterface, bool) {
	if o == nil || o.NetworkInterfaces == nil {
		return nil, false
	}
	return o.NetworkInterfaces, true
}

// HasNetworkInterfaces returns a boolean if a field has been set.
func (o *HostOption) HasNetworkInterfaces() bool {
	if o != nil && o.NetworkInterfaces != nil {
		return true
	}

	return false
}

// SetNetworkInterfaces gets a reference to the given []NetworkInterface and assigns it to the NetworkInterfaces field.
func (o *HostOption) SetNetworkInterfaces(v []NetworkInterface) {
	o.NetworkInterfaces = &v
}

// GetBatchSoftwareInstall returns the BatchSoftwareInstall field value if set, zero value otherwise.
func (o *HostOption) GetBatchSoftwareInstall() bool {
	if o == nil || o.BatchSoftwareInstall == nil {
		var ret bool
		return ret
	}
	return *o.BatchSoftwareInstall
}

// GetBatchSoftwareInstallOk returns a tuple with the BatchSoftwareInstall field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostOption) GetBatchSoftwareInstallOk() (*bool, bool) {
	if o == nil || o.BatchSoftwareInstall == nil {
		return nil, false
	}
	return o.BatchSoftwareInstall, true
}

// HasBatchSoftwareInstall returns a boolean if a field has been set.
func (o *HostOption) HasBatchSoftwareInstall() bool {
	if o != nil && o.BatchSoftwareInstall != nil {
		return true
	}

	return false
}

// SetBatchSoftwareInstall gets a reference to the given bool and assigns it to the BatchSoftwareInstall field.
func (o *HostOption) SetBatchSoftwareInstall(v bool) {
	o.BatchSoftwareInstall = &v
}

// GetGpuProfile returns the GpuProfile field value if set, zero value otherwise.
func (o *HostOption) GetGpuProfile() string {
	if o == nil || o.GpuProfile == nil {
		var ret string
		return ret
	}
	return *o.GpuProfile
}

// GetGpuProfileOk returns a tuple with the GpuProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostOption) GetGpuProfileOk() (*string, bool) {
	if o == nil || o.GpuProfile == nil {
		return nil, false
	}
	return o.GpuProfile, true
}

// HasGpuProfile returns a boolean if a field has been set.
func (o *HostOption) HasGpuProfile() bool {
	if o != nil && o.GpuProfile != nil {
		return true
	}

	return false
}

// SetGpuProfile gets a reference to the given string and assigns it to the GpuProfile field.
func (o *HostOption) SetGpuProfile(v string) {
	o.GpuProfile = &v
}

// GetGpuType returns the GpuType field value if set, zero value otherwise.
func (o *HostOption) GetGpuType() string {
	if o == nil || o.GpuType == nil {
		var ret string
		return ret
	}
	return *o.GpuType
}

// GetGpuTypeOk returns a tuple with the GpuType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostOption) GetGpuTypeOk() (*string, bool) {
	if o == nil || o.GpuType == nil {
		return nil, false
	}
	return o.GpuType, true
}

// HasGpuType returns a boolean if a field has been set.
func (o *HostOption) HasGpuType() bool {
	if o != nil && o.GpuType != nil {
		return true
	}

	return false
}

// SetGpuType gets a reference to the given string and assigns it to the GpuType field.
func (o *HostOption) SetGpuType(v string) {
	o.GpuType = &v
}

func (o HostOption) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["systemRole"] = o.SystemRole
	}
	if o.Cpus != nil {
		toSerialize["cpus"] = o.Cpus
	}
	if o.Ram != nil {
		toSerialize["ram"] = o.Ram
	}
	if o.AdditionalDisks != nil {
		toSerialize["additionalDisks"] = o.AdditionalDisks
	}
	if o.NetworkInterfaces != nil {
		toSerialize["networkInterfaces"] = o.NetworkInterfaces
	}
	if o.BatchSoftwareInstall != nil {
		toSerialize["batchSoftwareInstall"] = o.BatchSoftwareInstall
	}
	if o.GpuProfile != nil {
		toSerialize["gpuProfile"] = o.GpuProfile
	}
	if o.GpuType != nil {
		toSerialize["gpuType"] = o.GpuType
	}
	return json.Marshal(toSerialize)
}

type NullableHostOption struct {
	value *HostOption
	isSet bool
}

func (v NullableHostOption) Get() *HostOption {
	return v.value
}

func (v *NullableHostOption) Set(val *HostOption) {
	v.value = val
	v.isSet = true
}

func (v NullableHostOption) IsSet() bool {
	return v.isSet
}

func (v *NullableHostOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostOption(val *HostOption) *NullableHostOption {
	return &NullableHostOption{value: val, isSet: true}
}

func (v NullableHostOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
