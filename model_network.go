/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Network struct for Network
type Network struct {
	Id                *int32         `json:"id,omitempty"`
	Isolated          *bool          `json:"isolated,omitempty"`
	BoundaryIpAddress *string        `json:"boundaryIpAddress,omitempty"`
	Cidr              string         `json:"cidr"`
	Description       *string        `json:"description,omitempty"`
	DnatRules         []DnatRule     `json:"dnatRules"`
	FirewallRules     []FirewallRule `json:"firewallRules"`
	NetworkFunction   *string        `json:"networkFunction,omitempty"`
	Name              string         `json:"name"`
}

// NewNetwork instantiates a new Network object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetwork(cidr string, dnatRules []DnatRule, firewallRules []FirewallRule, name string) *Network {
	this := Network{}
	this.Cidr = cidr
	this.DnatRules = dnatRules
	this.FirewallRules = firewallRules
	this.Name = name
	return &this
}

// NewNetworkWithDefaults instantiates a new Network object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkWithDefaults() *Network {
	this := Network{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Network) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Network) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Network) SetId(v int32) {
	o.Id = &v
}

// GetIsolated returns the Isolated field value if set, zero value otherwise.
func (o *Network) GetIsolated() bool {
	if o == nil || o.Isolated == nil {
		var ret bool
		return ret
	}
	return *o.Isolated
}

// GetIsolatedOk returns a tuple with the Isolated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetIsolatedOk() (*bool, bool) {
	if o == nil || o.Isolated == nil {
		return nil, false
	}
	return o.Isolated, true
}

// HasIsolated returns a boolean if a field has been set.
func (o *Network) HasIsolated() bool {
	if o != nil && o.Isolated != nil {
		return true
	}

	return false
}

// SetIsolated gets a reference to the given bool and assigns it to the Isolated field.
func (o *Network) SetIsolated(v bool) {
	o.Isolated = &v
}

// GetBoundaryIpAddress returns the BoundaryIpAddress field value if set, zero value otherwise.
func (o *Network) GetBoundaryIpAddress() string {
	if o == nil || o.BoundaryIpAddress == nil {
		var ret string
		return ret
	}
	return *o.BoundaryIpAddress
}

// GetBoundaryIpAddressOk returns a tuple with the BoundaryIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetBoundaryIpAddressOk() (*string, bool) {
	if o == nil || o.BoundaryIpAddress == nil {
		return nil, false
	}
	return o.BoundaryIpAddress, true
}

// HasBoundaryIpAddress returns a boolean if a field has been set.
func (o *Network) HasBoundaryIpAddress() bool {
	if o != nil && o.BoundaryIpAddress != nil {
		return true
	}

	return false
}

// SetBoundaryIpAddress gets a reference to the given string and assigns it to the BoundaryIpAddress field.
func (o *Network) SetBoundaryIpAddress(v string) {
	o.BoundaryIpAddress = &v
}

// GetCidr returns the Cidr field value
func (o *Network) GetCidr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value
// and a boolean to check if the value has been set.
func (o *Network) GetCidrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cidr, true
}

// SetCidr sets field value
func (o *Network) SetCidr(v string) {
	o.Cidr = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Network) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Network) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Network) SetDescription(v string) {
	o.Description = &v
}

// GetDnatRules returns the DnatRules field value
func (o *Network) GetDnatRules() []DnatRule {
	if o == nil {
		var ret []DnatRule
		return ret
	}

	return o.DnatRules
}

// GetDnatRulesOk returns a tuple with the DnatRules field value
// and a boolean to check if the value has been set.
func (o *Network) GetDnatRulesOk() (*[]DnatRule, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DnatRules, true
}

// SetDnatRules sets field value
func (o *Network) SetDnatRules(v []DnatRule) {
	o.DnatRules = v
}

// GetFirewallRules returns the FirewallRules field value
func (o *Network) GetFirewallRules() []FirewallRule {
	if o == nil {
		var ret []FirewallRule
		return ret
	}

	return o.FirewallRules
}

// GetFirewallRulesOk returns a tuple with the FirewallRules field value
// and a boolean to check if the value has been set.
func (o *Network) GetFirewallRulesOk() (*[]FirewallRule, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirewallRules, true
}

// SetFirewallRules sets field value
func (o *Network) SetFirewallRules(v []FirewallRule) {
	o.FirewallRules = v
}

// GetNetworkFunction returns the NetworkFunction field value if set, zero value otherwise.
func (o *Network) GetNetworkFunction() string {
	if o == nil || o.NetworkFunction == nil {
		var ret string
		return ret
	}
	return *o.NetworkFunction
}

// GetNetworkFunctionOk returns a tuple with the NetworkFunction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Network) GetNetworkFunctionOk() (*string, bool) {
	if o == nil || o.NetworkFunction == nil {
		return nil, false
	}
	return o.NetworkFunction, true
}

// HasNetworkFunction returns a boolean if a field has been set.
func (o *Network) HasNetworkFunction() bool {
	if o != nil && o.NetworkFunction != nil {
		return true
	}

	return false
}

// SetNetworkFunction gets a reference to the given string and assigns it to the NetworkFunction field.
func (o *Network) SetNetworkFunction(v string) {
	o.NetworkFunction = &v
}

// GetName returns the Name field value
func (o *Network) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Network) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Network) SetName(v string) {
	o.Name = v
}

func (o Network) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Isolated != nil {
		toSerialize["isolated"] = o.Isolated
	}
	if o.BoundaryIpAddress != nil {
		toSerialize["boundaryIpAddress"] = o.BoundaryIpAddress
	}
	if true {
		toSerialize["cidr"] = o.Cidr
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["dnatRules"] = o.DnatRules
	}
	if true {
		toSerialize["firewallRules"] = o.FirewallRules
	}
	if o.NetworkFunction != nil {
		toSerialize["networkFunction"] = o.NetworkFunction
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableNetwork struct {
	value *Network
	isSet bool
}

func (v NullableNetwork) Get() *Network {
	return v.value
}

func (v *NullableNetwork) Set(val *Network) {
	v.value = val
	v.isSet = true
}

func (v NullableNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetwork(val *Network) *NullableNetwork {
	return &NullableNetwork{value: val, isSet: true}
}

func (v NullableNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
