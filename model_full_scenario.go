/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// FullScenario struct for FullScenario
type FullScenario struct {
	ScenarioHosts                 *[]MinimalScenarioHost `json:"scenarioHosts,omitempty"`
	PrepareScenarioConfiguration  *MinimalConfiguration  `json:"prepareScenarioConfiguration,omitempty"`
	TeardownScenarioConfiguration *MinimalConfiguration  `json:"teardownScenarioConfiguration,omitempty"`
	Subtype                       string
}

// NewFullScenario instantiates a new FullScenario object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFullScenario(subtype string) *FullScenario {
	this := FullScenario{}
	this.Subtype = subtype
	return &this
}

// NewFullScenarioWithDefaults instantiates a new FullScenario object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFullScenarioWithDefaults() *FullScenario {
	this := FullScenario{}
	return &this
}

// GetScenarioHosts returns the ScenarioHosts field value if set, zero value otherwise.
func (o *FullScenario) GetScenarioHosts() []MinimalScenarioHost {
	if o == nil || o.ScenarioHosts == nil {
		var ret []MinimalScenarioHost
		return ret
	}
	return *o.ScenarioHosts
}

// GetScenarioHostsOk returns a tuple with the ScenarioHosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullScenario) GetScenarioHostsOk() (*[]MinimalScenarioHost, bool) {
	if o == nil || o.ScenarioHosts == nil {
		return nil, false
	}
	return o.ScenarioHosts, true
}

// HasScenarioHosts returns a boolean if a field has been set.
func (o *FullScenario) HasScenarioHosts() bool {
	if o != nil && o.ScenarioHosts != nil {
		return true
	}

	return false
}

// SetScenarioHosts gets a reference to the given []MinimalScenarioHost and assigns it to the ScenarioHosts field.
func (o *FullScenario) SetScenarioHosts(v []MinimalScenarioHost) {
	o.ScenarioHosts = &v
}

// GetPrepareScenarioConfiguration returns the PrepareScenarioConfiguration field value if set, zero value otherwise.
func (o *FullScenario) GetPrepareScenarioConfiguration() MinimalConfiguration {
	if o == nil || o.PrepareScenarioConfiguration == nil {
		var ret MinimalConfiguration
		return ret
	}
	return *o.PrepareScenarioConfiguration
}

// GetPrepareScenarioConfigurationOk returns a tuple with the PrepareScenarioConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullScenario) GetPrepareScenarioConfigurationOk() (*MinimalConfiguration, bool) {
	if o == nil || o.PrepareScenarioConfiguration == nil {
		return nil, false
	}
	return o.PrepareScenarioConfiguration, true
}

// HasPrepareScenarioConfiguration returns a boolean if a field has been set.
func (o *FullScenario) HasPrepareScenarioConfiguration() bool {
	if o != nil && o.PrepareScenarioConfiguration != nil {
		return true
	}

	return false
}

// SetPrepareScenarioConfiguration gets a reference to the given MinimalConfiguration and assigns it to the PrepareScenarioConfiguration field.
func (o *FullScenario) SetPrepareScenarioConfiguration(v MinimalConfiguration) {
	o.PrepareScenarioConfiguration = &v
}

// GetTeardownScenarioConfiguration returns the TeardownScenarioConfiguration field value if set, zero value otherwise.
func (o *FullScenario) GetTeardownScenarioConfiguration() MinimalConfiguration {
	if o == nil || o.TeardownScenarioConfiguration == nil {
		var ret MinimalConfiguration
		return ret
	}
	return *o.TeardownScenarioConfiguration
}

// GetTeardownScenarioConfigurationOk returns a tuple with the TeardownScenarioConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullScenario) GetTeardownScenarioConfigurationOk() (*MinimalConfiguration, bool) {
	if o == nil || o.TeardownScenarioConfiguration == nil {
		return nil, false
	}
	return o.TeardownScenarioConfiguration, true
}

// HasTeardownScenarioConfiguration returns a boolean if a field has been set.
func (o *FullScenario) HasTeardownScenarioConfiguration() bool {
	if o != nil && o.TeardownScenarioConfiguration != nil {
		return true
	}

	return false
}

// SetTeardownScenarioConfiguration gets a reference to the given MinimalConfiguration and assigns it to the TeardownScenarioConfiguration field.
func (o *FullScenario) SetTeardownScenarioConfiguration(v MinimalConfiguration) {
	o.TeardownScenarioConfiguration = &v
}

func (o FullScenario) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ScenarioHosts != nil {
		toSerialize["scenarioHosts"] = o.ScenarioHosts
	}
	if o.PrepareScenarioConfiguration != nil {
		toSerialize["prepareScenarioConfiguration"] = o.PrepareScenarioConfiguration
	}
	if o.TeardownScenarioConfiguration != nil {
		toSerialize["teardownScenarioConfiguration"] = o.TeardownScenarioConfiguration
	}
	return json.Marshal(toSerialize)
}

type NullableFullScenario struct {
	value *FullScenario
	isSet bool
}

func (v NullableFullScenario) Get() *FullScenario {
	return v.value
}

func (v *NullableFullScenario) Set(val *FullScenario) {
	v.value = val
	v.isSet = true
}

func (v NullableFullScenario) IsSet() bool {
	return v.isSet
}

func (v *NullableFullScenario) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFullScenario(val *FullScenario) *NullableFullScenario {
	return &NullableFullScenario{value: val, isSet: true}
}

func (v NullableFullScenario) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFullScenario) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
