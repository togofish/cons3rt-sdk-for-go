/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// BaseIdentity struct for BaseIdentity
type BaseIdentity struct {
	Identifier    *string                       `json:"identifier,omitempty"`
	User          *MinimalUser                  `json:"user,omitempty"`
	Project       *MinimalProject               `json:"project,omitempty"`
	AccessListing *[]CloudResourceAccessListing `json:"accessListing,omitempty"`
}

// NewBaseIdentity instantiates a new BaseIdentity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseIdentity() *BaseIdentity {
	this := BaseIdentity{}
	return &this
}

// NewBaseIdentityWithDefaults instantiates a new BaseIdentity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseIdentityWithDefaults() *BaseIdentity {
	this := BaseIdentity{}
	return &this
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *BaseIdentity) GetIdentifier() string {
	if o == nil || o.Identifier == nil {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseIdentity) GetIdentifierOk() (*string, bool) {
	if o == nil || o.Identifier == nil {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *BaseIdentity) HasIdentifier() bool {
	if o != nil && o.Identifier != nil {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *BaseIdentity) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *BaseIdentity) GetUser() MinimalUser {
	if o == nil || o.User == nil {
		var ret MinimalUser
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseIdentity) GetUserOk() (*MinimalUser, bool) {
	if o == nil || o.User == nil {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *BaseIdentity) HasUser() bool {
	if o != nil && o.User != nil {
		return true
	}

	return false
}

// SetUser gets a reference to the given MinimalUser and assigns it to the User field.
func (o *BaseIdentity) SetUser(v MinimalUser) {
	o.User = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *BaseIdentity) GetProject() MinimalProject {
	if o == nil || o.Project == nil {
		var ret MinimalProject
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseIdentity) GetProjectOk() (*MinimalProject, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *BaseIdentity) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given MinimalProject and assigns it to the Project field.
func (o *BaseIdentity) SetProject(v MinimalProject) {
	o.Project = &v
}

// GetAccessListing returns the AccessListing field value if set, zero value otherwise.
func (o *BaseIdentity) GetAccessListing() []CloudResourceAccessListing {
	if o == nil || o.AccessListing == nil {
		var ret []CloudResourceAccessListing
		return ret
	}
	return *o.AccessListing
}

// GetAccessListingOk returns a tuple with the AccessListing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseIdentity) GetAccessListingOk() (*[]CloudResourceAccessListing, bool) {
	if o == nil || o.AccessListing == nil {
		return nil, false
	}
	return o.AccessListing, true
}

// HasAccessListing returns a boolean if a field has been set.
func (o *BaseIdentity) HasAccessListing() bool {
	if o != nil && o.AccessListing != nil {
		return true
	}

	return false
}

// SetAccessListing gets a reference to the given []CloudResourceAccessListing and assigns it to the AccessListing field.
func (o *BaseIdentity) SetAccessListing(v []CloudResourceAccessListing) {
	o.AccessListing = &v
}

func (o BaseIdentity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Identifier != nil {
		toSerialize["identifier"] = o.Identifier
	}
	if o.User != nil {
		toSerialize["user"] = o.User
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.AccessListing != nil {
		toSerialize["accessListing"] = o.AccessListing
	}
	return json.Marshal(toSerialize)
}

type NullableBaseIdentity struct {
	value *BaseIdentity
	isSet bool
}

func (v NullableBaseIdentity) Get() *BaseIdentity {
	return v.value
}

func (v *NullableBaseIdentity) Set(val *BaseIdentity) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseIdentity) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseIdentity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseIdentity(val *BaseIdentity) *NullableBaseIdentity {
	return &NullableBaseIdentity{value: val, isSet: true}
}

func (v NullableBaseIdentity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseIdentity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
