/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// InputSubmissionServiceForAssetSubmission struct for InputSubmissionServiceForAssetSubmission
type InputSubmissionServiceForAssetSubmission struct {
	Credentials        *Credentials                              `json:"credentials,omitempty"`
	SubmissionEndpoint InputSubmissionEndpointForAssetSubmission `json:"submissionEndpoint"`
}

// NewInputSubmissionServiceForAssetSubmission instantiates a new InputSubmissionServiceForAssetSubmission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputSubmissionServiceForAssetSubmission(submissionEndpoint InputSubmissionEndpointForAssetSubmission) *InputSubmissionServiceForAssetSubmission {
	this := InputSubmissionServiceForAssetSubmission{}
	this.SubmissionEndpoint = submissionEndpoint
	return &this
}

// NewInputSubmissionServiceForAssetSubmissionWithDefaults instantiates a new InputSubmissionServiceForAssetSubmission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputSubmissionServiceForAssetSubmissionWithDefaults() *InputSubmissionServiceForAssetSubmission {
	this := InputSubmissionServiceForAssetSubmission{}
	return &this
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *InputSubmissionServiceForAssetSubmission) GetCredentials() Credentials {
	if o == nil || o.Credentials == nil {
		var ret Credentials
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputSubmissionServiceForAssetSubmission) GetCredentialsOk() (*Credentials, bool) {
	if o == nil || o.Credentials == nil {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *InputSubmissionServiceForAssetSubmission) HasCredentials() bool {
	if o != nil && o.Credentials != nil {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given Credentials and assigns it to the Credentials field.
func (o *InputSubmissionServiceForAssetSubmission) SetCredentials(v Credentials) {
	o.Credentials = &v
}

// GetSubmissionEndpoint returns the SubmissionEndpoint field value
func (o *InputSubmissionServiceForAssetSubmission) GetSubmissionEndpoint() InputSubmissionEndpointForAssetSubmission {
	if o == nil {
		var ret InputSubmissionEndpointForAssetSubmission
		return ret
	}

	return o.SubmissionEndpoint
}

// GetSubmissionEndpointOk returns a tuple with the SubmissionEndpoint field value
// and a boolean to check if the value has been set.
func (o *InputSubmissionServiceForAssetSubmission) GetSubmissionEndpointOk() (*InputSubmissionEndpointForAssetSubmission, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubmissionEndpoint, true
}

// SetSubmissionEndpoint sets field value
func (o *InputSubmissionServiceForAssetSubmission) SetSubmissionEndpoint(v InputSubmissionEndpointForAssetSubmission) {
	o.SubmissionEndpoint = v
}

func (o InputSubmissionServiceForAssetSubmission) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Credentials != nil {
		toSerialize["credentials"] = o.Credentials
	}
	if true {
		toSerialize["submissionEndpoint"] = o.SubmissionEndpoint
	}
	return json.Marshal(toSerialize)
}

type NullableInputSubmissionServiceForAssetSubmission struct {
	value *InputSubmissionServiceForAssetSubmission
	isSet bool
}

func (v NullableInputSubmissionServiceForAssetSubmission) Get() *InputSubmissionServiceForAssetSubmission {
	return v.value
}

func (v *NullableInputSubmissionServiceForAssetSubmission) Set(val *InputSubmissionServiceForAssetSubmission) {
	v.value = val
	v.isSet = true
}

func (v NullableInputSubmissionServiceForAssetSubmission) IsSet() bool {
	return v.isSet
}

func (v *NullableInputSubmissionServiceForAssetSubmission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputSubmissionServiceForAssetSubmission(val *InputSubmissionServiceForAssetSubmission) *NullableInputSubmissionServiceForAssetSubmission {
	return &NullableInputSubmissionServiceForAssetSubmission{value: val, isSet: true}
}

func (v NullableInputSubmissionServiceForAssetSubmission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputSubmissionServiceForAssetSubmission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
