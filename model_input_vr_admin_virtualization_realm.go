/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// InputVRAdminVirtualizationRealm struct for InputVRAdminVirtualizationRealm
type InputVRAdminVirtualizationRealm struct {
	VirtualizationRealmType  string                             `json:"virtualizationRealmType"`
	Id                       *int32                             `json:"id,omitempty"`
	AdditionalNetworks       *[]InputVirtualizationRealmNetwork `json:"additionalNetworks,omitempty"`
	Cidr                     string                             `json:"cidr"`
	Cons3rtNetwork           *InputVirtualizationRealmNetwork   `json:"cons3rtNetwork,omitempty"`
	DefaultWindowsDomainName *string                            `json:"defaultWindowsDomainName,omitempty"`
	Description              string                             `json:"description"`
	Name                     string                             `json:"name"`
	PowerOnDelayBase         *int64                             `json:"powerOnDelayBase,omitempty"`
	PowerOnInitialDelayBase  *int32                             `json:"powerOnInitialDelayBase,omitempty"`
	PowerOnMaximumDelay      *int32                             `json:"powerOnMaximumDelay,omitempty"`
	PowerOnMinimumDelay      *int32                             `json:"powerOnMinimumDelay,omitempty"`
}

// NewInputVRAdminVirtualizationRealm instantiates a new InputVRAdminVirtualizationRealm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputVRAdminVirtualizationRealm(virtualizationRealmType string, cidr string, description string, name string) *InputVRAdminVirtualizationRealm {
	this := InputVRAdminVirtualizationRealm{}
	this.VirtualizationRealmType = virtualizationRealmType
	this.Cidr = cidr
	this.Description = description
	this.Name = name
	return &this
}

// NewInputVRAdminVirtualizationRealmWithDefaults instantiates a new InputVRAdminVirtualizationRealm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputVRAdminVirtualizationRealmWithDefaults() *InputVRAdminVirtualizationRealm {
	this := InputVRAdminVirtualizationRealm{}
	return &this
}

// GetVirtualizationRealmType returns the VirtualizationRealmType field value
func (o *InputVRAdminVirtualizationRealm) GetVirtualizationRealmType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VirtualizationRealmType
}

// GetVirtualizationRealmTypeOk returns a tuple with the VirtualizationRealmType field value
// and a boolean to check if the value has been set.
func (o *InputVRAdminVirtualizationRealm) GetVirtualizationRealmTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VirtualizationRealmType, true
}

// SetVirtualizationRealmType sets field value
func (o *InputVRAdminVirtualizationRealm) SetVirtualizationRealmType(v string) {
	o.VirtualizationRealmType = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InputVRAdminVirtualizationRealm) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputVRAdminVirtualizationRealm) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InputVRAdminVirtualizationRealm) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *InputVRAdminVirtualizationRealm) SetId(v int32) {
	o.Id = &v
}

// GetAdditionalNetworks returns the AdditionalNetworks field value if set, zero value otherwise.
func (o *InputVRAdminVirtualizationRealm) GetAdditionalNetworks() []InputVirtualizationRealmNetwork {
	if o == nil || o.AdditionalNetworks == nil {
		var ret []InputVirtualizationRealmNetwork
		return ret
	}
	return *o.AdditionalNetworks
}

// GetAdditionalNetworksOk returns a tuple with the AdditionalNetworks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputVRAdminVirtualizationRealm) GetAdditionalNetworksOk() (*[]InputVirtualizationRealmNetwork, bool) {
	if o == nil || o.AdditionalNetworks == nil {
		return nil, false
	}
	return o.AdditionalNetworks, true
}

// HasAdditionalNetworks returns a boolean if a field has been set.
func (o *InputVRAdminVirtualizationRealm) HasAdditionalNetworks() bool {
	if o != nil && o.AdditionalNetworks != nil {
		return true
	}

	return false
}

// SetAdditionalNetworks gets a reference to the given []InputVirtualizationRealmNetwork and assigns it to the AdditionalNetworks field.
func (o *InputVRAdminVirtualizationRealm) SetAdditionalNetworks(v []InputVirtualizationRealmNetwork) {
	o.AdditionalNetworks = &v
}

// GetCidr returns the Cidr field value
func (o *InputVRAdminVirtualizationRealm) GetCidr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value
// and a boolean to check if the value has been set.
func (o *InputVRAdminVirtualizationRealm) GetCidrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cidr, true
}

// SetCidr sets field value
func (o *InputVRAdminVirtualizationRealm) SetCidr(v string) {
	o.Cidr = v
}

// GetCons3rtNetwork returns the Cons3rtNetwork field value if set, zero value otherwise.
func (o *InputVRAdminVirtualizationRealm) GetCons3rtNetwork() InputVirtualizationRealmNetwork {
	if o == nil || o.Cons3rtNetwork == nil {
		var ret InputVirtualizationRealmNetwork
		return ret
	}
	return *o.Cons3rtNetwork
}

// GetCons3rtNetworkOk returns a tuple with the Cons3rtNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputVRAdminVirtualizationRealm) GetCons3rtNetworkOk() (*InputVirtualizationRealmNetwork, bool) {
	if o == nil || o.Cons3rtNetwork == nil {
		return nil, false
	}
	return o.Cons3rtNetwork, true
}

// HasCons3rtNetwork returns a boolean if a field has been set.
func (o *InputVRAdminVirtualizationRealm) HasCons3rtNetwork() bool {
	if o != nil && o.Cons3rtNetwork != nil {
		return true
	}

	return false
}

// SetCons3rtNetwork gets a reference to the given InputVirtualizationRealmNetwork and assigns it to the Cons3rtNetwork field.
func (o *InputVRAdminVirtualizationRealm) SetCons3rtNetwork(v InputVirtualizationRealmNetwork) {
	o.Cons3rtNetwork = &v
}

// GetDefaultWindowsDomainName returns the DefaultWindowsDomainName field value if set, zero value otherwise.
func (o *InputVRAdminVirtualizationRealm) GetDefaultWindowsDomainName() string {
	if o == nil || o.DefaultWindowsDomainName == nil {
		var ret string
		return ret
	}
	return *o.DefaultWindowsDomainName
}

// GetDefaultWindowsDomainNameOk returns a tuple with the DefaultWindowsDomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputVRAdminVirtualizationRealm) GetDefaultWindowsDomainNameOk() (*string, bool) {
	if o == nil || o.DefaultWindowsDomainName == nil {
		return nil, false
	}
	return o.DefaultWindowsDomainName, true
}

// HasDefaultWindowsDomainName returns a boolean if a field has been set.
func (o *InputVRAdminVirtualizationRealm) HasDefaultWindowsDomainName() bool {
	if o != nil && o.DefaultWindowsDomainName != nil {
		return true
	}

	return false
}

// SetDefaultWindowsDomainName gets a reference to the given string and assigns it to the DefaultWindowsDomainName field.
func (o *InputVRAdminVirtualizationRealm) SetDefaultWindowsDomainName(v string) {
	o.DefaultWindowsDomainName = &v
}

// GetDescription returns the Description field value
func (o *InputVRAdminVirtualizationRealm) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *InputVRAdminVirtualizationRealm) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *InputVRAdminVirtualizationRealm) SetDescription(v string) {
	o.Description = v
}

// GetName returns the Name field value
func (o *InputVRAdminVirtualizationRealm) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InputVRAdminVirtualizationRealm) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InputVRAdminVirtualizationRealm) SetName(v string) {
	o.Name = v
}

// GetPowerOnDelayBase returns the PowerOnDelayBase field value if set, zero value otherwise.
func (o *InputVRAdminVirtualizationRealm) GetPowerOnDelayBase() int64 {
	if o == nil || o.PowerOnDelayBase == nil {
		var ret int64
		return ret
	}
	return *o.PowerOnDelayBase
}

// GetPowerOnDelayBaseOk returns a tuple with the PowerOnDelayBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputVRAdminVirtualizationRealm) GetPowerOnDelayBaseOk() (*int64, bool) {
	if o == nil || o.PowerOnDelayBase == nil {
		return nil, false
	}
	return o.PowerOnDelayBase, true
}

// HasPowerOnDelayBase returns a boolean if a field has been set.
func (o *InputVRAdminVirtualizationRealm) HasPowerOnDelayBase() bool {
	if o != nil && o.PowerOnDelayBase != nil {
		return true
	}

	return false
}

// SetPowerOnDelayBase gets a reference to the given int64 and assigns it to the PowerOnDelayBase field.
func (o *InputVRAdminVirtualizationRealm) SetPowerOnDelayBase(v int64) {
	o.PowerOnDelayBase = &v
}

// GetPowerOnInitialDelayBase returns the PowerOnInitialDelayBase field value if set, zero value otherwise.
func (o *InputVRAdminVirtualizationRealm) GetPowerOnInitialDelayBase() int32 {
	if o == nil || o.PowerOnInitialDelayBase == nil {
		var ret int32
		return ret
	}
	return *o.PowerOnInitialDelayBase
}

// GetPowerOnInitialDelayBaseOk returns a tuple with the PowerOnInitialDelayBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputVRAdminVirtualizationRealm) GetPowerOnInitialDelayBaseOk() (*int32, bool) {
	if o == nil || o.PowerOnInitialDelayBase == nil {
		return nil, false
	}
	return o.PowerOnInitialDelayBase, true
}

// HasPowerOnInitialDelayBase returns a boolean if a field has been set.
func (o *InputVRAdminVirtualizationRealm) HasPowerOnInitialDelayBase() bool {
	if o != nil && o.PowerOnInitialDelayBase != nil {
		return true
	}

	return false
}

// SetPowerOnInitialDelayBase gets a reference to the given int32 and assigns it to the PowerOnInitialDelayBase field.
func (o *InputVRAdminVirtualizationRealm) SetPowerOnInitialDelayBase(v int32) {
	o.PowerOnInitialDelayBase = &v
}

// GetPowerOnMaximumDelay returns the PowerOnMaximumDelay field value if set, zero value otherwise.
func (o *InputVRAdminVirtualizationRealm) GetPowerOnMaximumDelay() int32 {
	if o == nil || o.PowerOnMaximumDelay == nil {
		var ret int32
		return ret
	}
	return *o.PowerOnMaximumDelay
}

// GetPowerOnMaximumDelayOk returns a tuple with the PowerOnMaximumDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputVRAdminVirtualizationRealm) GetPowerOnMaximumDelayOk() (*int32, bool) {
	if o == nil || o.PowerOnMaximumDelay == nil {
		return nil, false
	}
	return o.PowerOnMaximumDelay, true
}

// HasPowerOnMaximumDelay returns a boolean if a field has been set.
func (o *InputVRAdminVirtualizationRealm) HasPowerOnMaximumDelay() bool {
	if o != nil && o.PowerOnMaximumDelay != nil {
		return true
	}

	return false
}

// SetPowerOnMaximumDelay gets a reference to the given int32 and assigns it to the PowerOnMaximumDelay field.
func (o *InputVRAdminVirtualizationRealm) SetPowerOnMaximumDelay(v int32) {
	o.PowerOnMaximumDelay = &v
}

// GetPowerOnMinimumDelay returns the PowerOnMinimumDelay field value if set, zero value otherwise.
func (o *InputVRAdminVirtualizationRealm) GetPowerOnMinimumDelay() int32 {
	if o == nil || o.PowerOnMinimumDelay == nil {
		var ret int32
		return ret
	}
	return *o.PowerOnMinimumDelay
}

// GetPowerOnMinimumDelayOk returns a tuple with the PowerOnMinimumDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputVRAdminVirtualizationRealm) GetPowerOnMinimumDelayOk() (*int32, bool) {
	if o == nil || o.PowerOnMinimumDelay == nil {
		return nil, false
	}
	return o.PowerOnMinimumDelay, true
}

// HasPowerOnMinimumDelay returns a boolean if a field has been set.
func (o *InputVRAdminVirtualizationRealm) HasPowerOnMinimumDelay() bool {
	if o != nil && o.PowerOnMinimumDelay != nil {
		return true
	}

	return false
}

// SetPowerOnMinimumDelay gets a reference to the given int32 and assigns it to the PowerOnMinimumDelay field.
func (o *InputVRAdminVirtualizationRealm) SetPowerOnMinimumDelay(v int32) {
	o.PowerOnMinimumDelay = &v
}

func (o InputVRAdminVirtualizationRealm) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["virtualizationRealmType"] = o.VirtualizationRealmType
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.AdditionalNetworks != nil {
		toSerialize["additionalNetworks"] = o.AdditionalNetworks
	}
	if true {
		toSerialize["cidr"] = o.Cidr
	}
	if o.Cons3rtNetwork != nil {
		toSerialize["cons3rtNetwork"] = o.Cons3rtNetwork
	}
	if o.DefaultWindowsDomainName != nil {
		toSerialize["defaultWindowsDomainName"] = o.DefaultWindowsDomainName
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.PowerOnDelayBase != nil {
		toSerialize["powerOnDelayBase"] = o.PowerOnDelayBase
	}
	if o.PowerOnInitialDelayBase != nil {
		toSerialize["powerOnInitialDelayBase"] = o.PowerOnInitialDelayBase
	}
	if o.PowerOnMaximumDelay != nil {
		toSerialize["powerOnMaximumDelay"] = o.PowerOnMaximumDelay
	}
	if o.PowerOnMinimumDelay != nil {
		toSerialize["powerOnMinimumDelay"] = o.PowerOnMinimumDelay
	}
	return json.Marshal(toSerialize)
}

type NullableInputVRAdminVirtualizationRealm struct {
	value *InputVRAdminVirtualizationRealm
	isSet bool
}

func (v NullableInputVRAdminVirtualizationRealm) Get() *InputVRAdminVirtualizationRealm {
	return v.value
}

func (v *NullableInputVRAdminVirtualizationRealm) Set(val *InputVRAdminVirtualizationRealm) {
	v.value = val
	v.isSet = true
}

func (v NullableInputVRAdminVirtualizationRealm) IsSet() bool {
	return v.isSet
}

func (v *NullableInputVRAdminVirtualizationRealm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputVRAdminVirtualizationRealm(val *InputVRAdminVirtualizationRealm) *NullableInputVRAdminVirtualizationRealm {
	return &NullableInputVRAdminVirtualizationRealm{value: val, isSet: true}
}

func (v NullableInputVRAdminVirtualizationRealm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputVRAdminVirtualizationRealm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
