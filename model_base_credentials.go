/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// BaseCredentials struct for BaseCredentials
type BaseCredentials struct {
	Credentials *map[string]string            `json:"credentials,omitempty"`
	Context     *map[string]string            `json:"context,omitempty"`
	Resources   *[]CloudResourceAccessListing `json:"resources,omitempty"`
}

// NewBaseCredentials instantiates a new BaseCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseCredentials() *BaseCredentials {
	this := BaseCredentials{}
	return &this
}

// NewBaseCredentialsWithDefaults instantiates a new BaseCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseCredentialsWithDefaults() *BaseCredentials {
	this := BaseCredentials{}
	return &this
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *BaseCredentials) GetCredentials() map[string]string {
	if o == nil || o.Credentials == nil {
		var ret map[string]string
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseCredentials) GetCredentialsOk() (*map[string]string, bool) {
	if o == nil || o.Credentials == nil {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *BaseCredentials) HasCredentials() bool {
	if o != nil && o.Credentials != nil {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given map[string]string and assigns it to the Credentials field.
func (o *BaseCredentials) SetCredentials(v map[string]string) {
	o.Credentials = &v
}

// GetContext returns the Context field value if set, zero value otherwise.
func (o *BaseCredentials) GetContext() map[string]string {
	if o == nil || o.Context == nil {
		var ret map[string]string
		return ret
	}
	return *o.Context
}

// GetContextOk returns a tuple with the Context field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseCredentials) GetContextOk() (*map[string]string, bool) {
	if o == nil || o.Context == nil {
		return nil, false
	}
	return o.Context, true
}

// HasContext returns a boolean if a field has been set.
func (o *BaseCredentials) HasContext() bool {
	if o != nil && o.Context != nil {
		return true
	}

	return false
}

// SetContext gets a reference to the given map[string]string and assigns it to the Context field.
func (o *BaseCredentials) SetContext(v map[string]string) {
	o.Context = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *BaseCredentials) GetResources() []CloudResourceAccessListing {
	if o == nil || o.Resources == nil {
		var ret []CloudResourceAccessListing
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseCredentials) GetResourcesOk() (*[]CloudResourceAccessListing, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *BaseCredentials) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given []CloudResourceAccessListing and assigns it to the Resources field.
func (o *BaseCredentials) SetResources(v []CloudResourceAccessListing) {
	o.Resources = &v
}

func (o BaseCredentials) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Credentials != nil {
		toSerialize["credentials"] = o.Credentials
	}
	if o.Context != nil {
		toSerialize["context"] = o.Context
	}
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}
	return json.Marshal(toSerialize)
}

type NullableBaseCredentials struct {
	value *BaseCredentials
	isSet bool
}

func (v NullableBaseCredentials) Get() *BaseCredentials {
	return v.value
}

func (v *NullableBaseCredentials) Set(val *BaseCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseCredentials(val *BaseCredentials) *NullableBaseCredentials {
	return &NullableBaseCredentials{value: val, isSet: true}
}

func (v NullableBaseCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
