/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// ContainerInstallation struct for ContainerInstallation
type ContainerInstallation struct {
	AssetType *string `json:"assetType,omitempty"`
	RunArguments *string `json:"runArguments,omitempty"`
}

// NewContainerInstallation instantiates a new ContainerInstallation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerInstallation(subtype string) *ContainerInstallation {
	this := ContainerInstallation{}
	this.Subtype = subtype
	return &this
}

// NewContainerInstallationWithDefaults instantiates a new ContainerInstallation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerInstallationWithDefaults() *ContainerInstallation {
	this := ContainerInstallation{}
	return &this
}

// GetAssetType returns the AssetType field value if set, zero value otherwise.
func (o *ContainerInstallation) GetAssetType() string {
	if o == nil || o.AssetType == nil {
		var ret string
		return ret
	}
	return *o.AssetType
}

// GetAssetTypeOk returns a tuple with the AssetType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerInstallation) GetAssetTypeOk() (*string, bool) {
	if o == nil || o.AssetType == nil {
		return nil, false
	}
	return o.AssetType, true
}

// HasAssetType returns a boolean if a field has been set.
func (o *ContainerInstallation) HasAssetType() bool {
	if o != nil && o.AssetType != nil {
		return true
	}

	return false
}

// SetAssetType gets a reference to the given string and assigns it to the AssetType field.
func (o *ContainerInstallation) SetAssetType(v string) {
	o.AssetType = &v
}

// GetRunArguments returns the RunArguments field value if set, zero value otherwise.
func (o *ContainerInstallation) GetRunArguments() string {
	if o == nil || o.RunArguments == nil {
		var ret string
		return ret
	}
	return *o.RunArguments
}

// GetRunArgumentsOk returns a tuple with the RunArguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContainerInstallation) GetRunArgumentsOk() (*string, bool) {
	if o == nil || o.RunArguments == nil {
		return nil, false
	}
	return o.RunArguments, true
}

// HasRunArguments returns a boolean if a field has been set.
func (o *ContainerInstallation) HasRunArguments() bool {
	if o != nil && o.RunArguments != nil {
		return true
	}

	return false
}

// SetRunArguments gets a reference to the given string and assigns it to the RunArguments field.
func (o *ContainerInstallation) SetRunArguments(v string) {
	o.RunArguments = &v
}

func (o ContainerInstallation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssetType != nil {
		toSerialize["assetType"] = o.AssetType
	}
	if o.RunArguments != nil {
		toSerialize["runArguments"] = o.RunArguments
	}
	return json.Marshal(toSerialize)
}

type NullableContainerInstallation struct {
	value *ContainerInstallation
	isSet bool
}

func (v NullableContainerInstallation) Get() *ContainerInstallation {
	return v.value
}

func (v *NullableContainerInstallation) Set(val *ContainerInstallation) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerInstallation) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerInstallation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerInstallation(val *ContainerInstallation) *NullableContainerInstallation {
	return &NullableContainerInstallation{value: val, isSet: true}
}

func (v NullableContainerInstallation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerInstallation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


