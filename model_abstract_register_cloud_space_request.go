/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// AbstractRegisterCloudSpaceRequest struct for AbstractRegisterCloudSpaceRequest
type AbstractRegisterCloudSpaceRequest struct {
	VirtualizationRealmType   string              `json:"virtualizationRealmType"`
	Name                      string              `json:"name"`
	Description               *string             `json:"description,omitempty"`
	AccessPoint               *string             `json:"accessPoint,omitempty"`
	ActiveAfterRegistration   *bool               `json:"activeAfterRegistration,omitempty"`
	AdditionalNetworkNames    *[]string           `json:"additionalNetworkNames,omitempty"`
	Cons3rtNetworkName        string              `json:"cons3rtNetworkName"`
	MaximumNumCpus            *int32              `json:"maximumNumCpus,omitempty"`
	MaximumNumGpus            *int32              `json:"maximumNumGpus,omitempty"`
	MaximumRamInMegabytes     *int32              `json:"maximumRamInMegabytes,omitempty"`
	MaximumStorageInMegabytes *int32              `json:"maximumStorageInMegabytes,omitempty"`
	MaximumVirtualMachines    *int32              `json:"maximumVirtualMachines,omitempty"`
	PowerOnMinimumDelay       *int32              `json:"powerOnMinimumDelay,omitempty"`
	PowerOnMaximumDelay       *int32              `json:"powerOnMaximumDelay,omitempty"`
	Password                  string              `json:"password"`
	PowerOnInitialDelayBase   *int32              `json:"powerOnInitialDelayBase,omitempty"`
	PrimaryNetworkName        string              `json:"primaryNetworkName"`
	RemoteAccessConfig        *RemoteAccessConfig `json:"remoteAccessConfig,omitempty"`
	Username                  string              `json:"username"`
}

// NewAbstractRegisterCloudSpaceRequest instantiates a new AbstractRegisterCloudSpaceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAbstractRegisterCloudSpaceRequest(virtualizationRealmType string, name string, cons3rtNetworkName string, password string, primaryNetworkName string, username string) *AbstractRegisterCloudSpaceRequest {
	this := AbstractRegisterCloudSpaceRequest{}
	this.VirtualizationRealmType = virtualizationRealmType
	this.Name = name
	this.Cons3rtNetworkName = cons3rtNetworkName
	this.Password = password
	this.PrimaryNetworkName = primaryNetworkName
	this.Username = username
	return &this
}

// NewAbstractRegisterCloudSpaceRequestWithDefaults instantiates a new AbstractRegisterCloudSpaceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAbstractRegisterCloudSpaceRequestWithDefaults() *AbstractRegisterCloudSpaceRequest {
	this := AbstractRegisterCloudSpaceRequest{}
	return &this
}

// GetVirtualizationRealmType returns the VirtualizationRealmType field value
func (o *AbstractRegisterCloudSpaceRequest) GetVirtualizationRealmType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VirtualizationRealmType
}

// GetVirtualizationRealmTypeOk returns a tuple with the VirtualizationRealmType field value
// and a boolean to check if the value has been set.
func (o *AbstractRegisterCloudSpaceRequest) GetVirtualizationRealmTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VirtualizationRealmType, true
}

// SetVirtualizationRealmType sets field value
func (o *AbstractRegisterCloudSpaceRequest) SetVirtualizationRealmType(v string) {
	o.VirtualizationRealmType = v
}

// GetName returns the Name field value
func (o *AbstractRegisterCloudSpaceRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AbstractRegisterCloudSpaceRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AbstractRegisterCloudSpaceRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AbstractRegisterCloudSpaceRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractRegisterCloudSpaceRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AbstractRegisterCloudSpaceRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AbstractRegisterCloudSpaceRequest) SetDescription(v string) {
	o.Description = &v
}

// GetAccessPoint returns the AccessPoint field value if set, zero value otherwise.
func (o *AbstractRegisterCloudSpaceRequest) GetAccessPoint() string {
	if o == nil || o.AccessPoint == nil {
		var ret string
		return ret
	}
	return *o.AccessPoint
}

// GetAccessPointOk returns a tuple with the AccessPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractRegisterCloudSpaceRequest) GetAccessPointOk() (*string, bool) {
	if o == nil || o.AccessPoint == nil {
		return nil, false
	}
	return o.AccessPoint, true
}

// HasAccessPoint returns a boolean if a field has been set.
func (o *AbstractRegisterCloudSpaceRequest) HasAccessPoint() bool {
	if o != nil && o.AccessPoint != nil {
		return true
	}

	return false
}

// SetAccessPoint gets a reference to the given string and assigns it to the AccessPoint field.
func (o *AbstractRegisterCloudSpaceRequest) SetAccessPoint(v string) {
	o.AccessPoint = &v
}

// GetActiveAfterRegistration returns the ActiveAfterRegistration field value if set, zero value otherwise.
func (o *AbstractRegisterCloudSpaceRequest) GetActiveAfterRegistration() bool {
	if o == nil || o.ActiveAfterRegistration == nil {
		var ret bool
		return ret
	}
	return *o.ActiveAfterRegistration
}

// GetActiveAfterRegistrationOk returns a tuple with the ActiveAfterRegistration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractRegisterCloudSpaceRequest) GetActiveAfterRegistrationOk() (*bool, bool) {
	if o == nil || o.ActiveAfterRegistration == nil {
		return nil, false
	}
	return o.ActiveAfterRegistration, true
}

// HasActiveAfterRegistration returns a boolean if a field has been set.
func (o *AbstractRegisterCloudSpaceRequest) HasActiveAfterRegistration() bool {
	if o != nil && o.ActiveAfterRegistration != nil {
		return true
	}

	return false
}

// SetActiveAfterRegistration gets a reference to the given bool and assigns it to the ActiveAfterRegistration field.
func (o *AbstractRegisterCloudSpaceRequest) SetActiveAfterRegistration(v bool) {
	o.ActiveAfterRegistration = &v
}

// GetAdditionalNetworkNames returns the AdditionalNetworkNames field value if set, zero value otherwise.
func (o *AbstractRegisterCloudSpaceRequest) GetAdditionalNetworkNames() []string {
	if o == nil || o.AdditionalNetworkNames == nil {
		var ret []string
		return ret
	}
	return *o.AdditionalNetworkNames
}

// GetAdditionalNetworkNamesOk returns a tuple with the AdditionalNetworkNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractRegisterCloudSpaceRequest) GetAdditionalNetworkNamesOk() (*[]string, bool) {
	if o == nil || o.AdditionalNetworkNames == nil {
		return nil, false
	}
	return o.AdditionalNetworkNames, true
}

// HasAdditionalNetworkNames returns a boolean if a field has been set.
func (o *AbstractRegisterCloudSpaceRequest) HasAdditionalNetworkNames() bool {
	if o != nil && o.AdditionalNetworkNames != nil {
		return true
	}

	return false
}

// SetAdditionalNetworkNames gets a reference to the given []string and assigns it to the AdditionalNetworkNames field.
func (o *AbstractRegisterCloudSpaceRequest) SetAdditionalNetworkNames(v []string) {
	o.AdditionalNetworkNames = &v
}

// GetCons3rtNetworkName returns the Cons3rtNetworkName field value
func (o *AbstractRegisterCloudSpaceRequest) GetCons3rtNetworkName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cons3rtNetworkName
}

// GetCons3rtNetworkNameOk returns a tuple with the Cons3rtNetworkName field value
// and a boolean to check if the value has been set.
func (o *AbstractRegisterCloudSpaceRequest) GetCons3rtNetworkNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cons3rtNetworkName, true
}

// SetCons3rtNetworkName sets field value
func (o *AbstractRegisterCloudSpaceRequest) SetCons3rtNetworkName(v string) {
	o.Cons3rtNetworkName = v
}

// GetMaximumNumCpus returns the MaximumNumCpus field value if set, zero value otherwise.
func (o *AbstractRegisterCloudSpaceRequest) GetMaximumNumCpus() int32 {
	if o == nil || o.MaximumNumCpus == nil {
		var ret int32
		return ret
	}
	return *o.MaximumNumCpus
}

// GetMaximumNumCpusOk returns a tuple with the MaximumNumCpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractRegisterCloudSpaceRequest) GetMaximumNumCpusOk() (*int32, bool) {
	if o == nil || o.MaximumNumCpus == nil {
		return nil, false
	}
	return o.MaximumNumCpus, true
}

// HasMaximumNumCpus returns a boolean if a field has been set.
func (o *AbstractRegisterCloudSpaceRequest) HasMaximumNumCpus() bool {
	if o != nil && o.MaximumNumCpus != nil {
		return true
	}

	return false
}

// SetMaximumNumCpus gets a reference to the given int32 and assigns it to the MaximumNumCpus field.
func (o *AbstractRegisterCloudSpaceRequest) SetMaximumNumCpus(v int32) {
	o.MaximumNumCpus = &v
}

// GetMaximumNumGpus returns the MaximumNumGpus field value if set, zero value otherwise.
func (o *AbstractRegisterCloudSpaceRequest) GetMaximumNumGpus() int32 {
	if o == nil || o.MaximumNumGpus == nil {
		var ret int32
		return ret
	}
	return *o.MaximumNumGpus
}

// GetMaximumNumGpusOk returns a tuple with the MaximumNumGpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractRegisterCloudSpaceRequest) GetMaximumNumGpusOk() (*int32, bool) {
	if o == nil || o.MaximumNumGpus == nil {
		return nil, false
	}
	return o.MaximumNumGpus, true
}

// HasMaximumNumGpus returns a boolean if a field has been set.
func (o *AbstractRegisterCloudSpaceRequest) HasMaximumNumGpus() bool {
	if o != nil && o.MaximumNumGpus != nil {
		return true
	}

	return false
}

// SetMaximumNumGpus gets a reference to the given int32 and assigns it to the MaximumNumGpus field.
func (o *AbstractRegisterCloudSpaceRequest) SetMaximumNumGpus(v int32) {
	o.MaximumNumGpus = &v
}

// GetMaximumRamInMegabytes returns the MaximumRamInMegabytes field value if set, zero value otherwise.
func (o *AbstractRegisterCloudSpaceRequest) GetMaximumRamInMegabytes() int32 {
	if o == nil || o.MaximumRamInMegabytes == nil {
		var ret int32
		return ret
	}
	return *o.MaximumRamInMegabytes
}

// GetMaximumRamInMegabytesOk returns a tuple with the MaximumRamInMegabytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractRegisterCloudSpaceRequest) GetMaximumRamInMegabytesOk() (*int32, bool) {
	if o == nil || o.MaximumRamInMegabytes == nil {
		return nil, false
	}
	return o.MaximumRamInMegabytes, true
}

// HasMaximumRamInMegabytes returns a boolean if a field has been set.
func (o *AbstractRegisterCloudSpaceRequest) HasMaximumRamInMegabytes() bool {
	if o != nil && o.MaximumRamInMegabytes != nil {
		return true
	}

	return false
}

// SetMaximumRamInMegabytes gets a reference to the given int32 and assigns it to the MaximumRamInMegabytes field.
func (o *AbstractRegisterCloudSpaceRequest) SetMaximumRamInMegabytes(v int32) {
	o.MaximumRamInMegabytes = &v
}

// GetMaximumStorageInMegabytes returns the MaximumStorageInMegabytes field value if set, zero value otherwise.
func (o *AbstractRegisterCloudSpaceRequest) GetMaximumStorageInMegabytes() int32 {
	if o == nil || o.MaximumStorageInMegabytes == nil {
		var ret int32
		return ret
	}
	return *o.MaximumStorageInMegabytes
}

// GetMaximumStorageInMegabytesOk returns a tuple with the MaximumStorageInMegabytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractRegisterCloudSpaceRequest) GetMaximumStorageInMegabytesOk() (*int32, bool) {
	if o == nil || o.MaximumStorageInMegabytes == nil {
		return nil, false
	}
	return o.MaximumStorageInMegabytes, true
}

// HasMaximumStorageInMegabytes returns a boolean if a field has been set.
func (o *AbstractRegisterCloudSpaceRequest) HasMaximumStorageInMegabytes() bool {
	if o != nil && o.MaximumStorageInMegabytes != nil {
		return true
	}

	return false
}

// SetMaximumStorageInMegabytes gets a reference to the given int32 and assigns it to the MaximumStorageInMegabytes field.
func (o *AbstractRegisterCloudSpaceRequest) SetMaximumStorageInMegabytes(v int32) {
	o.MaximumStorageInMegabytes = &v
}

// GetMaximumVirtualMachines returns the MaximumVirtualMachines field value if set, zero value otherwise.
func (o *AbstractRegisterCloudSpaceRequest) GetMaximumVirtualMachines() int32 {
	if o == nil || o.MaximumVirtualMachines == nil {
		var ret int32
		return ret
	}
	return *o.MaximumVirtualMachines
}

// GetMaximumVirtualMachinesOk returns a tuple with the MaximumVirtualMachines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractRegisterCloudSpaceRequest) GetMaximumVirtualMachinesOk() (*int32, bool) {
	if o == nil || o.MaximumVirtualMachines == nil {
		return nil, false
	}
	return o.MaximumVirtualMachines, true
}

// HasMaximumVirtualMachines returns a boolean if a field has been set.
func (o *AbstractRegisterCloudSpaceRequest) HasMaximumVirtualMachines() bool {
	if o != nil && o.MaximumVirtualMachines != nil {
		return true
	}

	return false
}

// SetMaximumVirtualMachines gets a reference to the given int32 and assigns it to the MaximumVirtualMachines field.
func (o *AbstractRegisterCloudSpaceRequest) SetMaximumVirtualMachines(v int32) {
	o.MaximumVirtualMachines = &v
}

// GetPowerOnMinimumDelay returns the PowerOnMinimumDelay field value if set, zero value otherwise.
func (o *AbstractRegisterCloudSpaceRequest) GetPowerOnMinimumDelay() int32 {
	if o == nil || o.PowerOnMinimumDelay == nil {
		var ret int32
		return ret
	}
	return *o.PowerOnMinimumDelay
}

// GetPowerOnMinimumDelayOk returns a tuple with the PowerOnMinimumDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractRegisterCloudSpaceRequest) GetPowerOnMinimumDelayOk() (*int32, bool) {
	if o == nil || o.PowerOnMinimumDelay == nil {
		return nil, false
	}
	return o.PowerOnMinimumDelay, true
}

// HasPowerOnMinimumDelay returns a boolean if a field has been set.
func (o *AbstractRegisterCloudSpaceRequest) HasPowerOnMinimumDelay() bool {
	if o != nil && o.PowerOnMinimumDelay != nil {
		return true
	}

	return false
}

// SetPowerOnMinimumDelay gets a reference to the given int32 and assigns it to the PowerOnMinimumDelay field.
func (o *AbstractRegisterCloudSpaceRequest) SetPowerOnMinimumDelay(v int32) {
	o.PowerOnMinimumDelay = &v
}

// GetPowerOnMaximumDelay returns the PowerOnMaximumDelay field value if set, zero value otherwise.
func (o *AbstractRegisterCloudSpaceRequest) GetPowerOnMaximumDelay() int32 {
	if o == nil || o.PowerOnMaximumDelay == nil {
		var ret int32
		return ret
	}
	return *o.PowerOnMaximumDelay
}

// GetPowerOnMaximumDelayOk returns a tuple with the PowerOnMaximumDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractRegisterCloudSpaceRequest) GetPowerOnMaximumDelayOk() (*int32, bool) {
	if o == nil || o.PowerOnMaximumDelay == nil {
		return nil, false
	}
	return o.PowerOnMaximumDelay, true
}

// HasPowerOnMaximumDelay returns a boolean if a field has been set.
func (o *AbstractRegisterCloudSpaceRequest) HasPowerOnMaximumDelay() bool {
	if o != nil && o.PowerOnMaximumDelay != nil {
		return true
	}

	return false
}

// SetPowerOnMaximumDelay gets a reference to the given int32 and assigns it to the PowerOnMaximumDelay field.
func (o *AbstractRegisterCloudSpaceRequest) SetPowerOnMaximumDelay(v int32) {
	o.PowerOnMaximumDelay = &v
}

// GetPassword returns the Password field value
func (o *AbstractRegisterCloudSpaceRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *AbstractRegisterCloudSpaceRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *AbstractRegisterCloudSpaceRequest) SetPassword(v string) {
	o.Password = v
}

// GetPowerOnInitialDelayBase returns the PowerOnInitialDelayBase field value if set, zero value otherwise.
func (o *AbstractRegisterCloudSpaceRequest) GetPowerOnInitialDelayBase() int32 {
	if o == nil || o.PowerOnInitialDelayBase == nil {
		var ret int32
		return ret
	}
	return *o.PowerOnInitialDelayBase
}

// GetPowerOnInitialDelayBaseOk returns a tuple with the PowerOnInitialDelayBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractRegisterCloudSpaceRequest) GetPowerOnInitialDelayBaseOk() (*int32, bool) {
	if o == nil || o.PowerOnInitialDelayBase == nil {
		return nil, false
	}
	return o.PowerOnInitialDelayBase, true
}

// HasPowerOnInitialDelayBase returns a boolean if a field has been set.
func (o *AbstractRegisterCloudSpaceRequest) HasPowerOnInitialDelayBase() bool {
	if o != nil && o.PowerOnInitialDelayBase != nil {
		return true
	}

	return false
}

// SetPowerOnInitialDelayBase gets a reference to the given int32 and assigns it to the PowerOnInitialDelayBase field.
func (o *AbstractRegisterCloudSpaceRequest) SetPowerOnInitialDelayBase(v int32) {
	o.PowerOnInitialDelayBase = &v
}

// GetPrimaryNetworkName returns the PrimaryNetworkName field value
func (o *AbstractRegisterCloudSpaceRequest) GetPrimaryNetworkName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrimaryNetworkName
}

// GetPrimaryNetworkNameOk returns a tuple with the PrimaryNetworkName field value
// and a boolean to check if the value has been set.
func (o *AbstractRegisterCloudSpaceRequest) GetPrimaryNetworkNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrimaryNetworkName, true
}

// SetPrimaryNetworkName sets field value
func (o *AbstractRegisterCloudSpaceRequest) SetPrimaryNetworkName(v string) {
	o.PrimaryNetworkName = v
}

// GetRemoteAccessConfig returns the RemoteAccessConfig field value if set, zero value otherwise.
func (o *AbstractRegisterCloudSpaceRequest) GetRemoteAccessConfig() RemoteAccessConfig {
	if o == nil || o.RemoteAccessConfig == nil {
		var ret RemoteAccessConfig
		return ret
	}
	return *o.RemoteAccessConfig
}

// GetRemoteAccessConfigOk returns a tuple with the RemoteAccessConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractRegisterCloudSpaceRequest) GetRemoteAccessConfigOk() (*RemoteAccessConfig, bool) {
	if o == nil || o.RemoteAccessConfig == nil {
		return nil, false
	}
	return o.RemoteAccessConfig, true
}

// HasRemoteAccessConfig returns a boolean if a field has been set.
func (o *AbstractRegisterCloudSpaceRequest) HasRemoteAccessConfig() bool {
	if o != nil && o.RemoteAccessConfig != nil {
		return true
	}

	return false
}

// SetRemoteAccessConfig gets a reference to the given RemoteAccessConfig and assigns it to the RemoteAccessConfig field.
func (o *AbstractRegisterCloudSpaceRequest) SetRemoteAccessConfig(v RemoteAccessConfig) {
	o.RemoteAccessConfig = &v
}

// GetUsername returns the Username field value
func (o *AbstractRegisterCloudSpaceRequest) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *AbstractRegisterCloudSpaceRequest) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *AbstractRegisterCloudSpaceRequest) SetUsername(v string) {
	o.Username = v
}

func (o AbstractRegisterCloudSpaceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["virtualizationRealmType"] = o.VirtualizationRealmType
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.AccessPoint != nil {
		toSerialize["accessPoint"] = o.AccessPoint
	}
	if o.ActiveAfterRegistration != nil {
		toSerialize["activeAfterRegistration"] = o.ActiveAfterRegistration
	}
	if o.AdditionalNetworkNames != nil {
		toSerialize["additionalNetworkNames"] = o.AdditionalNetworkNames
	}
	if true {
		toSerialize["cons3rtNetworkName"] = o.Cons3rtNetworkName
	}
	if o.MaximumNumCpus != nil {
		toSerialize["maximumNumCpus"] = o.MaximumNumCpus
	}
	if o.MaximumNumGpus != nil {
		toSerialize["maximumNumGpus"] = o.MaximumNumGpus
	}
	if o.MaximumRamInMegabytes != nil {
		toSerialize["maximumRamInMegabytes"] = o.MaximumRamInMegabytes
	}
	if o.MaximumStorageInMegabytes != nil {
		toSerialize["maximumStorageInMegabytes"] = o.MaximumStorageInMegabytes
	}
	if o.MaximumVirtualMachines != nil {
		toSerialize["maximumVirtualMachines"] = o.MaximumVirtualMachines
	}
	if o.PowerOnMinimumDelay != nil {
		toSerialize["powerOnMinimumDelay"] = o.PowerOnMinimumDelay
	}
	if o.PowerOnMaximumDelay != nil {
		toSerialize["powerOnMaximumDelay"] = o.PowerOnMaximumDelay
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if o.PowerOnInitialDelayBase != nil {
		toSerialize["powerOnInitialDelayBase"] = o.PowerOnInitialDelayBase
	}
	if true {
		toSerialize["primaryNetworkName"] = o.PrimaryNetworkName
	}
	if o.RemoteAccessConfig != nil {
		toSerialize["remoteAccessConfig"] = o.RemoteAccessConfig
	}
	if true {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableAbstractRegisterCloudSpaceRequest struct {
	value *AbstractRegisterCloudSpaceRequest
	isSet bool
}

func (v NullableAbstractRegisterCloudSpaceRequest) Get() *AbstractRegisterCloudSpaceRequest {
	return v.value
}

func (v *NullableAbstractRegisterCloudSpaceRequest) Set(val *AbstractRegisterCloudSpaceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAbstractRegisterCloudSpaceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAbstractRegisterCloudSpaceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAbstractRegisterCloudSpaceRequest(val *AbstractRegisterCloudSpaceRequest) *NullableAbstractRegisterCloudSpaceRequest {
	return &NullableAbstractRegisterCloudSpaceRequest{value: val, isSet: true}
}

func (v NullableAbstractRegisterCloudSpaceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAbstractRegisterCloudSpaceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
