/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// InputVirtualizationRealmClient struct for InputVirtualizationRealmClient
type InputVirtualizationRealmClient struct {
	Username string `json:"username"`
	Password string `json:"password"`
	Subtype  string `json:"subtype"`
}

// NewInputVirtualizationRealmClient instantiates a new InputVirtualizationRealmClient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputVirtualizationRealmClient(username string, password string, subtype string) *InputVirtualizationRealmClient {
	this := InputVirtualizationRealmClient{}
	this.Username = username
	this.Password = password
	this.Subtype = subtype
	return &this
}

// NewInputVirtualizationRealmClientWithDefaults instantiates a new InputVirtualizationRealmClient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputVirtualizationRealmClientWithDefaults() *InputVirtualizationRealmClient {
	this := InputVirtualizationRealmClient{}
	return &this
}

// GetUsername returns the Username field value
func (o *InputVirtualizationRealmClient) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *InputVirtualizationRealmClient) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *InputVirtualizationRealmClient) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *InputVirtualizationRealmClient) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *InputVirtualizationRealmClient) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *InputVirtualizationRealmClient) SetPassword(v string) {
	o.Password = v
}

// GetSubtype returns the Subtype field value
func (o *InputVirtualizationRealmClient) GetSubtype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subtype
}

// GetSubtypeOk returns a tuple with the Subtype field value
// and a boolean to check if the value has been set.
func (o *InputVirtualizationRealmClient) GetSubtypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subtype, true
}

// SetSubtype sets field value
func (o *InputVirtualizationRealmClient) SetSubtype(v string) {
	o.Subtype = v
}

func (o InputVirtualizationRealmClient) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if true {
		toSerialize["subtype"] = o.Subtype
	}
	return json.Marshal(toSerialize)
}

type NullableInputVirtualizationRealmClient struct {
	value *InputVirtualizationRealmClient
	isSet bool
}

func (v NullableInputVirtualizationRealmClient) Get() *InputVirtualizationRealmClient {
	return v.value
}

func (v *NullableInputVirtualizationRealmClient) Set(val *InputVirtualizationRealmClient) {
	v.value = val
	v.isSet = true
}

func (v NullableInputVirtualizationRealmClient) IsSet() bool {
	return v.isSet
}

func (v *NullableInputVirtualizationRealmClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputVirtualizationRealmClient(val *InputVirtualizationRealmClient) *NullableInputVirtualizationRealmClient {
	return &NullableInputVirtualizationRealmClient{value: val, isSet: true}
}

func (v NullableInputVirtualizationRealmClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputVirtualizationRealmClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
