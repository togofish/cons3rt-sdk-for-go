/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// TargetInstanceTypes struct for TargetInstanceTypes
type TargetInstanceTypes struct {
	BestMatches *[]InstanceType       `json:"bestMatches,omitempty"`
	Matches     *[]InstanceTypeFamily `json:"matches,omitempty"`
}

// NewTargetInstanceTypes instantiates a new TargetInstanceTypes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetInstanceTypes() *TargetInstanceTypes {
	this := TargetInstanceTypes{}
	return &this
}

// NewTargetInstanceTypesWithDefaults instantiates a new TargetInstanceTypes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetInstanceTypesWithDefaults() *TargetInstanceTypes {
	this := TargetInstanceTypes{}
	return &this
}

// GetBestMatches returns the BestMatches field value if set, zero value otherwise.
func (o *TargetInstanceTypes) GetBestMatches() []InstanceType {
	if o == nil || o.BestMatches == nil {
		var ret []InstanceType
		return ret
	}
	return *o.BestMatches
}

// GetBestMatchesOk returns a tuple with the BestMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetInstanceTypes) GetBestMatchesOk() (*[]InstanceType, bool) {
	if o == nil || o.BestMatches == nil {
		return nil, false
	}
	return o.BestMatches, true
}

// HasBestMatches returns a boolean if a field has been set.
func (o *TargetInstanceTypes) HasBestMatches() bool {
	if o != nil && o.BestMatches != nil {
		return true
	}

	return false
}

// SetBestMatches gets a reference to the given []InstanceType and assigns it to the BestMatches field.
func (o *TargetInstanceTypes) SetBestMatches(v []InstanceType) {
	o.BestMatches = &v
}

// GetMatches returns the Matches field value if set, zero value otherwise.
func (o *TargetInstanceTypes) GetMatches() []InstanceTypeFamily {
	if o == nil || o.Matches == nil {
		var ret []InstanceTypeFamily
		return ret
	}
	return *o.Matches
}

// GetMatchesOk returns a tuple with the Matches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetInstanceTypes) GetMatchesOk() (*[]InstanceTypeFamily, bool) {
	if o == nil || o.Matches == nil {
		return nil, false
	}
	return o.Matches, true
}

// HasMatches returns a boolean if a field has been set.
func (o *TargetInstanceTypes) HasMatches() bool {
	if o != nil && o.Matches != nil {
		return true
	}

	return false
}

// SetMatches gets a reference to the given []InstanceTypeFamily and assigns it to the Matches field.
func (o *TargetInstanceTypes) SetMatches(v []InstanceTypeFamily) {
	o.Matches = &v
}

func (o TargetInstanceTypes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BestMatches != nil {
		toSerialize["bestMatches"] = o.BestMatches
	}
	if o.Matches != nil {
		toSerialize["matches"] = o.Matches
	}
	return json.Marshal(toSerialize)
}

type NullableTargetInstanceTypes struct {
	value *TargetInstanceTypes
	isSet bool
}

func (v NullableTargetInstanceTypes) Get() *TargetInstanceTypes {
	return v.value
}

func (v *NullableTargetInstanceTypes) Set(val *TargetInstanceTypes) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetInstanceTypes) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetInstanceTypes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetInstanceTypes(val *TargetInstanceTypes) *NullableTargetInstanceTypes {
	return &NullableTargetInstanceTypes{value: val, isSet: true}
}

func (v NullableTargetInstanceTypes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetInstanceTypes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
