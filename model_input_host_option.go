/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InputHostOption struct for InputHostOption
type InputHostOption struct {
	SystemRole        string                   `json:"systemRole"`
	Cpus              *int32                   `json:"cpus,omitempty"`
	Ram               *int32                   `json:"ram,omitempty"`
	AdditionalDisks   *[]InputDisk             `json:"additionalDisks,omitempty"`
	NetworkInterfaces *[]InputNetworkInterface `json:"networkInterfaces,omitempty"`
}

// NewInputHostOption instantiates a new InputHostOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputHostOption(systemRole string) *InputHostOption {
	this := InputHostOption{}
	this.SystemRole = systemRole
	return &this
}

// NewInputHostOptionWithDefaults instantiates a new InputHostOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputHostOptionWithDefaults() *InputHostOption {
	this := InputHostOption{}
	return &this
}

// GetSystemRole returns the SystemRole field value
func (o *InputHostOption) GetSystemRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SystemRole
}

// GetSystemRoleOk returns a tuple with the SystemRole field value
// and a boolean to check if the value has been set.
func (o *InputHostOption) GetSystemRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemRole, true
}

// SetSystemRole sets field value
func (o *InputHostOption) SetSystemRole(v string) {
	o.SystemRole = v
}

// GetCpus returns the Cpus field value if set, zero value otherwise.
func (o *InputHostOption) GetCpus() int32 {
	if o == nil || o.Cpus == nil {
		var ret int32
		return ret
	}
	return *o.Cpus
}

// GetCpusOk returns a tuple with the Cpus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputHostOption) GetCpusOk() (*int32, bool) {
	if o == nil || o.Cpus == nil {
		return nil, false
	}
	return o.Cpus, true
}

// HasCpus returns a boolean if a field has been set.
func (o *InputHostOption) HasCpus() bool {
	if o != nil && o.Cpus != nil {
		return true
	}

	return false
}

// SetCpus gets a reference to the given int32 and assigns it to the Cpus field.
func (o *InputHostOption) SetCpus(v int32) {
	o.Cpus = &v
}

// GetRam returns the Ram field value if set, zero value otherwise.
func (o *InputHostOption) GetRam() int32 {
	if o == nil || o.Ram == nil {
		var ret int32
		return ret
	}
	return *o.Ram
}

// GetRamOk returns a tuple with the Ram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputHostOption) GetRamOk() (*int32, bool) {
	if o == nil || o.Ram == nil {
		return nil, false
	}
	return o.Ram, true
}

// HasRam returns a boolean if a field has been set.
func (o *InputHostOption) HasRam() bool {
	if o != nil && o.Ram != nil {
		return true
	}

	return false
}

// SetRam gets a reference to the given int32 and assigns it to the Ram field.
func (o *InputHostOption) SetRam(v int32) {
	o.Ram = &v
}

// GetAdditionalDisks returns the AdditionalDisks field value if set, zero value otherwise.
func (o *InputHostOption) GetAdditionalDisks() []InputDisk {
	if o == nil || o.AdditionalDisks == nil {
		var ret []InputDisk
		return ret
	}
	return *o.AdditionalDisks
}

// GetAdditionalDisksOk returns a tuple with the AdditionalDisks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputHostOption) GetAdditionalDisksOk() (*[]InputDisk, bool) {
	if o == nil || o.AdditionalDisks == nil {
		return nil, false
	}
	return o.AdditionalDisks, true
}

// HasAdditionalDisks returns a boolean if a field has been set.
func (o *InputHostOption) HasAdditionalDisks() bool {
	if o != nil && o.AdditionalDisks != nil {
		return true
	}

	return false
}

// SetAdditionalDisks gets a reference to the given []InputDisk and assigns it to the AdditionalDisks field.
func (o *InputHostOption) SetAdditionalDisks(v []InputDisk) {
	o.AdditionalDisks = &v
}

// GetNetworkInterfaces returns the NetworkInterfaces field value if set, zero value otherwise.
func (o *InputHostOption) GetNetworkInterfaces() []InputNetworkInterface {
	if o == nil || o.NetworkInterfaces == nil {
		var ret []InputNetworkInterface
		return ret
	}
	return *o.NetworkInterfaces
}

// GetNetworkInterfacesOk returns a tuple with the NetworkInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputHostOption) GetNetworkInterfacesOk() (*[]InputNetworkInterface, bool) {
	if o == nil || o.NetworkInterfaces == nil {
		return nil, false
	}
	return o.NetworkInterfaces, true
}

// HasNetworkInterfaces returns a boolean if a field has been set.
func (o *InputHostOption) HasNetworkInterfaces() bool {
	if o != nil && o.NetworkInterfaces != nil {
		return true
	}

	return false
}

// SetNetworkInterfaces gets a reference to the given []InputNetworkInterface and assigns it to the NetworkInterfaces field.
func (o *InputHostOption) SetNetworkInterfaces(v []InputNetworkInterface) {
	o.NetworkInterfaces = &v
}

func (o InputHostOption) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["systemRole"] = o.SystemRole
	}
	if o.Cpus != nil {
		toSerialize["cpus"] = o.Cpus
	}
	if o.Ram != nil {
		toSerialize["ram"] = o.Ram
	}
	if o.AdditionalDisks != nil {
		toSerialize["additionalDisks"] = o.AdditionalDisks
	}
	if o.NetworkInterfaces != nil {
		toSerialize["networkInterfaces"] = o.NetworkInterfaces
	}
	return json.Marshal(toSerialize)
}

type NullableInputHostOption struct {
	value *InputHostOption
	isSet bool
}

func (v NullableInputHostOption) Get() *InputHostOption {
	return v.value
}

func (v *NullableInputHostOption) Set(val *InputHostOption) {
	v.value = val
	v.isSet = true
}

func (v NullableInputHostOption) IsSet() bool {
	return v.isSet
}

func (v *NullableInputHostOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputHostOption(val *InputHostOption) *NullableInputHostOption {
	return &NullableInputHostOption{value: val, isSet: true}
}

func (v NullableInputHostOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputHostOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
