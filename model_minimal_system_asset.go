/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// MinimalSystemAsset struct for MinimalSystemAsset
type MinimalSystemAsset struct {
	SystemAssetVersion *string `json:"systemAssetVersion,omitempty"`
	Status             *string `json:"status,omitempty"`
	AssetVersion       *string `json:"assetVersion,omitempty"`
	Id                 *int32  `json:"id,omitempty"`
	Type               string  `json:"type"`
	SoftwareVersion    *string `json:"softwareVersion,omitempty"`
}

// NewMinimalSystemAsset instantiates a new MinimalSystemAsset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMinimalSystemAsset(type_ string) *MinimalSystemAsset {
	this := MinimalSystemAsset{}
	this.Type = type_
	return &this
}

// NewMinimalSystemAssetWithDefaults instantiates a new MinimalSystemAsset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMinimalSystemAssetWithDefaults() *MinimalSystemAsset {
	this := MinimalSystemAsset{}
	return &this
}

// GetSystemAssetVersion returns the SystemAssetVersion field value if set, zero value otherwise.
func (o *MinimalSystemAsset) GetSystemAssetVersion() string {
	if o == nil || o.SystemAssetVersion == nil {
		var ret string
		return ret
	}
	return *o.SystemAssetVersion
}

// GetSystemAssetVersionOk returns a tuple with the SystemAssetVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalSystemAsset) GetSystemAssetVersionOk() (*string, bool) {
	if o == nil || o.SystemAssetVersion == nil {
		return nil, false
	}
	return o.SystemAssetVersion, true
}

// HasSystemAssetVersion returns a boolean if a field has been set.
func (o *MinimalSystemAsset) HasSystemAssetVersion() bool {
	if o != nil && o.SystemAssetVersion != nil {
		return true
	}

	return false
}

// SetSystemAssetVersion gets a reference to the given string and assigns it to the SystemAssetVersion field.
func (o *MinimalSystemAsset) SetSystemAssetVersion(v string) {
	o.SystemAssetVersion = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *MinimalSystemAsset) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalSystemAsset) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *MinimalSystemAsset) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *MinimalSystemAsset) SetStatus(v string) {
	o.Status = &v
}

// GetAssetVersion returns the AssetVersion field value if set, zero value otherwise.
func (o *MinimalSystemAsset) GetAssetVersion() string {
	if o == nil || o.AssetVersion == nil {
		var ret string
		return ret
	}
	return *o.AssetVersion
}

// GetAssetVersionOk returns a tuple with the AssetVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalSystemAsset) GetAssetVersionOk() (*string, bool) {
	if o == nil || o.AssetVersion == nil {
		return nil, false
	}
	return o.AssetVersion, true
}

// HasAssetVersion returns a boolean if a field has been set.
func (o *MinimalSystemAsset) HasAssetVersion() bool {
	if o != nil && o.AssetVersion != nil {
		return true
	}

	return false
}

// SetAssetVersion gets a reference to the given string and assigns it to the AssetVersion field.
func (o *MinimalSystemAsset) SetAssetVersion(v string) {
	o.AssetVersion = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MinimalSystemAsset) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalSystemAsset) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MinimalSystemAsset) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MinimalSystemAsset) SetId(v int32) {
	o.Id = &v
}

// GetType returns the Type field value
func (o *MinimalSystemAsset) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *MinimalSystemAsset) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *MinimalSystemAsset) SetType(v string) {
	o.Type = v
}

// GetSoftwareVersion returns the SoftwareVersion field value if set, zero value otherwise.
func (o *MinimalSystemAsset) GetSoftwareVersion() string {
	if o == nil || o.SoftwareVersion == nil {
		var ret string
		return ret
	}
	return *o.SoftwareVersion
}

// GetSoftwareVersionOk returns a tuple with the SoftwareVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalSystemAsset) GetSoftwareVersionOk() (*string, bool) {
	if o == nil || o.SoftwareVersion == nil {
		return nil, false
	}
	return o.SoftwareVersion, true
}

// HasSoftwareVersion returns a boolean if a field has been set.
func (o *MinimalSystemAsset) HasSoftwareVersion() bool {
	if o != nil && o.SoftwareVersion != nil {
		return true
	}

	return false
}

// SetSoftwareVersion gets a reference to the given string and assigns it to the SoftwareVersion field.
func (o *MinimalSystemAsset) SetSoftwareVersion(v string) {
	o.SoftwareVersion = &v
}

func (o MinimalSystemAsset) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SystemAssetVersion != nil {
		toSerialize["systemAssetVersion"] = o.SystemAssetVersion
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.AssetVersion != nil {
		toSerialize["assetVersion"] = o.AssetVersion
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.SoftwareVersion != nil {
		toSerialize["softwareVersion"] = o.SoftwareVersion
	}
	return json.Marshal(toSerialize)
}

type NullableMinimalSystemAsset struct {
	value *MinimalSystemAsset
	isSet bool
}

func (v NullableMinimalSystemAsset) Get() *MinimalSystemAsset {
	return v.value
}

func (v *NullableMinimalSystemAsset) Set(val *MinimalSystemAsset) {
	v.value = val
	v.isSet = true
}

func (v NullableMinimalSystemAsset) IsSet() bool {
	return v.isSet
}

func (v *NullableMinimalSystemAsset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMinimalSystemAsset(val *MinimalSystemAsset) *NullableMinimalSystemAsset {
	return &NullableMinimalSystemAsset{value: val, isSet: true}
}

func (v NullableMinimalSystemAsset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMinimalSystemAsset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
