/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// FullPhysicalHost struct for FullPhysicalHost
type FullPhysicalHost struct {
	Components      *[]MinimalAbstractComponent `json:"components,omitempty"`
	PhysicalMachine *GeneralPhysicalMachine     `json:"physicalMachine,omitempty"`
	Subtype         string
}

// NewFullPhysicalHost instantiates a new FullPhysicalHost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFullPhysicalHost(subtype string) *FullPhysicalHost {
	this := FullPhysicalHost{}
	this.Subtype = subtype
	return &this
}

// NewFullPhysicalHostWithDefaults instantiates a new FullPhysicalHost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFullPhysicalHostWithDefaults() *FullPhysicalHost {
	this := FullPhysicalHost{}
	return &this
}

// GetComponents returns the Components field value if set, zero value otherwise.
func (o *FullPhysicalHost) GetComponents() []MinimalAbstractComponent {
	if o == nil || o.Components == nil {
		var ret []MinimalAbstractComponent
		return ret
	}
	return *o.Components
}

// GetComponentsOk returns a tuple with the Components field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullPhysicalHost) GetComponentsOk() (*[]MinimalAbstractComponent, bool) {
	if o == nil || o.Components == nil {
		return nil, false
	}
	return o.Components, true
}

// HasComponents returns a boolean if a field has been set.
func (o *FullPhysicalHost) HasComponents() bool {
	if o != nil && o.Components != nil {
		return true
	}

	return false
}

// SetComponents gets a reference to the given []MinimalAbstractComponent and assigns it to the Components field.
func (o *FullPhysicalHost) SetComponents(v []MinimalAbstractComponent) {
	o.Components = &v
}

// GetPhysicalMachine returns the PhysicalMachine field value if set, zero value otherwise.
func (o *FullPhysicalHost) GetPhysicalMachine() GeneralPhysicalMachine {
	if o == nil || o.PhysicalMachine == nil {
		var ret GeneralPhysicalMachine
		return ret
	}
	return *o.PhysicalMachine
}

// GetPhysicalMachineOk returns a tuple with the PhysicalMachine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullPhysicalHost) GetPhysicalMachineOk() (*GeneralPhysicalMachine, bool) {
	if o == nil || o.PhysicalMachine == nil {
		return nil, false
	}
	return o.PhysicalMachine, true
}

// HasPhysicalMachine returns a boolean if a field has been set.
func (o *FullPhysicalHost) HasPhysicalMachine() bool {
	if o != nil && o.PhysicalMachine != nil {
		return true
	}

	return false
}

// SetPhysicalMachine gets a reference to the given GeneralPhysicalMachine and assigns it to the PhysicalMachine field.
func (o *FullPhysicalHost) SetPhysicalMachine(v GeneralPhysicalMachine) {
	o.PhysicalMachine = &v
}

func (o FullPhysicalHost) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Components != nil {
		toSerialize["components"] = o.Components
	}
	if o.PhysicalMachine != nil {
		toSerialize["physicalMachine"] = o.PhysicalMachine
	}
	return json.Marshal(toSerialize)
}

type NullableFullPhysicalHost struct {
	value *FullPhysicalHost
	isSet bool
}

func (v NullableFullPhysicalHost) Get() *FullPhysicalHost {
	return v.value
}

func (v *NullableFullPhysicalHost) Set(val *FullPhysicalHost) {
	v.value = val
	v.isSet = true
}

func (v NullableFullPhysicalHost) IsSet() bool {
	return v.isSet
}

func (v *NullableFullPhysicalHost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFullPhysicalHost(val *FullPhysicalHost) *NullableFullPhysicalHost {
	return &NullableFullPhysicalHost{value: val, isSet: true}
}

func (v NullableFullPhysicalHost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFullPhysicalHost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
