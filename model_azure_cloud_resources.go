/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// AzureCloudResources struct for AzureCloudResources
type AzureCloudResources struct {
	Images  *[]ImageReferenceDTO `json:"images,omitempty"`
	Subtype string
}

// NewAzureCloudResources instantiates a new AzureCloudResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureCloudResources(subtype string) *AzureCloudResources {
	this := AzureCloudResources{}
	this.Subtype = subtype
	return &this
}

// NewAzureCloudResourcesWithDefaults instantiates a new AzureCloudResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureCloudResourcesWithDefaults() *AzureCloudResources {
	this := AzureCloudResources{}
	return &this
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *AzureCloudResources) GetImages() []ImageReferenceDTO {
	if o == nil || o.Images == nil {
		var ret []ImageReferenceDTO
		return ret
	}
	return *o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureCloudResources) GetImagesOk() (*[]ImageReferenceDTO, bool) {
	if o == nil || o.Images == nil {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *AzureCloudResources) HasImages() bool {
	if o != nil && o.Images != nil {
		return true
	}

	return false
}

// SetImages gets a reference to the given []ImageReferenceDTO and assigns it to the Images field.
func (o *AzureCloudResources) SetImages(v []ImageReferenceDTO) {
	o.Images = &v
}

func (o AzureCloudResources) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	return json.Marshal(toSerialize)
}

type NullableAzureCloudResources struct {
	value *AzureCloudResources
	isSet bool
}

func (v NullableAzureCloudResources) Get() *AzureCloudResources {
	return v.value
}

func (v *NullableAzureCloudResources) Set(val *AzureCloudResources) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureCloudResources) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureCloudResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureCloudResources(val *AzureCloudResources) *NullableAzureCloudResources {
	return &NullableAzureCloudResources{value: val, isSet: true}
}

func (v NullableAzureCloudResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureCloudResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
