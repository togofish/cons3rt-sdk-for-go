/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InputDeploymentRunOptionsForBindings struct for InputDeploymentRunOptionsForBindings
type InputDeploymentRunOptionsForBindings struct {
	VirtualizationRealmId *string            `json:"virtualizationRealmId,omitempty"`
	HostOptions           *[]InputHostOption `json:"hostOptions,omitempty"`
}

// NewInputDeploymentRunOptionsForBindings instantiates a new InputDeploymentRunOptionsForBindings object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputDeploymentRunOptionsForBindings() *InputDeploymentRunOptionsForBindings {
	this := InputDeploymentRunOptionsForBindings{}
	return &this
}

// NewInputDeploymentRunOptionsForBindingsWithDefaults instantiates a new InputDeploymentRunOptionsForBindings object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputDeploymentRunOptionsForBindingsWithDefaults() *InputDeploymentRunOptionsForBindings {
	this := InputDeploymentRunOptionsForBindings{}
	return &this
}

// GetVirtualizationRealmId returns the VirtualizationRealmId field value if set, zero value otherwise.
func (o *InputDeploymentRunOptionsForBindings) GetVirtualizationRealmId() string {
	if o == nil || o.VirtualizationRealmId == nil {
		var ret string
		return ret
	}
	return *o.VirtualizationRealmId
}

// GetVirtualizationRealmIdOk returns a tuple with the VirtualizationRealmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptionsForBindings) GetVirtualizationRealmIdOk() (*string, bool) {
	if o == nil || o.VirtualizationRealmId == nil {
		return nil, false
	}
	return o.VirtualizationRealmId, true
}

// HasVirtualizationRealmId returns a boolean if a field has been set.
func (o *InputDeploymentRunOptionsForBindings) HasVirtualizationRealmId() bool {
	if o != nil && o.VirtualizationRealmId != nil {
		return true
	}

	return false
}

// SetVirtualizationRealmId gets a reference to the given string and assigns it to the VirtualizationRealmId field.
func (o *InputDeploymentRunOptionsForBindings) SetVirtualizationRealmId(v string) {
	o.VirtualizationRealmId = &v
}

// GetHostOptions returns the HostOptions field value if set, zero value otherwise.
func (o *InputDeploymentRunOptionsForBindings) GetHostOptions() []InputHostOption {
	if o == nil || o.HostOptions == nil {
		var ret []InputHostOption
		return ret
	}
	return *o.HostOptions
}

// GetHostOptionsOk returns a tuple with the HostOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptionsForBindings) GetHostOptionsOk() (*[]InputHostOption, bool) {
	if o == nil || o.HostOptions == nil {
		return nil, false
	}
	return o.HostOptions, true
}

// HasHostOptions returns a boolean if a field has been set.
func (o *InputDeploymentRunOptionsForBindings) HasHostOptions() bool {
	if o != nil && o.HostOptions != nil {
		return true
	}

	return false
}

// SetHostOptions gets a reference to the given []InputHostOption and assigns it to the HostOptions field.
func (o *InputDeploymentRunOptionsForBindings) SetHostOptions(v []InputHostOption) {
	o.HostOptions = &v
}

func (o InputDeploymentRunOptionsForBindings) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VirtualizationRealmId != nil {
		toSerialize["virtualizationRealmId"] = o.VirtualizationRealmId
	}
	if o.HostOptions != nil {
		toSerialize["hostOptions"] = o.HostOptions
	}
	return json.Marshal(toSerialize)
}

type NullableInputDeploymentRunOptionsForBindings struct {
	value *InputDeploymentRunOptionsForBindings
	isSet bool
}

func (v NullableInputDeploymentRunOptionsForBindings) Get() *InputDeploymentRunOptionsForBindings {
	return v.value
}

func (v *NullableInputDeploymentRunOptionsForBindings) Set(val *InputDeploymentRunOptionsForBindings) {
	v.value = val
	v.isSet = true
}

func (v NullableInputDeploymentRunOptionsForBindings) IsSet() bool {
	return v.isSet
}

func (v *NullableInputDeploymentRunOptionsForBindings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputDeploymentRunOptionsForBindings(val *InputDeploymentRunOptionsForBindings) *NullableInputDeploymentRunOptionsForBindings {
	return &NullableInputDeploymentRunOptionsForBindings{value: val, isSet: true}
}

func (v NullableInputDeploymentRunOptionsForBindings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputDeploymentRunOptionsForBindings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
