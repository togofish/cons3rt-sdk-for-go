/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// AbstractInstallation struct for AbstractInstallation
type AbstractInstallation struct {
	AssetId                 *int32  `json:"assetId,omitempty"`
	AssetName               *string `json:"assetName,omitempty"`
	AverageInstallationTime *int64  `json:"averageInstallationTime,omitempty"`
	EndDate                 *int32  `json:"endDate,omitempty"`
	Error                   *string `json:"error,omitempty"`
	Id                      *int32  `json:"id,omitempty"`
	LoadOrder               *int32  `json:"loadOrder,omitempty"`
	StartDate               *int32  `json:"startDate,omitempty"`
	Status                  *string `json:"status,omitempty"`
	Subtype                 string  `json:"subtype"`
}

// NewAbstractInstallation instantiates a new AbstractInstallation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAbstractInstallation(subtype string) *AbstractInstallation {
	this := AbstractInstallation{}
	this.Subtype = subtype
	return &this
}

// NewAbstractInstallationWithDefaults instantiates a new AbstractInstallation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAbstractInstallationWithDefaults() *AbstractInstallation {
	this := AbstractInstallation{}
	return &this
}

// GetAssetId returns the AssetId field value if set, zero value otherwise.
func (o *AbstractInstallation) GetAssetId() int32 {
	if o == nil || o.AssetId == nil {
		var ret int32
		return ret
	}
	return *o.AssetId
}

// GetAssetIdOk returns a tuple with the AssetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractInstallation) GetAssetIdOk() (*int32, bool) {
	if o == nil || o.AssetId == nil {
		return nil, false
	}
	return o.AssetId, true
}

// HasAssetId returns a boolean if a field has been set.
func (o *AbstractInstallation) HasAssetId() bool {
	if o != nil && o.AssetId != nil {
		return true
	}

	return false
}

// SetAssetId gets a reference to the given int32 and assigns it to the AssetId field.
func (o *AbstractInstallation) SetAssetId(v int32) {
	o.AssetId = &v
}

// GetAssetName returns the AssetName field value if set, zero value otherwise.
func (o *AbstractInstallation) GetAssetName() string {
	if o == nil || o.AssetName == nil {
		var ret string
		return ret
	}
	return *o.AssetName
}

// GetAssetNameOk returns a tuple with the AssetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractInstallation) GetAssetNameOk() (*string, bool) {
	if o == nil || o.AssetName == nil {
		return nil, false
	}
	return o.AssetName, true
}

// HasAssetName returns a boolean if a field has been set.
func (o *AbstractInstallation) HasAssetName() bool {
	if o != nil && o.AssetName != nil {
		return true
	}

	return false
}

// SetAssetName gets a reference to the given string and assigns it to the AssetName field.
func (o *AbstractInstallation) SetAssetName(v string) {
	o.AssetName = &v
}

// GetAverageInstallationTime returns the AverageInstallationTime field value if set, zero value otherwise.
func (o *AbstractInstallation) GetAverageInstallationTime() int64 {
	if o == nil || o.AverageInstallationTime == nil {
		var ret int64
		return ret
	}
	return *o.AverageInstallationTime
}

// GetAverageInstallationTimeOk returns a tuple with the AverageInstallationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractInstallation) GetAverageInstallationTimeOk() (*int64, bool) {
	if o == nil || o.AverageInstallationTime == nil {
		return nil, false
	}
	return o.AverageInstallationTime, true
}

// HasAverageInstallationTime returns a boolean if a field has been set.
func (o *AbstractInstallation) HasAverageInstallationTime() bool {
	if o != nil && o.AverageInstallationTime != nil {
		return true
	}

	return false
}

// SetAverageInstallationTime gets a reference to the given int64 and assigns it to the AverageInstallationTime field.
func (o *AbstractInstallation) SetAverageInstallationTime(v int64) {
	o.AverageInstallationTime = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *AbstractInstallation) GetEndDate() int32 {
	if o == nil || o.EndDate == nil {
		var ret int32
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractInstallation) GetEndDateOk() (*int32, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *AbstractInstallation) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given int32 and assigns it to the EndDate field.
func (o *AbstractInstallation) SetEndDate(v int32) {
	o.EndDate = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *AbstractInstallation) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractInstallation) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *AbstractInstallation) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *AbstractInstallation) SetError(v string) {
	o.Error = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AbstractInstallation) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractInstallation) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AbstractInstallation) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *AbstractInstallation) SetId(v int32) {
	o.Id = &v
}

// GetLoadOrder returns the LoadOrder field value if set, zero value otherwise.
func (o *AbstractInstallation) GetLoadOrder() int32 {
	if o == nil || o.LoadOrder == nil {
		var ret int32
		return ret
	}
	return *o.LoadOrder
}

// GetLoadOrderOk returns a tuple with the LoadOrder field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractInstallation) GetLoadOrderOk() (*int32, bool) {
	if o == nil || o.LoadOrder == nil {
		return nil, false
	}
	return o.LoadOrder, true
}

// HasLoadOrder returns a boolean if a field has been set.
func (o *AbstractInstallation) HasLoadOrder() bool {
	if o != nil && o.LoadOrder != nil {
		return true
	}

	return false
}

// SetLoadOrder gets a reference to the given int32 and assigns it to the LoadOrder field.
func (o *AbstractInstallation) SetLoadOrder(v int32) {
	o.LoadOrder = &v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *AbstractInstallation) GetStartDate() int32 {
	if o == nil || o.StartDate == nil {
		var ret int32
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractInstallation) GetStartDateOk() (*int32, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *AbstractInstallation) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given int32 and assigns it to the StartDate field.
func (o *AbstractInstallation) SetStartDate(v int32) {
	o.StartDate = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *AbstractInstallation) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AbstractInstallation) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *AbstractInstallation) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *AbstractInstallation) SetStatus(v string) {
	o.Status = &v
}

// GetSubtype returns the Subtype field value
func (o *AbstractInstallation) GetSubtype() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subtype
}

// GetSubtypeOk returns a tuple with the Subtype field value
// and a boolean to check if the value has been set.
func (o *AbstractInstallation) GetSubtypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subtype, true
}

// SetSubtype sets field value
func (o *AbstractInstallation) SetSubtype(v string) {
	o.Subtype = v
}

func (o AbstractInstallation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AssetId != nil {
		toSerialize["assetId"] = o.AssetId
	}
	if o.AssetName != nil {
		toSerialize["assetName"] = o.AssetName
	}
	if o.AverageInstallationTime != nil {
		toSerialize["averageInstallationTime"] = o.AverageInstallationTime
	}
	if o.EndDate != nil {
		toSerialize["endDate"] = o.EndDate
	}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.LoadOrder != nil {
		toSerialize["loadOrder"] = o.LoadOrder
	}
	if o.StartDate != nil {
		toSerialize["startDate"] = o.StartDate
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["subtype"] = o.Subtype
	}
	return json.Marshal(toSerialize)
}

type NullableAbstractInstallation struct {
	value *AbstractInstallation
	isSet bool
}

func (v NullableAbstractInstallation) Get() *AbstractInstallation {
	return v.value
}

func (v *NullableAbstractInstallation) Set(val *AbstractInstallation) {
	v.value = val
	v.isSet = true
}

func (v NullableAbstractInstallation) IsSet() bool {
	return v.isSet
}

func (v *NullableAbstractInstallation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAbstractInstallation(val *AbstractInstallation) *NullableAbstractInstallation {
	return &NullableAbstractInstallation{value: val, isSet: true}
}

func (v NullableAbstractInstallation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAbstractInstallation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
