/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InputDeploymentRunOptions struct for InputDeploymentRunOptions
type InputDeploymentRunOptions struct {
	DeploymentRunName     *string                          `json:"deploymentRunName,omitempty"`
	EndState              string                           `json:"endState"`
	Description           *string                          `json:"description,omitempty"`
	VirtualizationRealmId *int32                           `json:"virtualizationRealmId,omitempty"`
	Locked                *bool                            `json:"locked,omitempty"`
	RetainOnError         *bool                            `json:"retainOnError,omitempty"`
	Username              string                           `json:"username"`
	Password              string                           `json:"password"`
	EarliestStartTime     *int32                           `json:"earliestStartTime,omitempty"`
	EndExisting           *bool                            `json:"endExisting,omitempty"`
	Duration              *int64                           `json:"duration,omitempty"`
	Properties            *[]InputProperty                 `json:"properties,omitempty"`
	HostOptions           *[]InputHostOption               `json:"hostOptions,omitempty"`
	PowerSchedule         *PowerSchedule                   `json:"powerSchedule,omitempty"`
	VirtRealmBinding      *InputVirtualizationRealmBinding `json:"virtRealmBinding,omitempty"`
	Id                    *int32                           `json:"id,omitempty"`
	Debug                 *bool                            `json:"debug,omitempty"`
	EndDate               *int32                           `json:"endDate,omitempty"`
	WindowsDomainName     *string                          `json:"windowsDomainName,omitempty"`
}

// NewInputDeploymentRunOptions instantiates a new InputDeploymentRunOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputDeploymentRunOptions(endState string, username string, password string) *InputDeploymentRunOptions {
	this := InputDeploymentRunOptions{}
	this.EndState = endState
	this.Username = username
	this.Password = password
	return &this
}

// NewInputDeploymentRunOptionsWithDefaults instantiates a new InputDeploymentRunOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputDeploymentRunOptionsWithDefaults() *InputDeploymentRunOptions {
	this := InputDeploymentRunOptions{}
	return &this
}

// GetDeploymentRunName returns the DeploymentRunName field value if set, zero value otherwise.
func (o *InputDeploymentRunOptions) GetDeploymentRunName() string {
	if o == nil || o.DeploymentRunName == nil {
		var ret string
		return ret
	}
	return *o.DeploymentRunName
}

// GetDeploymentRunNameOk returns a tuple with the DeploymentRunName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptions) GetDeploymentRunNameOk() (*string, bool) {
	if o == nil || o.DeploymentRunName == nil {
		return nil, false
	}
	return o.DeploymentRunName, true
}

// HasDeploymentRunName returns a boolean if a field has been set.
func (o *InputDeploymentRunOptions) HasDeploymentRunName() bool {
	if o != nil && o.DeploymentRunName != nil {
		return true
	}

	return false
}

// SetDeploymentRunName gets a reference to the given string and assigns it to the DeploymentRunName field.
func (o *InputDeploymentRunOptions) SetDeploymentRunName(v string) {
	o.DeploymentRunName = &v
}

// GetEndState returns the EndState field value
func (o *InputDeploymentRunOptions) GetEndState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndState
}

// GetEndStateOk returns a tuple with the EndState field value
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptions) GetEndStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndState, true
}

// SetEndState sets field value
func (o *InputDeploymentRunOptions) SetEndState(v string) {
	o.EndState = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InputDeploymentRunOptions) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptions) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InputDeploymentRunOptions) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InputDeploymentRunOptions) SetDescription(v string) {
	o.Description = &v
}

// GetVirtualizationRealmId returns the VirtualizationRealmId field value if set, zero value otherwise.
func (o *InputDeploymentRunOptions) GetVirtualizationRealmId() int32 {
	if o == nil || o.VirtualizationRealmId == nil {
		var ret int32
		return ret
	}
	return *o.VirtualizationRealmId
}

// GetVirtualizationRealmIdOk returns a tuple with the VirtualizationRealmId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptions) GetVirtualizationRealmIdOk() (*int32, bool) {
	if o == nil || o.VirtualizationRealmId == nil {
		return nil, false
	}
	return o.VirtualizationRealmId, true
}

// HasVirtualizationRealmId returns a boolean if a field has been set.
func (o *InputDeploymentRunOptions) HasVirtualizationRealmId() bool {
	if o != nil && o.VirtualizationRealmId != nil {
		return true
	}

	return false
}

// SetVirtualizationRealmId gets a reference to the given int32 and assigns it to the VirtualizationRealmId field.
func (o *InputDeploymentRunOptions) SetVirtualizationRealmId(v int32) {
	o.VirtualizationRealmId = &v
}

// GetLocked returns the Locked field value if set, zero value otherwise.
func (o *InputDeploymentRunOptions) GetLocked() bool {
	if o == nil || o.Locked == nil {
		var ret bool
		return ret
	}
	return *o.Locked
}

// GetLockedOk returns a tuple with the Locked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptions) GetLockedOk() (*bool, bool) {
	if o == nil || o.Locked == nil {
		return nil, false
	}
	return o.Locked, true
}

// HasLocked returns a boolean if a field has been set.
func (o *InputDeploymentRunOptions) HasLocked() bool {
	if o != nil && o.Locked != nil {
		return true
	}

	return false
}

// SetLocked gets a reference to the given bool and assigns it to the Locked field.
func (o *InputDeploymentRunOptions) SetLocked(v bool) {
	o.Locked = &v
}

// GetRetainOnError returns the RetainOnError field value if set, zero value otherwise.
func (o *InputDeploymentRunOptions) GetRetainOnError() bool {
	if o == nil || o.RetainOnError == nil {
		var ret bool
		return ret
	}
	return *o.RetainOnError
}

// GetRetainOnErrorOk returns a tuple with the RetainOnError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptions) GetRetainOnErrorOk() (*bool, bool) {
	if o == nil || o.RetainOnError == nil {
		return nil, false
	}
	return o.RetainOnError, true
}

// HasRetainOnError returns a boolean if a field has been set.
func (o *InputDeploymentRunOptions) HasRetainOnError() bool {
	if o != nil && o.RetainOnError != nil {
		return true
	}

	return false
}

// SetRetainOnError gets a reference to the given bool and assigns it to the RetainOnError field.
func (o *InputDeploymentRunOptions) SetRetainOnError(v bool) {
	o.RetainOnError = &v
}

// GetUsername returns the Username field value
func (o *InputDeploymentRunOptions) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptions) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *InputDeploymentRunOptions) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *InputDeploymentRunOptions) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptions) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *InputDeploymentRunOptions) SetPassword(v string) {
	o.Password = v
}

// GetEarliestStartTime returns the EarliestStartTime field value if set, zero value otherwise.
func (o *InputDeploymentRunOptions) GetEarliestStartTime() int32 {
	if o == nil || o.EarliestStartTime == nil {
		var ret int32
		return ret
	}
	return *o.EarliestStartTime
}

// GetEarliestStartTimeOk returns a tuple with the EarliestStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptions) GetEarliestStartTimeOk() (*int32, bool) {
	if o == nil || o.EarliestStartTime == nil {
		return nil, false
	}
	return o.EarliestStartTime, true
}

// HasEarliestStartTime returns a boolean if a field has been set.
func (o *InputDeploymentRunOptions) HasEarliestStartTime() bool {
	if o != nil && o.EarliestStartTime != nil {
		return true
	}

	return false
}

// SetEarliestStartTime gets a reference to the given int32 and assigns it to the EarliestStartTime field.
func (o *InputDeploymentRunOptions) SetEarliestStartTime(v int32) {
	o.EarliestStartTime = &v
}

// GetEndExisting returns the EndExisting field value if set, zero value otherwise.
func (o *InputDeploymentRunOptions) GetEndExisting() bool {
	if o == nil || o.EndExisting == nil {
		var ret bool
		return ret
	}
	return *o.EndExisting
}

// GetEndExistingOk returns a tuple with the EndExisting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptions) GetEndExistingOk() (*bool, bool) {
	if o == nil || o.EndExisting == nil {
		return nil, false
	}
	return o.EndExisting, true
}

// HasEndExisting returns a boolean if a field has been set.
func (o *InputDeploymentRunOptions) HasEndExisting() bool {
	if o != nil && o.EndExisting != nil {
		return true
	}

	return false
}

// SetEndExisting gets a reference to the given bool and assigns it to the EndExisting field.
func (o *InputDeploymentRunOptions) SetEndExisting(v bool) {
	o.EndExisting = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *InputDeploymentRunOptions) GetDuration() int64 {
	if o == nil || o.Duration == nil {
		var ret int64
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptions) GetDurationOk() (*int64, bool) {
	if o == nil || o.Duration == nil {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *InputDeploymentRunOptions) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given int64 and assigns it to the Duration field.
func (o *InputDeploymentRunOptions) SetDuration(v int64) {
	o.Duration = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *InputDeploymentRunOptions) GetProperties() []InputProperty {
	if o == nil || o.Properties == nil {
		var ret []InputProperty
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptions) GetPropertiesOk() (*[]InputProperty, bool) {
	if o == nil || o.Properties == nil {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *InputDeploymentRunOptions) HasProperties() bool {
	if o != nil && o.Properties != nil {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []InputProperty and assigns it to the Properties field.
func (o *InputDeploymentRunOptions) SetProperties(v []InputProperty) {
	o.Properties = &v
}

// GetHostOptions returns the HostOptions field value if set, zero value otherwise.
func (o *InputDeploymentRunOptions) GetHostOptions() []InputHostOption {
	if o == nil || o.HostOptions == nil {
		var ret []InputHostOption
		return ret
	}
	return *o.HostOptions
}

// GetHostOptionsOk returns a tuple with the HostOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptions) GetHostOptionsOk() (*[]InputHostOption, bool) {
	if o == nil || o.HostOptions == nil {
		return nil, false
	}
	return o.HostOptions, true
}

// HasHostOptions returns a boolean if a field has been set.
func (o *InputDeploymentRunOptions) HasHostOptions() bool {
	if o != nil && o.HostOptions != nil {
		return true
	}

	return false
}

// SetHostOptions gets a reference to the given []InputHostOption and assigns it to the HostOptions field.
func (o *InputDeploymentRunOptions) SetHostOptions(v []InputHostOption) {
	o.HostOptions = &v
}

// GetPowerSchedule returns the PowerSchedule field value if set, zero value otherwise.
func (o *InputDeploymentRunOptions) GetPowerSchedule() PowerSchedule {
	if o == nil || o.PowerSchedule == nil {
		var ret PowerSchedule
		return ret
	}
	return *o.PowerSchedule
}

// GetPowerScheduleOk returns a tuple with the PowerSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptions) GetPowerScheduleOk() (*PowerSchedule, bool) {
	if o == nil || o.PowerSchedule == nil {
		return nil, false
	}
	return o.PowerSchedule, true
}

// HasPowerSchedule returns a boolean if a field has been set.
func (o *InputDeploymentRunOptions) HasPowerSchedule() bool {
	if o != nil && o.PowerSchedule != nil {
		return true
	}

	return false
}

// SetPowerSchedule gets a reference to the given PowerSchedule and assigns it to the PowerSchedule field.
func (o *InputDeploymentRunOptions) SetPowerSchedule(v PowerSchedule) {
	o.PowerSchedule = &v
}

// GetVirtRealmBinding returns the VirtRealmBinding field value if set, zero value otherwise.
func (o *InputDeploymentRunOptions) GetVirtRealmBinding() InputVirtualizationRealmBinding {
	if o == nil || o.VirtRealmBinding == nil {
		var ret InputVirtualizationRealmBinding
		return ret
	}
	return *o.VirtRealmBinding
}

// GetVirtRealmBindingOk returns a tuple with the VirtRealmBinding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptions) GetVirtRealmBindingOk() (*InputVirtualizationRealmBinding, bool) {
	if o == nil || o.VirtRealmBinding == nil {
		return nil, false
	}
	return o.VirtRealmBinding, true
}

// HasVirtRealmBinding returns a boolean if a field has been set.
func (o *InputDeploymentRunOptions) HasVirtRealmBinding() bool {
	if o != nil && o.VirtRealmBinding != nil {
		return true
	}

	return false
}

// SetVirtRealmBinding gets a reference to the given InputVirtualizationRealmBinding and assigns it to the VirtRealmBinding field.
func (o *InputDeploymentRunOptions) SetVirtRealmBinding(v InputVirtualizationRealmBinding) {
	o.VirtRealmBinding = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InputDeploymentRunOptions) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptions) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InputDeploymentRunOptions) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *InputDeploymentRunOptions) SetId(v int32) {
	o.Id = &v
}

// GetDebug returns the Debug field value if set, zero value otherwise.
func (o *InputDeploymentRunOptions) GetDebug() bool {
	if o == nil || o.Debug == nil {
		var ret bool
		return ret
	}
	return *o.Debug
}

// GetDebugOk returns a tuple with the Debug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptions) GetDebugOk() (*bool, bool) {
	if o == nil || o.Debug == nil {
		return nil, false
	}
	return o.Debug, true
}

// HasDebug returns a boolean if a field has been set.
func (o *InputDeploymentRunOptions) HasDebug() bool {
	if o != nil && o.Debug != nil {
		return true
	}

	return false
}

// SetDebug gets a reference to the given bool and assigns it to the Debug field.
func (o *InputDeploymentRunOptions) SetDebug(v bool) {
	o.Debug = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *InputDeploymentRunOptions) GetEndDate() int32 {
	if o == nil || o.EndDate == nil {
		var ret int32
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptions) GetEndDateOk() (*int32, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *InputDeploymentRunOptions) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given int32 and assigns it to the EndDate field.
func (o *InputDeploymentRunOptions) SetEndDate(v int32) {
	o.EndDate = &v
}

// GetWindowsDomainName returns the WindowsDomainName field value if set, zero value otherwise.
func (o *InputDeploymentRunOptions) GetWindowsDomainName() string {
	if o == nil || o.WindowsDomainName == nil {
		var ret string
		return ret
	}
	return *o.WindowsDomainName
}

// GetWindowsDomainNameOk returns a tuple with the WindowsDomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputDeploymentRunOptions) GetWindowsDomainNameOk() (*string, bool) {
	if o == nil || o.WindowsDomainName == nil {
		return nil, false
	}
	return o.WindowsDomainName, true
}

// HasWindowsDomainName returns a boolean if a field has been set.
func (o *InputDeploymentRunOptions) HasWindowsDomainName() bool {
	if o != nil && o.WindowsDomainName != nil {
		return true
	}

	return false
}

// SetWindowsDomainName gets a reference to the given string and assigns it to the WindowsDomainName field.
func (o *InputDeploymentRunOptions) SetWindowsDomainName(v string) {
	o.WindowsDomainName = &v
}

func (o InputDeploymentRunOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DeploymentRunName != nil {
		toSerialize["deploymentRunName"] = o.DeploymentRunName
	}
	if true {
		toSerialize["endState"] = o.EndState
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.VirtualizationRealmId != nil {
		toSerialize["virtualizationRealmId"] = o.VirtualizationRealmId
	}
	if o.Locked != nil {
		toSerialize["locked"] = o.Locked
	}
	if o.RetainOnError != nil {
		toSerialize["retainOnError"] = o.RetainOnError
	}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if o.EarliestStartTime != nil {
		toSerialize["earliestStartTime"] = o.EarliestStartTime
	}
	if o.EndExisting != nil {
		toSerialize["endExisting"] = o.EndExisting
	}
	if o.Duration != nil {
		toSerialize["duration"] = o.Duration
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if o.HostOptions != nil {
		toSerialize["hostOptions"] = o.HostOptions
	}
	if o.PowerSchedule != nil {
		toSerialize["powerSchedule"] = o.PowerSchedule
	}
	if o.VirtRealmBinding != nil {
		toSerialize["virtRealmBinding"] = o.VirtRealmBinding
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Debug != nil {
		toSerialize["debug"] = o.Debug
	}
	if o.EndDate != nil {
		toSerialize["endDate"] = o.EndDate
	}
	if o.WindowsDomainName != nil {
		toSerialize["windowsDomainName"] = o.WindowsDomainName
	}
	return json.Marshal(toSerialize)
}

type NullableInputDeploymentRunOptions struct {
	value *InputDeploymentRunOptions
	isSet bool
}

func (v NullableInputDeploymentRunOptions) Get() *InputDeploymentRunOptions {
	return v.value
}

func (v *NullableInputDeploymentRunOptions) Set(val *InputDeploymentRunOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableInputDeploymentRunOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableInputDeploymentRunOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputDeploymentRunOptions(val *InputDeploymentRunOptions) *NullableInputDeploymentRunOptions {
	return &NullableInputDeploymentRunOptions{value: val, isSet: true}
}

func (v NullableInputDeploymentRunOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputDeploymentRunOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
