/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// OpenStackCloudSpaceRequestAllOf struct for OpenStackCloudSpaceRequestAllOf
type OpenStackCloudSpaceRequestAllOf struct {
	NatFlavorType *string `json:"natFlavorType,omitempty"`
	NatImageId *string `json:"natImageId,omitempty"`
	DnsServerIpAddresses *string `json:"dnsServerIpAddresses,omitempty"`
	ExternalNetworkName *string `json:"externalNetworkName,omitempty"`
}

// NewOpenStackCloudSpaceRequestAllOf instantiates a new OpenStackCloudSpaceRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOpenStackCloudSpaceRequestAllOf() *OpenStackCloudSpaceRequestAllOf {
	this := OpenStackCloudSpaceRequestAllOf{}
	return &this
}

// NewOpenStackCloudSpaceRequestAllOfWithDefaults instantiates a new OpenStackCloudSpaceRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOpenStackCloudSpaceRequestAllOfWithDefaults() *OpenStackCloudSpaceRequestAllOf {
	this := OpenStackCloudSpaceRequestAllOf{}
	return &this
}

// GetNatFlavorType returns the NatFlavorType field value if set, zero value otherwise.
func (o *OpenStackCloudSpaceRequestAllOf) GetNatFlavorType() string {
	if o == nil || o.NatFlavorType == nil {
		var ret string
		return ret
	}
	return *o.NatFlavorType
}

// GetNatFlavorTypeOk returns a tuple with the NatFlavorType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackCloudSpaceRequestAllOf) GetNatFlavorTypeOk() (*string, bool) {
	if o == nil || o.NatFlavorType == nil {
		return nil, false
	}
	return o.NatFlavorType, true
}

// HasNatFlavorType returns a boolean if a field has been set.
func (o *OpenStackCloudSpaceRequestAllOf) HasNatFlavorType() bool {
	if o != nil && o.NatFlavorType != nil {
		return true
	}

	return false
}

// SetNatFlavorType gets a reference to the given string and assigns it to the NatFlavorType field.
func (o *OpenStackCloudSpaceRequestAllOf) SetNatFlavorType(v string) {
	o.NatFlavorType = &v
}

// GetNatImageId returns the NatImageId field value if set, zero value otherwise.
func (o *OpenStackCloudSpaceRequestAllOf) GetNatImageId() string {
	if o == nil || o.NatImageId == nil {
		var ret string
		return ret
	}
	return *o.NatImageId
}

// GetNatImageIdOk returns a tuple with the NatImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackCloudSpaceRequestAllOf) GetNatImageIdOk() (*string, bool) {
	if o == nil || o.NatImageId == nil {
		return nil, false
	}
	return o.NatImageId, true
}

// HasNatImageId returns a boolean if a field has been set.
func (o *OpenStackCloudSpaceRequestAllOf) HasNatImageId() bool {
	if o != nil && o.NatImageId != nil {
		return true
	}

	return false
}

// SetNatImageId gets a reference to the given string and assigns it to the NatImageId field.
func (o *OpenStackCloudSpaceRequestAllOf) SetNatImageId(v string) {
	o.NatImageId = &v
}

// GetDnsServerIpAddresses returns the DnsServerIpAddresses field value if set, zero value otherwise.
func (o *OpenStackCloudSpaceRequestAllOf) GetDnsServerIpAddresses() string {
	if o == nil || o.DnsServerIpAddresses == nil {
		var ret string
		return ret
	}
	return *o.DnsServerIpAddresses
}

// GetDnsServerIpAddressesOk returns a tuple with the DnsServerIpAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackCloudSpaceRequestAllOf) GetDnsServerIpAddressesOk() (*string, bool) {
	if o == nil || o.DnsServerIpAddresses == nil {
		return nil, false
	}
	return o.DnsServerIpAddresses, true
}

// HasDnsServerIpAddresses returns a boolean if a field has been set.
func (o *OpenStackCloudSpaceRequestAllOf) HasDnsServerIpAddresses() bool {
	if o != nil && o.DnsServerIpAddresses != nil {
		return true
	}

	return false
}

// SetDnsServerIpAddresses gets a reference to the given string and assigns it to the DnsServerIpAddresses field.
func (o *OpenStackCloudSpaceRequestAllOf) SetDnsServerIpAddresses(v string) {
	o.DnsServerIpAddresses = &v
}

// GetExternalNetworkName returns the ExternalNetworkName field value if set, zero value otherwise.
func (o *OpenStackCloudSpaceRequestAllOf) GetExternalNetworkName() string {
	if o == nil || o.ExternalNetworkName == nil {
		var ret string
		return ret
	}
	return *o.ExternalNetworkName
}

// GetExternalNetworkNameOk returns a tuple with the ExternalNetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OpenStackCloudSpaceRequestAllOf) GetExternalNetworkNameOk() (*string, bool) {
	if o == nil || o.ExternalNetworkName == nil {
		return nil, false
	}
	return o.ExternalNetworkName, true
}

// HasExternalNetworkName returns a boolean if a field has been set.
func (o *OpenStackCloudSpaceRequestAllOf) HasExternalNetworkName() bool {
	if o != nil && o.ExternalNetworkName != nil {
		return true
	}

	return false
}

// SetExternalNetworkName gets a reference to the given string and assigns it to the ExternalNetworkName field.
func (o *OpenStackCloudSpaceRequestAllOf) SetExternalNetworkName(v string) {
	o.ExternalNetworkName = &v
}

func (o OpenStackCloudSpaceRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.NatFlavorType != nil {
		toSerialize["natFlavorType"] = o.NatFlavorType
	}
	if o.NatImageId != nil {
		toSerialize["natImageId"] = o.NatImageId
	}
	if o.DnsServerIpAddresses != nil {
		toSerialize["dnsServerIpAddresses"] = o.DnsServerIpAddresses
	}
	if o.ExternalNetworkName != nil {
		toSerialize["externalNetworkName"] = o.ExternalNetworkName
	}
	return json.Marshal(toSerialize)
}

type NullableOpenStackCloudSpaceRequestAllOf struct {
	value *OpenStackCloudSpaceRequestAllOf
	isSet bool
}

func (v NullableOpenStackCloudSpaceRequestAllOf) Get() *OpenStackCloudSpaceRequestAllOf {
	return v.value
}

func (v *NullableOpenStackCloudSpaceRequestAllOf) Set(val *OpenStackCloudSpaceRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableOpenStackCloudSpaceRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableOpenStackCloudSpaceRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOpenStackCloudSpaceRequestAllOf(val *OpenStackCloudSpaceRequestAllOf) *NullableOpenStackCloudSpaceRequestAllOf {
	return &NullableOpenStackCloudSpaceRequestAllOf{value: val, isSet: true}
}

func (v NullableOpenStackCloudSpaceRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOpenStackCloudSpaceRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


