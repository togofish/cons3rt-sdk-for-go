/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gocons3rt

import (
	"encoding/json"
)

// InputVirtualizationRealmNetwork struct for InputVirtualizationRealmNetwork
type InputVirtualizationRealmNetwork struct {
	Name string `json:"name"`
}

// NewInputVirtualizationRealmNetwork instantiates a new InputVirtualizationRealmNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputVirtualizationRealmNetwork(name string) *InputVirtualizationRealmNetwork {
	this := InputVirtualizationRealmNetwork{}
	this.Name = name
	return &this
}

// NewInputVirtualizationRealmNetworkWithDefaults instantiates a new InputVirtualizationRealmNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputVirtualizationRealmNetworkWithDefaults() *InputVirtualizationRealmNetwork {
	this := InputVirtualizationRealmNetwork{}
	return &this
}

// GetName returns the Name field value
func (o *InputVirtualizationRealmNetwork) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InputVirtualizationRealmNetwork) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InputVirtualizationRealmNetwork) SetName(v string) {
	o.Name = v
}

func (o InputVirtualizationRealmNetwork) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableInputVirtualizationRealmNetwork struct {
	value *InputVirtualizationRealmNetwork
	isSet bool
}

func (v NullableInputVirtualizationRealmNetwork) Get() *InputVirtualizationRealmNetwork {
	return v.value
}

func (v *NullableInputVirtualizationRealmNetwork) Set(val *InputVirtualizationRealmNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableInputVirtualizationRealmNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableInputVirtualizationRealmNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputVirtualizationRealmNetwork(val *InputVirtualizationRealmNetwork) *NullableInputVirtualizationRealmNetwork {
	return &NullableInputVirtualizationRealmNetwork{value: val, isSet: true}
}

func (v NullableInputVirtualizationRealmNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputVirtualizationRealmNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


