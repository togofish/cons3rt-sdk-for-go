/*
CONS3RT API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
Contact: support@cons3rt.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cons3rt

import (
	"encoding/json"
)

// MinimalContainerConfiguration struct for MinimalContainerConfiguration
type MinimalContainerConfiguration struct {
	Id            *int32                `json:"id,omitempty"`
	PortMapping   *ContainerPortMapping `json:"portMapping,omitempty"`
	ContainerName string                `json:"containerName"`
	RunArguments  *string               `json:"runArguments,omitempty"`
}

// NewMinimalContainerConfiguration instantiates a new MinimalContainerConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMinimalContainerConfiguration(containerName string) *MinimalContainerConfiguration {
	this := MinimalContainerConfiguration{}
	this.ContainerName = containerName
	return &this
}

// NewMinimalContainerConfigurationWithDefaults instantiates a new MinimalContainerConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMinimalContainerConfigurationWithDefaults() *MinimalContainerConfiguration {
	this := MinimalContainerConfiguration{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MinimalContainerConfiguration) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalContainerConfiguration) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MinimalContainerConfiguration) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MinimalContainerConfiguration) SetId(v int32) {
	o.Id = &v
}

// GetPortMapping returns the PortMapping field value if set, zero value otherwise.
func (o *MinimalContainerConfiguration) GetPortMapping() ContainerPortMapping {
	if o == nil || o.PortMapping == nil {
		var ret ContainerPortMapping
		return ret
	}
	return *o.PortMapping
}

// GetPortMappingOk returns a tuple with the PortMapping field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalContainerConfiguration) GetPortMappingOk() (*ContainerPortMapping, bool) {
	if o == nil || o.PortMapping == nil {
		return nil, false
	}
	return o.PortMapping, true
}

// HasPortMapping returns a boolean if a field has been set.
func (o *MinimalContainerConfiguration) HasPortMapping() bool {
	if o != nil && o.PortMapping != nil {
		return true
	}

	return false
}

// SetPortMapping gets a reference to the given ContainerPortMapping and assigns it to the PortMapping field.
func (o *MinimalContainerConfiguration) SetPortMapping(v ContainerPortMapping) {
	o.PortMapping = &v
}

// GetContainerName returns the ContainerName field value
func (o *MinimalContainerConfiguration) GetContainerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContainerName
}

// GetContainerNameOk returns a tuple with the ContainerName field value
// and a boolean to check if the value has been set.
func (o *MinimalContainerConfiguration) GetContainerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContainerName, true
}

// SetContainerName sets field value
func (o *MinimalContainerConfiguration) SetContainerName(v string) {
	o.ContainerName = v
}

// GetRunArguments returns the RunArguments field value if set, zero value otherwise.
func (o *MinimalContainerConfiguration) GetRunArguments() string {
	if o == nil || o.RunArguments == nil {
		var ret string
		return ret
	}
	return *o.RunArguments
}

// GetRunArgumentsOk returns a tuple with the RunArguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MinimalContainerConfiguration) GetRunArgumentsOk() (*string, bool) {
	if o == nil || o.RunArguments == nil {
		return nil, false
	}
	return o.RunArguments, true
}

// HasRunArguments returns a boolean if a field has been set.
func (o *MinimalContainerConfiguration) HasRunArguments() bool {
	if o != nil && o.RunArguments != nil {
		return true
	}

	return false
}

// SetRunArguments gets a reference to the given string and assigns it to the RunArguments field.
func (o *MinimalContainerConfiguration) SetRunArguments(v string) {
	o.RunArguments = &v
}

func (o MinimalContainerConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.PortMapping != nil {
		toSerialize["portMapping"] = o.PortMapping
	}
	if true {
		toSerialize["containerName"] = o.ContainerName
	}
	if o.RunArguments != nil {
		toSerialize["runArguments"] = o.RunArguments
	}
	return json.Marshal(toSerialize)
}

type NullableMinimalContainerConfiguration struct {
	value *MinimalContainerConfiguration
	isSet bool
}

func (v NullableMinimalContainerConfiguration) Get() *MinimalContainerConfiguration {
	return v.value
}

func (v *NullableMinimalContainerConfiguration) Set(val *MinimalContainerConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableMinimalContainerConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableMinimalContainerConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMinimalContainerConfiguration(val *MinimalContainerConfiguration) *NullableMinimalContainerConfiguration {
	return &NullableMinimalContainerConfiguration{value: val, isSet: true}
}

func (v NullableMinimalContainerConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMinimalContainerConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
